---
editor_options: 
   chunk_output_type: console
---

```{r}
#| label: setup-common-01
#| include: false
#| warning: false
source("includes/_common.R")
```

# Summary Nature {#sec-opennature}

Groups payment data by state, recipient type, and nature of payment

### Metadata

```{r}
#| label: s7_object
#| echo: false
end  <- open_endpoint("summary_nature")
print_meta(end)
```

## Data

```{r}
#| label: http_request
#| message: true
#| echo: false
comp_txt <- "Compensation for serving as faculty or as a speaker for an accredited or certified continuing education program"

resp <- list(
  quick("summary_nature", offset = 0, limit = 500),
  quick("summary_nature", offset = 500, limit = 500),
  quick("summary_nature", offset = 1000, limit = 500),
  quick("summary_nature", offset = 1500, limit = 500),
  quick("summary_nature", offset = 2000, limit = 500),
  quick("summary_nature", offset = 2500, limit = 500),
  quick("summary_nature", offset = 3000, limit = 500),
  quick("summary_nature", offset = 3500, limit = 500),
  quick("summary_nature", offset = 4000, limit = 500),
  quick("summary_nature", offset = 4500, limit = 500),
  quick("summary_nature", offset = 5000, limit = 500)
  ) |> 
  list_rbind() |> 
  fcompute(
    year           = factor_(program_year),
    country        = country_code,
    state          = state_code,
    recip_type     = factor_(recipient_type),
    pay_nature     = cheapr_if_else(nature_of_payment == comp_txt, "Faculty/Speaker Compensation", nature_of_payment),
    num_phys       = as.integer(total_number_of_physicians),
    num_npp        = as.integer(total_number_of_non_physician_practitioners),
    num_teach      = as.integer(total_number_of_teaching_hospitals),
    pay_phys       = as.double(total_payment_amount_physician),
    pay_npp        = as.double(total_payment_amount_non_physician_practitioner),
    pay_teach      = as.double(total_payment_amount_teaching_hospital),
    avg_pay_phys   = as.double(mean_total_payment_amount_physician),
    avg_pay_npp    = as.double(mean_total_payment_amount_non_physician_practitioner),
    avg_pay_teach  = as.double(mean_total_payment_amount_teaching_hospital),
    med_pay_phys   = as.double(median_total_payment_amount_physician),
    med_pay_npp    = as.double(median_total_payment_amount_non_physician_practitioner),
    med_pay_teach  = as.double(median_total_payment_amount_teaching_hospital),
    pmts_phys      = as.integer(total_payment_count_physician),
    pmts_npp       = as.integer(total_payment_count_non_physician_practitioner),
    pmts_teach     = as.integer(total_payment_count_teaching_hospital),
    avg_pmts_phys  = as.double(mean_total_payment_count_physician),
    avg_pmts_npp   = as.double(mean_total_payment_count_non_physician_practitioner),
    avg_pmts_teach = as.double(mean_total_payment_count_teaching_hospital),
    med_pmts_phys  = as.double(median_total_payment_count_physician),
    med_pmts_npp   = as.double(median_total_payment_count_non_physician_practitioner),
    med_pmts_teach = as.double(median_total_payment_count_teaching_hospital)
  )

resp |> 
  fcount(pay_nature) |> 
  _$pay_nature |> 
  cat(sep = "\n")
```


```{r}
descr(resp)
```

