---
title: "DCAT Metadata Schema"
editor_options: 
   chunk_output_type: console
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
source("_common.R")

htmltools::tagList(
  btn_link(
    "https://resources.data.gov/resources/dcat-us/", 
    "DCAT Schema"),
  btn_link(
    "https://resources.data.gov/schemas/dcat-us/v1.1/iso8601_guidance/#accrualperiodicity", 
    "ISO8601"))
```

## `dataset` Fields

   * [Data Catalog Vocabulary (DCAT) - Version 3](https://www.w3.org/TR/vocab-dcat/)

### `bureauCode`

Federal agencies, combined agency and bureau code from [OMB Circular A-11, Appendix C](https://obamawhitehouse.archives.gov/sites/default/files/omb/assets/a11_current_year/app_c.pdf). 

> __Format__: `015:11`

```{r}
#| label: bureauCodes
bureau_code()
```

### `programCode`

Federal agencies, list the primary program related to this data asset, from the [Federal Program Inventory](https://resources.data.gov/schemas/dcat-us/v1.1/FederalProgramInventory_FY13_MachineReadable_091613.csv). 

> __Format__: `015:001`

```{r}
#| label: programCodes
program_code()
```

### `accrualPeriodicity`

```{r}
#| label: accrualPeriodicity
tibble(
  accrualPeriodicity = c(
  "R/PT1S",   "R/PT1H",  "R/P1D", "R/P3.5D", 
  "R/P0.33W", "R/P0.5W", "R/P1W", "R/P2W", 
  "R/P0.33M", "R/P0.5M", "R/P1M", "R/P2M",
  "R/P3M",    "R/P4M",   "R/P6M", "R/P1Y",
  "R/P2Y",    "R/P3Y",   "R/P4Y", "R/P10Y"),
  accrualDescription = providertwo::recode_iso8601(accrualPeriodicity))

```

### DCAT JSON Schemas

#### Catalog

```{r}
read_json_arrow(
  here("data/dcat-us_v1.1_schema_catalog.json")) |> 
  collect() |> 
  unnest(properties) |> 
  unnest(`@context`, names_sep = "_") |> 
  unnest(`@id`, names_sep = "_") |> 
  unnest(`@type`, names_sep = "_") |> 
  unnest(`@type_enum`, names_sep = "_") |> 
  unnest(conformsTo, names_sep = "_") |> 
  unnest(conformsTo_enum, names_sep = "_") |> 
  unnest(describedBy, names_sep = "_") |> 
  unnest(dataset, names_sep = "_") |> 
  unnest(dataset_items, names_sep = "_") |> 
  mutate(dependencies = delist(dependencies),
         required = flatten_column(required)) |> 
  rename_with(replace_open_columns) |> 
  purse()
```

#### Dataset

```{r}
read_json_arrow(
  here("data/dcat-us_v1.1_schema_dataset.json")) |> 
  collect() |> 
  unnest(properties, names_sep = "_") |> 
  # unnest(`properties_@type`, names_sep = "_") |> 
  # unnest(properties_accessLevel, names_sep = "_") |> 
  # unnest(properties_rights, names_sep = "_") |> 
  # unnest(properties_accrualPeriodicity, names_sep = "_") |> 
  # unnest(properties_bureauCode, names_sep = "_") |> 
  # unnest(properties_contactPoint, names_sep = "_") |> 
  # unnest(properties_describedBy, names_sep = "_") |> 
  # unnest(properties_describedByType, names_sep = "_") |> 
  # unnest(properties_conformsTo, names_sep = "_") |> 
  # unnest(properties_rights_anyOf, names_sep = "_") |> 
  # unnest(properties_accrualPeriodicity_anyOf, names_sep = "_") |> 
  mutate(
    required = flatten_column(required)) |> 
    # `properties_@type_enum` = delist(`properties_@type_enum`),
    # properties_accessLevel_enum = flatten_column(properties_accessLevel_enum),
    # properties_accrualPeriodicity_anyOf_enum = flatten_column(properties_accrualPeriodicity_anyOf_enum)) |> 
  rename_with(replace_open_columns) |> 
  glimpse()
```

#### Distribution

```{r}
read_json_arrow(
  here("data/dcat-us_v1.1_schema_distribution.json")) |> 
  collect() |> 
  unnest(properties, names_sep = "_") |> 
  mutate(dependencies = flatten_column(dependencies)) |> 
  rename_with(replace_open_columns) |> 
  glimpse()
```

