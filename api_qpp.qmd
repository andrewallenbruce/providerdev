# QPP Eligibility {#sec-qppapi}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")
```

   * [QPP Eligibility API Documentation](https://cmsgov.github.io/qpp-eligibility-docs/)
   * [QPP Eligibility REST API Documentation](https://qpp.cms.gov/api/eligibility/docs/)
   * [Quality Eligibility development #61](https://github.com/andrewallenbruce/provider/issues/61)

## Stats Endpoint

```{r}
# qpp_stats <- function(year) {
#   
#   x <- glue(
#     "https://qpp.cms.gov/api/eligibility/stats/?year={year}"
#     ) |> 
#     request() |>
#     req_headers(Accept = "application/vnd.qpp.cms.gov.v6+json") |>
#     req_perform() |>
#     resp_simple_json() |> 
#     _[["data"]]
#   
#   new_df(
#     year              = as_int(year),
#     ind_hcc_risk_avg  = x$individual$hccRiskScoreAverage,
#     ind_dual_elig_avg = x$individual$dualEligibilityAverage,
#     grp_hcc_risk_avg  = x$group$hccRiskScoreAverage,
#     grp_dual_elig_avg = x$group$dualEligibilityAverage
#     )
# }
# 
# map(2018:2025, qpp_stats) |> 
#   rowbind()
```


```{r}
#| label: stats_endpoint
qpp_stats <- function(year) {
  f <- function(x) {
    i <- glue("https://qpp.cms.gov/api/eligibility/stats/?year={x}") |>
      request() |>
      req_headers(Accept = "application/vnd.qpp.cms.gov.v6+json") |>
      req_perform() |>
      resp_simple_json() |>
      _[["data"]]
    
    new_tbl(
      year = rep(as_int(x), 4),
      category = c(rep("Individual", 2), rep("Group", 2)),
      statistic = rep(c("HCC Risk Score", "Dual Eligibility"), 2),
      mean = c(
        i$individual$hccRiskScoreAverage,
        i$individual$dualEligibilityAverage,
        i$group$hccRiskScoreAverage,
        i$group$dualEligibilityAverage
      )
    )
  }
  map(year, f) |>
    rowbind()
}

qpp_stats(year = 2018:2025) |> 
  print(n = 40)
```

## Main Endpoint

```{r}
#| label: main_endpoint
qpp_elig <- function(npi, year) {
  
  glue("https://qpp.cms.gov/api/eligibility/npis/{npi}/?year={year}") |> 
  request() |>
  req_headers(Accept = "application/vnd.qpp.cms.gov.v6+json") |>
  req_error(body = \(resp) resp_body_json(resp)$error$message) |>
  req_perform() |>
  resp_simple_json() |> 
  _[["data"]] |> 
  as_tbl()
  
}

qpp_elig(npi = 1043477615, year = 2024)

qpp_elig(npi = 1144544834, year = 2024)

qpp_elig(npi = 1932365699, year = 2024)
```


```{r}
# qpp_elig(npi = 1932365699, year = 2024) |> 
# qpp_elig(npi = 1144544834, year = 2024) |> 
qpp_elig(npi = 1043477615, year = 2024) |>
  unnest_wider(specialty, names_sep = "_") |>
  unnest_wider(organizations, names_sep = "_") |>
  unnest_wider(organizations_apms, names_sep = "_") |>
  unnest_wider(organizations_virtualGroups, names_sep = "_") |>
  unnest_wider(organizations_individualScenario, names_sep = "_") |>
  unnest_wider(organizations_groupScenario, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_extremeHardshipReasons, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_extremeHardshipSources, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_lowVolumeStatusReasons, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_lowVolumeStatusReasons_1, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_specialty, names_sep = "_") |>
  unnest_wider(organizations_individualScenario_isEligible, names_sep = "_") |>
  unnest_wider(organizations_groupScenario_extremeHardshipReasons, names_sep = "_") |>
  unnest_wider(organizations_groupScenario_extremeHardshipSources, names_sep = "_") |>
  unnest_wider(organizations_groupScenario_lowVolumeStatusReasons, names_sep = "_") |>
  unnest_wider(organizations_groupScenario_isEligible, names_sep = "_") |>
  purse()
```

### GraphQL API

   * [Basic Clinician GraphQL Example](https://cmsgov.github.io/qpp-eligibility-docs/clinician)
   * [QPP Eligibility GraphQL API Documentation](https://qpp.cms.gov/api/eligibility/graphql)

## Data Dictionary

```{r}
#| label: dict_base
list(
  year                     = 'Year',
  npi                      = 'National Provider Identifier (NPI) is a unique 10-digit identification number issued to health care providers by CMS',
  npi_type                 = 'Numeric code describing the type of provider that is is represented by the National Provider Identifier (NPI)',
  first                    = 'Provider first name',
  middle                   = 'Provider middle name',
  last                     = 'Provider last name',
  specialty_description    = 'Provider specialty',
  specialty_type           = 'Provider specialty type',
  specialty_category       = 'Provider specialty category',
  specialty_code           = 'Provider specialty code, two-character code for a clinicians occupation',
  first_approved_date      = 'The first date an enrollment was approved for this NPI across all enrollments',
  years_in_medicare        = 'Number of years since first_approved_date',
  pecos_year               = 'Year of enrollment into Provider Enrollment, Chain and Ownership System (PECOS)',
  newly_enrolled           = 'Is provider newly enrolled?',
  qp_status                = 'Qualifying APM Participant. Allowed values: Y, N, P, Q, R.',
  is_maqi                  = 'Has clinician been granted a MAQI Demonstration Waiver?',
  qp_score_type            = 'The category in which an APM participant is QP. Allowed values: MI, ME, AE, AT, AI.',
  amsMipsEligibleClinician = 'MIPS Eligible Clinician (EC) Indicator',
  organizations            = NA_character_,
  prvdrOrgName             = 'If provider is a practice, rather than an individual, practice name will be displayed.',
  isFacilityBased          = 'True if the threshold of facility based encounters is met',
  address                  = 'Uppercased street number, street name, and street suffix abbreviation. Can include secondary unit information such as suite.',
  city                     = 'Address city',
  state                    = 'Nine digit zip code',
  zip                      = 'Uppercased state abbreviation',
  hospitalVbpName          = 'Facility name within the Hospital Value-Based Purchasing Program'
) |> 
  fuimus::print_ls()
```

### Individual Scenario

```{r}
#| label: dict_individual_scenario
list(
  aciHardship              = 'True if there is an approved ACI Hardship Exemption application',
  aciReweighting           = 'True if the group meets the conditions necessary for ACI Reweighting',
  aggregationLevel         = 'Allowed values: 1, 2',
  ambulatorySurgicalCenter = 'True if clinician met the threshold for being designated as an Ambulatory Surgical Center (ASC). ASCs provide surgery without an overnight hospital stay.',
  eligibilityScenario      = 'Number reflecting the eligibility profile which is used to manage user interface messaging. This value has no impact on eligibility and is simply used to control UI content.',
  extremeHardship          = 'True if Extreme and Uncontrollable Circumstance Exemption credit has been received',
  extremeHardshipEventType = 'Type of extreme hardship event',
  extremeHardshipReasons   = NA_character_,
  quality                  = 'True if extreme hardship exemption due to quality',
  improvementActivities    = 'True if extreme hardship exemption due to improvement activities',
  aci                      = 'True if extreme hardship exemption due to aci',
  cost                     = 'True if extreme hardship exemption due to cost',
  extremeHardshipSources   = NA_character_,
  Items                    = 'Extreme hardship reporting source. Allowed values: auto-fema, manual, auto-covid.',
  hasHospitalVbpCCN        = 'True if TIN-NPI has a Hospital Value-Based CCN',
  hasPaymentAdjustmentCCN  = 'True if TIN-NPI has a Payment Adjustment CCN',
  hospitalBasedClinician   = 'True if clinician met the threshold of hospital-based expenditures',
  hospitalVbpName          = 'Facility name within the Hospital Value-Based Purchasing Program',
  hospitalVbpScore         = 'Hospital Value-Based Purchasing Program score',
  hpsaClinician            = 'True if clinician has at least one claim with an HPSA designation',
  iaStudy                  = 'True if Improvement Activities Study data is present',
  isEligible               = NA_character_,
  individual               = 'flag',
  group                    = 'flag',
  mipsApm                  = 'flag',
  virtualGroup             = 'flag',
  isFacilityBased          = 'True if the threshold of facility based encounters is met',
  isOptedIn                = 'Whether the entity has opted in or opted out. Will be null if no decision has been made.',
  isOptInEligible          = 'Whether the entity is eligible to opt in.',
  lowVolumeServices        = 'Number of claim lines counted toward low volume service threshold',
  lowVolumeStatusReasons   = NA_character_,
  lowVolumeSwitch          = 'Fell below the low volume threshold',
  lowVolStusRsnCd          = 'If lowVolumeSwitch is true, this array will contain the reasons for the status. Possible values: BENE: Clinician’s number of unique beneficiaries fell below the low volume threshold. CHRG: Clinician’s Part B expenditures fell below the low volume threshold. SRVC: Clinician’s low volume services fell below the low volume threshold. BOTH: Both the clinician’s number of unique beneficiaries and Part B expenditures fell below the low volume threshold. BENE_SRVC: Both the clinician’s number of unique beneficiaries and low volume services fell below the low volume threshold. CHRG_SRVC: Both the clinician’s Part B expenditures and low volume services fell below the low volume threshold. ALL: Clinician’s number of unique beneficiaries, Part B expenditures, and low volume services fell below the low volume threshold.',
  lowVolStusRsnDesc        = 'Description of lowVolStusRsnCd',
  mipsEligibleSwitch       = 'Clinician is a provider type that is eligible for Merit-Based Payment Incentive System (MIPS)',
  nonPatientFacing         = 'True if patient-facing encounters met the encounter threshold',
  optInDecisionDate        = 'The date of the opt-in decision.',
  ruralClinician           = 'True if clinician has at least one claim with a zip code designated as rural',
  smallGroupPractitioner   = 'True if 15 or fewer clinicians bill under the group'
) |> 
  fuimus::print_ls()
```

### Group Scenario

```{r}
#| label: dict_group_scenario
list(
  aciHardship              = 'True if there is an approved ACI Hardship Exemption application',
  aciReweighting           = 'True if the group meets the conditions necessary for ACI Reweighting',
  aggregationLevel         = 'Allowed values: 1, 2',
  ambulatorySurgicalCenter = 'True if clinician met the threshold for being designated as an Ambulatory Surgical Center (ASC). ASCs provide surgery without an overnight hospital stay.',
  eligibilityScenario      = 'Number reflecting the eligibility profile which is used to manage user interface messaging. This value has no impact on eligibility and is simply used to control UI content.',
  extremeHardship          = 'True if Extreme and Uncontrollable Circumstance Exemption credit has been received',
  extremeHardshipEventType = 'Type of extreme hardship event',
  extremeHardshipReasons   = NA_character_,
  quality                  = 'True if extreme hardship exemption due to quality',
  improvementActivities    = 'True if extreme hardship exemption due to improvement activities',
  aci                      = 'True if extreme hardship exemption due to aci',
  cost                     = 'True if extreme hardship exemption due to cost',
  extremeHardshipSources   = 'Extreme hardship reporting source. Allowed values: auto-fema, manual, auto-covid.',
  hasHospitalVbpCCN        = 'True if TIN-NPI has a Hospital Value-Based CCN',
  hasPaymentAdjustmentCCN  = 'True if TIN-NPI has a Payment Adjustment CCN',
  hospitalBasedClinician   = 'True if clinician met the threshold of hospital-based expenditures',
  hospitalVbpName          = 'Facility name within the Hospital Value-Based Purchasing Program',
  hospitalVbpScore         = 'Hospital Value-Based Purchasing Program score',
  hpsaClinician            = 'True if clinician has at least one claim with an HPSA designation',
  iaStudy                  = 'True if Improvement Activities Study data is present',
  isEligible               = NA_character_,
  group                    = 'flag',
  mipsApm                  = 'flag',
  virtualGroup             = 'flag',
  isFacilityBased          = 'True if the threshold of facility based encounters is met',
  isOptedIn                = 'Whether the entity has opted in or opted out. Will be null if no decision has been made.',
  isOptInEligible          = 'Whether the entity is eligible to opt in.',
  lowVolumeServices        = 'Number of claim lines counted toward low volume service threshold',
  lowVolumeStatusReasons   = NA_character_,
  lowVolumeSwitch          = 'Fell below the low volume threshold',
  lowVolStusRsnCd          = 'If lowVolumeSwitch is true, this array will contain the reasons for the status. Possible values: BENE: Clinician’s number of unique beneficiaries fell below the low volume threshold. CHRG: Clinician’s Part B expenditures fell below the low volume threshold. SRVC: Clinician’s low volume services fell below the low volume threshold. BOTH: Both the clinician’s number of unique beneficiaries and Part B expenditures fell below the low volume threshold. BENE_SRVC: Both the clinician’s number of unique beneficiaries and low volume services fell below the low volume threshold. CHRG_SRVC: Both the clinician’s Part B expenditures and low volume services fell below the low volume threshold. ALL: Clinician’s number of unique beneficiaries, Part B expenditures, and low volume services fell below the low volume threshold.',
  lowVolStusRsnDesc        = 'Description of lowVolStusRsnCd',
  mipsEligibleSwitch       = 'Clinician is a provider type that is eligible for Merit-Based Payment Incentive System (MIPS)',
  nonPatientFacing         = 'True if patient-facing encounters met the encounter threshold',
  optInDecisionDate        = 'The date of the opt-in decision.',
  ruralClinician           = 'True if clinician has at least one claim with a zip code designated as rural',
  smallGroupPractitioner   = 'True if 15 or fewer clinicians bill under the group'
) |> 
  fuimus::print_ls()
```

### APM Scenario

```{r}
#| label: dict_apm_scenario
list(
  entityName               = 'Official name of the Organization',
  lvtFlag                  = 'Indicates if the APM Entity is below the low volume threshold',
  lvtPayments              = 'Total aggregated expenditures of the APM Entity',
  lvtPatients              = 'Total number of unique patients of the APM Entity',
  lvtSmallStatus           = 'Whether the APM Entity has Small Practice status',
  lvtPerformanceYear       = 'The relevant year for the APM dataset',
  apmId                    = 'Unique combination of characters, numbers or symbols that are assigned by CMS Model operations to support establishing the identity of an APM Program',
  apmName                  = 'Formal label by which the APM Program is identified',
  subdivisionId            = 'Identifier for a specific grouping within the APM Program for QPP purposes',
  subdivisionName          = 'Identification label for the QPP Subdivision',
  advancedApmFlag          = 'APMs that require MIPS comparable measures, use of CEHRT, and more than nominal downside risk. Eligible clinicians that participate in Advanced APMs are able to become QPs and receive a 5% bonus and be exempt from MIPS.',
  mipsApmFlag              = 'APMs that already assess participants on cost and quality under the terms of the APM.',
  providerRelationshipCode = 'Identifier of the APM Program Provider Relationship Type',
  qpPatientScores          = 'ae, ai, at, me, mi',
  qpPaymentScores          = 'ae, ai, at, me, mi',
  complexPatientScore      = 'Composite Complex-Patient Score calculated by a combination of the dual eligibility ratio and the Hierarchical Conditions Category (HCC) risk score; max 5.00, min 0.00. The value of this field will be null when the requestor is not authorized to view data for the associated practice/TIN.',
  finalQpcScore            = NA_character_,
  extremeHardship          = 'True if Extreme and Uncontrollable Circumstance Exemption credit has been received',
  extremeHardshipReasons   = NA_character_,
  quality                  = 'True if extreme hardship exemption due to quality',
  improvementActivities    = 'improvementActivities',
  aci                      = 'True if extreme hardship exemption due to aci',
  cost                     = 'True if extreme hardship exemption due to cost',
  extremeHardshipEventType = 'Type of extreme hardship event',
  extremeHardshipSources   = 'Extreme hardship reporting source. Allowed values: auto-fema, manual, auto-covid.',
  isOptedIn                = 'Whether the entity has opted in or opted out. Will be null if no decision has been made.'
) |> 
  fuimus::print_ls()
```

### Virtual Group Scenario

```{r}
#| label: dict_virtual_group_scenario
list(
  virtualGroupIdentifier = 'Masked Virtual Group identifier.',
  claimsTypes            = 'Type of claims made by this Virtual Group.',
  lowVolumeStatusReasons = NA_character_,
  lowVolumeSwitch        = 'Fell below the low volume threshold',
  lowVolStusRsnCd        = 'If lowVolumeSwitch is true, this array will contain the reasons for the status. Possible values: BENE: Clinician’s number of unique beneficiaries fell below the low volume threshold. CHRG: Clinician’s Part B expenditures fell below the low volume threshold. SRVC: Clinician’s low volume services fell below the low volume threshold. BOTH: Both the clinician’s number of unique beneficiaries and Part B expenditures fell below the low volume threshold. BENE_SRVC: Both the clinician’s number of unique beneficiaries and low volume services fell below the low volume threshold. CHRG_SRVC: Both the clinician’s Part B expenditures and low volume services fell below the low volume threshold. ALL: Clinician’s number of unique beneficiaries, Part B expenditures, and low volume services fell below the low volume threshold.',
  lowVolStusRsnDesc      = 'Description of lowVolStusRsnCd',
  beneficiaryCount       = 'Number of patients used to determine low volume threshold status',
  allowedCharges         = 'Billing amount used to determine low volume threshold status',
  hospitalVbpName        = 'Facility name within the Hospital Value-Based Purchasing Program',
  isFacilityBased        = 'True if the threshold of facility based encounters is met',
  hospitalVbpScore       = 'Hospital Value-Based Purchasing Program score'
) |> 
  fuimus::print_ls()
```

### Special Scenario

```{r}
#| label: dict_special_scenario
list(
  aciReweighting           = 'True if the group meets the conditions necessary for ACI Reweighting',
  nonPatientFacing         = 'True if patient-facing encounters met the encounter threshold',
  ruralClinician           = 'True if clinician has at least one claim with a zip code designated as rural',
  hpsaClinician            = 'True if clinician has at least one claim with an HPSA designation',
  hospitalBasedClinician   = 'True if clinician met the threshold of hospital-based expenditures',
  ambulatorySurgicalCenter = 'True if clinician met the threshold for being designated as an Ambulatory Surgical Center (ASC). ASCs provide surgery without an overnight hospital stay.',
  aciHardship              = 'True if there is an approved ACI Hardship Exemption application',
  iaStudy                  = 'True if Improvement Activities Study data is present',
  smallGroupPractitioner   = 'True if 15 or fewer clinicians bill under the group',
  extremeHardship          = 'True if Extreme and Uncontrollable Circumstance Exemption credit has been received',
  extremeHardshipReasons   = NA_character_,
  quality                  = 'True if extreme hardship exemption due to quality',
  improvementActivities    = 'improvementActivities',
  aci                      = 'True if extreme hardship exemption due to aci',
  cost                     = 'True if extreme hardship exemption due to cost',
  extremeHardshipEventType = 'Type of extreme hardship event',
  extremeHardshipSources   = 'Extreme hardship reporting source. Allowed values: auto-fema, manual, auto-covid.'
) |> 
  fuimus::print_ls()
```

### MAQI

   * [Medicare Advantage Qualifying Payment Arrangement Incentive](https://www.cms.gov/newsroom/fact-sheets/medicare-advantage-qualifying-payment-arrangement-incentive-demonstration)

_The Centers for Medicare & Medicaid Services (CMS) is announcing the **Medicare Advantage Qualifying Payment Arrangement Incentive (MAQI)** Demonstration. The MAQI Demonstration will be tested under the authority of Section 402 of the Social Security Amendments of 1967 (as amended)._

_The MAQI Demonstration is designed to test whether exempting Merit-based Incentive Payment System (MIPS) -eligible clinicians who participate to a sufficient degree in certain payment arrangements with Medicare Advantage Organizations (MAOs) from the MIPS reporting requirements and payment adjustment will increase or maintain participation in payment arrangements similar to Advanced APMs with MAOs and change the manner in which clinicians deliver care. In the 2019 Physician Fee Schedule proposed rule, released today, CMS is proposing a regulation to effectuate the waivers contemplated under the MAQI Demonstration because the budget neutrality requirement in MIPS means that exempting MIPS eligible clinicians could have an impact on the payment adjustments for other MIPS eligible clinicians. Details of the MAQI Demonstration will remain under development until the 2019 Physician Fee Schedule proposed rule is finalized. The Demonstration will test whether:_

   * There is an increase in clinician participation in payment arrangements with MAOs that meet the criteria of Qualifying Payment Arrangements
   * Participating in Qualifying Payment Arrangements and Advanced APMs to the degree required to be eligible for the Demonstration Waiver incentivizes providers to transform their care delivery (assessed by interviews with participating clinicians)
   * Whether there is a change in utilization patterns among participants in the Demonstration
   * If there are changes in utilization, how those changes affect MA plan bids


<details><summary><b>BACKGROUND</b></summary>
<p>

Under current law, eligible clinicians may participate in one of two paths of the Quality Payment Program (QPP): 1) MIPS, which adjusts Medicare payments based on combined performance on measures of quality, cost, improvement activities, and promoting interoperability, or 2) Advanced APMs, under which eligible clinicians may earn an incentive payment for sufficient participation in certain payment arrangements with Fee-for-Service (FFS) and, starting in the 2019 performance period, with a combination of those Medicare FFS arrangements and similar arrangements with other payers such as Medicare Advantage commercial payers, and Medicaid managed care. To participate in the Advanced APM path of QPP for a given year and earn an incentive payment, eligible clinicians must be determined to be Qualifying APM Participants (QPs); in addition to earning an APM incentive payment, QPs are excluded from the MIPS reporting requirements and payment adjustment.

An eligible clinician may become a QP through one of two options: the Medicare Option (which only includes Medicare FFS, not Medicare Advantage), or the All-Payer Combination Option. Under the Medicare Option, which began with the 2017 performance period, eligible clinicians can be QPs if they meet certain thresholds for participation in Advanced APMs, which are Medicare FFS payment arrangements that meet certain criteria. Under the All-Payer Combination Option, which will begin with the 2019 performance period, eligible clinicians can also be QPs if they meet a minimum threshold for participation in Advanced APMs (lower than the threshold required under the Medicare Option) and certain All-Payer Combination Option thresholds that include participation in both Advanced APMs and Other Payer Advanced APMs, which are payment arrangements with other payers that meet similar criteria to those for Advanced APMs. Eligible clinicians who do not meet the thresholds to become QPs for a year can meet lower thresholds to become “Partial QPs,” which allows them the option to be excluded from the MIPS reporting requirements and payment adjustment, but does not earn them an APM incentive payment. An eligible clinician that does not meet the criteria to be a QP or a Partial QP for a given year is subject to MIPS for that year unless the clinician meets certain other MIPS exclusion criteria, such as being newly enrolled in Medicare or meeting the low volume threshold for Medicare FFS patients, payments, or services.

The MAQI Demonstration will allow participating clinicians to have the opportunity to be eligible for waivers that will exempt them from the MIPS reporting requirements and payment adjustment for a given year if they participate to a sufficient degree in Qualifying Payment Arrangements with MAOs (combined with participation in Advanced APMs with Medicare FFS, if any) during the performance period for that year, without requiring them to be QPs or Partial QPs, or to otherwise meet MIPS exclusion criteria. The Demonstration will permit consideration of participation in “Qualifying Payment Arrangements” with Medicare Advantage plans that meet the criteria to be Other Payer Advanced APMs a year before the All-Payer Combination Option is available. Under the Demonstration, clinicians will not have to have a minimum amount of participation in an Advanced APM with Medicare FFS in order to be exempt from the MIPS reporting requirements and payment adjustment for a year. However, if clinicians participate in one or more Advanced APMs with Medicare FFS, that participation will also be counted towards the thresholds that qualify participants for the waiver under this Demonstration from the MIPS reporting requirements and payment adjustment. Demonstration participants who do not meet the thresholds to receive waivers from MIPS reporting requirements and payment adjustments for a given year may still continue participation in the Demonstration and will be notified with sufficient time to complete MIPS reporting for the year. The Demonstration will not grant QP status to participating clinicians; participating clinicians would still have to meet the thresholds for participation under the Medicare Option or All-Payer Combination Option in order to become QPs and earn the incentive payment.

Under section 1848(q)(6)(F)(ii) of the Act, MIPS payment adjustments must be budget neutral in the aggregate. Therefore, removing MIPS eligible clinicians from the population across which positive and negative payment adjustments are calculated under MIPS may affect the payment adjustments for other MIPS eligible clinicians. The Demonstration would remove certain clinicians from the pool of MIPS eligible clinicians for which the MIPS payment adjustments are calculated, thereby decreasing the pool of MIPS eligible clinicians included in the budget neutrality determination. This may have the effect of increasing or decreasing the number of MIPS eligible clinicians receiving negative or positive payment adjustments. The Demonstration is contingent on the outcome of the proposed rule to adopt the waivers because of its effect on MIPS payment adjustments for other clinicians.

In addition, the MAQI demonstration will include a waiver of the requirement that the Secretary permit all eligible professionals to voluntarily report even if they are not required to do so under MIPS regulations, so that the Demonstration will prohibit reporting under the MIPS by clinicians who participate in the Demonstration and meet the thresholds to receive the waivers from MIPS reporting and payment consequences for a given year. 

The first performance period for the Demonstration will be 2018, and the Demonstration will last for five years.

</p>
</details> 

#### Qualifying Thresholds for Waiver

Eligibility for the Demonstration Waiver is conditioned on the participating clinician meeting a combined threshold for participation in Qualifying Payment Arrangements and Advanced APMs. There are two methods used to measure participation: payments and patients. The participation thresholds match the thresholds under the Medicare Option of the QPP. Similar to the QPP, clinicians may meet either of the two thresholds and the Demonstration will use whichever threshold is more advantageous to the clinician. 

_The thresholds for the Demonstration will be:_

| Performance Year | Payment Amount | Patient Count | 
|------------------|----------------|---------------|
| 2018             | 25%            | 20%           |
| 2019             | 50%            | 35%           |
| 2020             | 50%            | 35%           |
| 2021             | 75%            | 50%           |
| 2022             | 75%            | 50%           | 


The payment amount threshold score will be calculated by dividing a numerator (the aggregate of payments for Medicare Part B covered professional services furnished by the clinician during the Performance Period to beneficiaries attributed to the clinician through Advanced APM(s), plus the aggregate of MAO payments made to the clinician under the terms of the Qualifying Payment Arrangement(s) during the Performance Period) by a denominator (the aggregate of payments for Medicare Part B covered professional services furnished by the clinician to all eligible beneficiaries during the Performance Period, plus the aggregate of all MAO payments to the clinician during the Performance Period). The definition of eligible beneficiaries is listed below.

The patient count threshold score will be calculated by dividing a numerator (the number of beneficiaries attributed to the clinician through Advanced APM(s) to whom the clinician furnishes Medicare Part B covered professional services during the Performance Period, plus the number of patients to whom the clinician furnishes services that are included in the measures of aggregate expenditures used under the terms of all of their Qualifying Payment Arrangements during the Performance Period) by a denominator (the number of eligible beneficiaries to whom the clinician furnishes Medicare Part B covered professional services during the Performance Period, plus the number of beneficiaries to whom the clinician furnishes services for which MAOs pay during the Performance Period).

The definition of eligible beneficiaries as used in the Medicare FFS component of the denominators will be Medicare FFS beneficiaries who, during the Performance Period, are not enrolled in Medicare Advantage or a Medicare cost plan, do not have Medicare as a secondary payer, are enrolled in both Medicare Parts A and B, are at least 18 years of age, and are United States residents.

### Payment Amount Method

Amount Through __Qualifying Payment Arrangements__ $+$ 
Amount Through __Advanced APMs__ $=$ 
Total from __MAOs__ and __Medicare FFS__

### Patient Count Method

$n$ Beneficiaries under __Qualifying Payment Arrangements__ $+$ 
$n$ Beneficiaries under __Advanced APMS__ $=$ 
Total $n$ Beneficiaries under __MAOs__ and __Medicare FFS__
