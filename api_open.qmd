# Open Payments {#sec-openapi}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")

quick_open      <- providertwo:::quick_open
quick_open_temp <- providertwo:::quick_open_temp

# "[^\\x00-\\x7F]"
# 
# open_payments(year = 2021, npi = 1023630738)
# open_payments(year = 2021, npi = 1043218118)
# c(covered_recipient_npi = 1043218118)
```

## Links

   * [CMS: Open Payments API](https://openpaymentsdata.cms.gov/about/api)
   * [University of Illinois-Chicago: Sunshine Act](https://research.uic.edu/compliance/coi/organizational-coi/faqs-sunshine)


```{r}
"https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids" |> 
  request() |>
  req_perform() |>
  resp_body_json(check_type = FALSE, simplifyVector = FALSE) |>
  jsonify::to_json() |> 
  jsonify::pretty_json() |> 
  listviewer::jsonedit()
```


## Load Catalog

```{r}
openMain("profile_covered")@identifier |> 
  quick_open()

openMain("profile_physician")@identifier |> 
  quick_open()

openMain("profile_information")@identifier |> 
  quick_open()

openMain("profile_mapping")@identifier |> 
  quick_open()

openMain("profile_entity")@identifier |> 
  quick_open()

openMain("profile_teaching")@identifier |> 
  quick_open()

openMain("state_total")@identifier |> 
  quick_open()

openMain("state_group")@identifier |> 
  quick_open()

openMain("national_group")@identifier |> 
  quick_open()

openMain("national_total")@identifier |> 
  quick_open()

openTemp("general")@endpoints$identifier |> _[[1]] |> 
  quick_open_temp()

openTemp("ownership")@endpoints$identifier |> _[[1]] |> 
  quick_open_temp()

openTemp("research")@endpoints$identifier |> _[[1]] |> 
  quick_open_temp()

providertwo:::open_temp_group("grouped_payments") |> 
  slt(-description, -contact, -download) |> 
  rsplit(~ title)
```


### Summary Dashboard

```{r}
open_dashboard()
```

### National Summary

```{r}
open_national()
```

### Data Dictionary

```{r}
open_dictionary()
```

## Querying

```{r}
#| label: open_helpers
format_query_open <- function(args, op = "=") {

  args  <- discard(args, is.null)

  query <- glue(
  "
  'conditions[{i}][property]' = '{PROPERTY}',
  'conditions[{i}][operator]' = '{OPERATOR}',
  'conditions[{i}][value]' = '{VALUE}'
  ",
    i                 = seq_along0(args),
    PROPERTY          = names(args),
    OPERATOR          = op,
    VALUE             = args) |>
    glue_collapse(sep = ",\n")
  
  glue("c({query})") |>
    parse_expr() |>
    eval_bare()
}

create_request_open <- function(id, args) {
  
  id |>
    open_uuid_url() |>
    request() |>
    req_url_query(
      !!!format_query_open(args),
      schema  = "false",
      keys    = "false",
      offset  = 0
    )
}

query_nresults_open <- function(req) {
  
  req_url_query(
    req,
    results = "false", 
    count   = "true", 
    offset  = 0, 
    limit   = 1) |>
    perform_simple() |> 
    _[["count"]]
  
}

perform_request_open <- function(req) {
  
  req_url_query(
    req,
    results = "true", 
    count   = "false", 
    offset  = 0, 
    limit   = 500) |>
    perform_simple()
  
}

format_query_open(
  c(
    covered_recipient_npi = 1023630738, 
    covered_recipient_profile_city = "Valdosta")
  ) |> 
  fuimus::print_ls()
```

## Query Format

```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/sql") |> 
  req_url_query(
    query = paste0(
      '[SELECT * FROM 08e796b8-7108-561a-8430-bea3bd54e485]',
      '[LIMIT 500 OFFSET 0]',
      '[WHERE covered_recipient_last_name = "SMITH"]'
      ),
    show_db_columns = "true"
  ) |> 
  perform_simple() |> 
  as_tbl() |> 
  map_na_if() |> 
  handle_na()
tictoc::toc()
```


```{r}
#| eval: false
ex_url <- url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    # `conditions[0][property]` = "covered_recipient_last_name",
    # `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build()

tictoc::tic()
ex_res <- fload(ex_url)
tictoc::toc()

as_tbl(ex_res$results) |> 
  map_na_if() |> 
  handle_na() |>
  purse()
```



```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    # `conditions[0][property]` = "covered_recipient_npi",
    # `conditions[0][value]`    = "1093709297",
    `conditions[0][property]` = "covered_recipient_last_name",
    `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build() |> 
  request() |> 
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```


```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  req_url_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    results                   = "false",
    offset                    = 0) |>
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_first_name",
    `conditions[0][value]`    = "PATRICK",
    `conditions[0][operator]` = "=",
    `conditions[1][property]` = "covered_recipient_last_name",
    `conditions[1][value]`    = "WARD",
    `conditions[1][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    offset                    = 0) |>
  url_build() |> 
  request() |> 
  perform_simple()
tictoc::toc()
```
