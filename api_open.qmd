# Open Payments {#sec-openapi}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")

quick_open      <- providertwo:::quick_open
quick_open_temp <- providertwo:::quick_open_temp

# "[^\\x00-\\x7F]"
# 
# open_payments(year = 2021, npi = 1023630738)
# open_payments(year = 2021, npi = 1043218118)
# c(covered_recipient_npi = 1043218118)
```

## Links

-   [CMS: Open Payments API](https://openpaymentsdata.cms.gov/about/api)
-   [University of Illinois-Chicago: Sunshine Act](https://research.uic.edu/compliance/coi/organizational-coi/faqs-sunshine)


::: {#nte-open-json .callout-note collapse="true"}

## `JSON`: _Open Payments Catalog_

```{r}
#| echo: false
"https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids" |> 
  request() |>
  req_perform() |>
  resp_body_json(check_type = FALSE, simplifyVector = FALSE) |>
  jsonify::to_json() |>
  jsonify::pretty_json()
```


:::



## Open Profiles

```{r}
#| label: endpoint_examples
open_quick <- \(alias) {
  stopifnot(length(alias) == 1L)
  
  if (grepl("^profile|^state|^national", alias, perl = TRUE))
    return(prop(openMain(alias), "identifier") |> quick_open())
  else
    return(prop(openTemp("general"), "endpoints") |> _[["identifier"]] |> _[[1]] |> quick_open_temp())
}
```

### Covered Recipient Profile Supplement

• Rows 1,530,412
• Pages 3,061
• Fields 32

```{r}
open_quick("profile_covered")
```

### Physician (Distinct) Profile Information

• Rows 1,528,054
• Pages 3,057
• Fields 33

```{r}
open_quick("profile_physician")
```

### Profile Information

• Rows 1,534,695
• Pages 3,070
• Fields 20

```{r}
open_quick("profile_information")
```

### Provider Profile ID Mapping Table

• Rows 2,358
• Pages 5
• Fields 2

```{r}
open_quick("profile_mapping")
```

### Reporting Entity Profile Information

• Rows 2,843
• Pages 6
• Fields 9

```{r}
open_quick("profile_entity")
```

### Teaching Hospital Profile Information

• Rows 1,440
• Pages 3
• Fields 12

```{r}
open_quick("profile_teaching")
```

## Open Summaries

### Summary Dashboard

```{r}
open_dashboard()
```

### State Level Payment Total and Averages for all Years

• Rows 2,765
• Pages 6
• Fields 28

```{r}
open_quick("state_total")
```

### State Payment Totals and Averages Grouped by Nature of Payment for all Years

• Rows 16,758
• Pages 34
• Fields 28

```{r}
open_quick("state_group")
```

### National Level Payment Total and Averages by Provider Specialty for all Years

• Rows 4,188
• Pages 9
• Fields 21

```{r}
open_quick("national_group")
```

### National Level Payment Total and Averages for all Years

• Rows 24
• Pages 1
• Fields 18

```{r}
open_quick("national_total")

open_national()
```

### Grouped Payment Aggregations

```{r}
grp_pmts <- providertwo:::open_temp_group("grouped_payments") |> 
  filter(year == fmax(year), .by = title) |> 
  slt(title, identifier) |> 
  rsplit(~ title) |> 
  map(providertwo:::open_url) |> 
  map(quick_open)

grp_pmts
```

### Data Dictionary

```{r}
open_dictionary()
```

## Detailed Sets by Year

### General Payment Data

• Rows 14,607,336
• Pages 29,215
• Fields 91
• Years 2017 - 2023

```{r}
open_quick("general")
```


### Ownership Payment Data

• Rows 4,013
• Pages 9
• Fields 30
• Years 2017 - 2023


```{r}
open_quick("ownership")
```

### Research Payment Data

• Rows 1,027,926
• Pages 9
• Fields 252
• Years 2017 - 2023

```{r}
open_quick("research")
```


<hr>


## Querying

```{r}
#| label: open_helpers
format_query_open <- function(args, op = "=") {

  args  <- discard(args, is.null)

  query <- glue(
  "
  'conditions[{i}][property]' = '{PROPERTY}',
  'conditions[{i}][operator]' = '{OPERATOR}',
  'conditions[{i}][value]' = '{VALUE}'
  ",
    i                 = seq_along0(args),
    PROPERTY          = names(args),
    OPERATOR          = op,
    VALUE             = args) |>
    glue_collapse(sep = ",\n")
  
  glue("c({query})") |>
    parse_expr() |>
    eval_bare()
}

create_request_open <- function(id, args) {
  
  id |>
    open_uuid_url() |>
    request() |>
    req_url_query(
      !!!format_query_open(args),
      schema  = "false",
      keys    = "false",
      offset  = 0
    )
}

query_nresults_open <- function(req) {
  
  req_url_query(
    req,
    results = "false", 
    count   = "true", 
    offset  = 0, 
    limit   = 1) |>
    perform_simple() |> 
    _[["count"]]
  
}

perform_request_open <- function(req) {
  
  req_url_query(
    req,
    results = "true", 
    count   = "false", 
    offset  = 0, 
    limit   = 500) |>
    perform_simple()
  
}

format_query_open(
  c(
    covered_recipient_npi = 1023630738, 
    covered_recipient_profile_city = "Valdosta")
  ) |> 
  fuimus::print_ls()
```

### Query Format

```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/sql") |> 
  req_url_query(
    query = paste0(
      '[SELECT * FROM 08e796b8-7108-561a-8430-bea3bd54e485]',
      '[LIMIT 500 OFFSET 0]',
      '[WHERE covered_recipient_last_name = "SMITH"]'
      ),
    show_db_columns = "true"
  ) |> 
  perform_simple() |> 
  as_tbl() |> 
  map_na_if() |> 
  handle_na()
tictoc::toc()
```

```{r}
#| eval: false
ex_url <- url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    # `conditions[0][property]` = "covered_recipient_last_name",
    # `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build()

tictoc::tic()
ex_res <- fload(ex_url)
tictoc::toc()

as_tbl(ex_res$results) |> 
  map_na_if() |> 
  handle_na() |>
  purse()
```

```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    # `conditions[0][property]` = "covered_recipient_npi",
    # `conditions[0][value]`    = "1093709297",
    `conditions[0][property]` = "covered_recipient_last_name",
    `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build() |> 
  request() |> 
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  req_url_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    results                   = "false",
    offset                    = 0) |>
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_first_name",
    `conditions[0][value]`    = "PATRICK",
    `conditions[0][operator]` = "=",
    `conditions[1][property]` = "covered_recipient_last_name",
    `conditions[1][value]`    = "WARD",
    `conditions[1][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    offset                    = 0) |>
  url_build() |> 
  request() |> 
  perform_simple()
tictoc::toc()
```
