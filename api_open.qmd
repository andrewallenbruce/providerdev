# Open Payments {#sec-openapi}

```{r}
#| label: setup-common-01
#| include: false
#| warning: false
source("includes/_common.R")

quick_open      <- providertwo:::quick_open
quick_open_temp <- providertwo:::quick_open_temp

gt_tab <- \(x, size = 12) {
  x |>
    gt::gt() |>
    gtUtils::gt_theme_athletic() |>
    gt::tab_options(
      quarto.disable_processing = TRUE,
      column_labels.font.weight = "bolder",
      column_labels.font.size = (size + 4),
      column_labels.background.color = "black",
      column_labels.border.bottom.color = "white",
      table.font.size = size,
      table.width = gt::pct(100)) |> 
    gt::cols_align(align = "left", columns = gt::everything()) |> 
    gt::sub_missing(columns = gt::everything(), missing_text = "-")
}

# "[^\\x00-\\x7F]"
# 
# open_payments(year = 2021, npi = 1023630738)
# open_payments(year = 2021, npi = 1043218118)
# c(covered_recipient_npi = 1043218118)
```


-   [CMS: Open Payments API](https://openpaymentsdata.cms.gov/about/api)
-   [University of Illinois-Chicago: Sunshine Act](https://research.uic.edu/compliance/coi/organizational-coi/faqs-sunshine)


## Dictionaries

```{r}
#| label: open_dictionary
#| include: false
dict <- open_dictionary()
```

::: panel-tabset

### Covered Recipient Profile Supplement

```{r}
#| label: open_dictionary_covered
#| echo: false
dict$`Covered Recipient Profile Supplement` |>
 roworder(field) |>
  mtt(description = gsub("\n", " ", gsub("[\"']", "", stringi::stri_trans_general(description, "latin-ascii"))),
      n = collapse::groupid(field)) |> 
  slt(n, field, description) |>
  gt::gt() |>
  gtUtils::gt_theme_athletic() |>
  gt::cols_merge(columns = c(field, description), pattern = "<b><u>{1}</u></b>:<br><br>{2}") |>
  gt::tab_header(title = "Covered Recipient Profile Supplement", 
                 subtitle = "----------------------------------------------------------") |>
  gt::tab_options(
    quarto.disable_processing = TRUE,
    column_labels.hidden = TRUE,
    table.font.size = 12,
    table.width = gt::pct(100)
  ) |>
  gt::cols_align(align = "center", columns = n) |>
  gt::cols_align(align = "left", columns = field) |>
  gt::sub_missing(columns = gt::everything(), missing_text = "-")
```

### General

```{r}
#| label: open_dictionary_general
#| echo: false
dict$`General Payment Data` |>
  roworder(field) |>
  mtt(description = gsub("\n", " ", gsub("[\"|']", "", stringi::stri_trans_general(description, "latin-ascii"))),
      n = collapse::groupid(field)) |> 
  slt(n, field, description) |>
  gt::gt() |>
  gtUtils::gt_theme_athletic() |>
  gt::cols_merge(columns = c(field, description), pattern = "<b><u>{1}</u></b>:<br><br>{2}") |>
  gt::tab_header(title = "General Payment Data", subtitle = "------------------------------------") |>
  gt::tab_options(
    quarto.disable_processing = TRUE,
    column_labels.hidden = TRUE,
    table.font.size = 12,
    table.width = gt::pct(100)
  ) |>
  gt::cols_align(align = "center", columns = n) |>
  gt::cols_align(align = "left", columns = field) |>
  gt::sub_missing(columns = gt::everything(), missing_text = "-")
```

### Ownership

```{r}
#| label: open_dictionary_ownership
#| echo: false
dict$`Ownership Payment Data` |>
  roworder(field) |>
  mtt(description = gsub("\n", " ", gsub("[\"|']", "", stringi::stri_trans_general(description, "latin-ascii"))),
      n = collapse::groupid(field)) |> 
  slt(n, field, description) |>
  gt::gt() |>
  gtUtils::gt_theme_athletic() |>
  gt::cols_merge(columns = c(field, description), pattern = "<b><u>{1}</u></b>:<br><br>{2}") |>
  gt::tab_header(title = "Ownership Payment Data", subtitle = "---------------------------------------") |>
  gt::tab_options(
    quarto.disable_processing = TRUE,
    column_labels.hidden = TRUE,
    table.font.size = 12,
    table.width = gt::pct(100)
  ) |>
  gt::cols_align(align = "center", columns = n) |>
  gt::cols_align(align = "left", columns = field) |>
  gt::sub_missing(columns = gt::everything(), missing_text = "-")
```

### Research

```{r}
#| label: open_dictionary_research
#| echo: false
dict$`Research Payment Data` |>
  roworder(field) |>
  mtt(description = gsub("\n", " ", gsub("[\"|']", "", stringi::stri_trans_general(description, "latin-ascii"))),
      n = collapse::groupid(field)) |> 
  slt(n, field, description) |>
  gt::gt() |>
  gtUtils::gt_theme_athletic() |>
  gt::cols_merge(columns = c(field, description), pattern = "<b><u>{1}</u></b>:<br><br>{2}") |>
  gt::tab_header(title = "Research Payment Data", subtitle = "------------------------------------") |>
  gt::tab_options(
    quarto.disable_processing = TRUE,
    column_labels.hidden = TRUE,
    table.font.size = 12,
    table.width = gt::pct(100)
  ) |>
  gt::cols_align(align = "center", columns = n) |>
  gt::cols_align(align = "left", columns = field) |>
  gt::sub_missing(columns = gt::everything(), missing_text = "-")
```

:::

## Profiles

```{r}
#| label: endpoint_examples
#| include: false
open_quick <- \(alias) {
  stopifnot(length(alias) == 1L)
  
  if (grepl("^profile|^state|^national|^dashboard", alias, perl = TRUE))
    return(prop(openMain(alias), "identifier") |> quick_open())
  else
    return(prop(openTemp(alias), "endpoints") |> _[["identifier"]] |> _[[1]] |> quick_open_temp())
}
```

::: panel-tabset

### Covered

• __Rows__ `[1.5M]`
• __Pages__ `[3.1k]`
• __Fields__ `[32]`

```{r}
open_quick("profile_covered")
```

### Physician

• __Rows__ `[1.5M]`
• __Pages__ `[3.1k]`
• __Fields__ `[33]`

```{r}
open_quick("profile_physician")
```

### Entity

• __Rows__ `[1.5M]`
• __Pages__ `[3.1k]`
• __Fields__ `[20]`

```{r}
open_quick("profile_information")
```

### Mapping

• __Rows__ `[2.4k]`
• __Pages__ `[5]`
• __Fields__ `[2]`

```{r}
open_quick("profile_mapping")
```

### Reporting

• __Rows__ `[2.8k]`
• __Pages__ `[6]`
• __Fields__ `[9]`

```{r}
open_quick("profile_entity")
```

### Teaching

• __Rows__ `[1.4k]`
• __Pages__ `[3]`
• __Fields__ `[12]`

```{r}
open_quick("profile_teaching")
```

::: 


## Summaries

::: panel-tabset

### Dashboard

```{r}
open_quick("dashboard")

open_dashboard()
```

### National

• __Rows__ `[24]`
• __Pages__ `[1]`
• __Fields__ `[18]`

```{r}
open_quick("national_total")

open_national() |> 
  fuimus::describe2() |> 
  # slt(column, n, uniq, top, distribution) |> 
  gt_tab()
```

• __Rows__ `[4.2k]`
• __Pages__ `[9]`
• __Fields__ `[21]`

```{r}
open_quick("national_group") |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution) |> 
  gt_tab()
```

### State

• __Rows__ `[2.8k]`
• __Pages__ `[6]`
• __Fields__ `[28]`

```{r}
open_quick("state_total") |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution) |> 
  gt_tab()
```

• __Rows__ `[16.8k]`
• __Pages__ `[34]`
• __Fields__ `[28]`

```{r}
open_quick("state_group") |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution) |> 
  gt_tab()
```

::: 

## Group Summaries

```{r}
#| label: open_group
#| include: false
grp_pmts <- providertwo:::open_temp_group("grouped_payments") |> 
  filter(year == fmax(year), .by = title) |> 
  slt(title, identifier) |> 
  rsplit(~ title) |> 
  map(providertwo:::open_url) |> 
  map(quick_open)
```

::: panel-tabset

#### Covered + Nature

```{r}
#| echo: false
grp_pmts$`Payments Grouped by Covered Recipient and Nature of Payments` |> 
  slt(-teaching_hospital_name) |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution, min, mean, med, max) |> 
  gt_tab()
```

#### Covered + Reporting

```{r}
#| echo: false
grp_pmts$`Payments Grouped by Covered Recipient and Reporting Entities` |>
  slt(-teaching_hospital_name) |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution, min, mean, med, max) |> 
  gt_tab()
```

#### Reporting + Nature

```{r}
#| echo: false
grp_pmts$`Payments Grouped by Reporting Entities and Nature of Payments` |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution, min, mean, med, max) |> 
  gt_tab()
```

#### Reporting + Covered + Nature

```{r}
#| echo: false
grp_pmts$`Payments Grouped by Reporting Entities, Covered Recipient, and Nature of Payments` |> 
  fuimus::describe2() |> 
  slt(column, n, uniq, top, distribution, min, mean, med, max) |> 
  gt_tab()
```

::: 

## Detailed Payment Data

::: panel-tabset

### General

• __Rows__ `[14.6M]`
• __Pages__ `[29k]`
• __Fields__ `[91]`
• __Years__ `[2017 - 2023]`

```{r}
#| echo: false
open_quick("general") |> 
  slt(-recipient_province, 
      -recipient_postal_code, 
      -covered_recipient_primary_type_2,
      -covered_recipient_primary_type_3,
      -covered_recipient_primary_type_4,
      -covered_recipient_primary_type_5,
      -covered_recipient_primary_type_6,
      -covered_recipient_specialty_2,
      -covered_recipient_specialty_3,
      -covered_recipient_specialty_4,
      -covered_recipient_specialty_5,
      -covered_recipient_specialty_6,
      -city_of_travel,
      -state_of_travel,
      -country_of_travel,
      -associated_drug_or_biological_ndc_2,
      -name_of_drug_or_biological_or_device_or_medical_supply_3,
      -associated_drug_or_biological_ndc_3,
      -associated_device_or_medical_supply_pdi_3,
      -name_of_drug_or_biological_or_device_or_medical_supply_4,
      -associated_drug_or_biological_ndc_4,
      -associated_device_or_medical_supply_pdi_4,
      -covered_or_noncovered_indicator_5,
      -indicate_drug_or_biological_or_device_or_medical_supply_5,
      -product_category_or_therapeutic_area_5,
      -name_of_drug_or_biological_or_device_or_medical_supply_5,
      -associated_drug_or_biological_ndc_5,
      -associated_device_or_medical_supply_pdi_5
      ) |> 
  fuimus::describe2() |> 
  slt(column, 
      n, 
      uniq, 
      top, 
      distribution, 
      min, 
      mean, 
      med, 
      max) |> 
  gt_tab()
```

### Ownership

• __Rows__ `[4k]`
• __Pages__ `[9]`
• __Fields__ `[30]`
• __Years__ `[2017 - 2023]`

```{r}
#| echo: false
open_quick("ownership")
```

### Research

• __Rows__ `[1M]`
• __Pages__ `[9]`
• __Fields__ `[252]`
• __Years__ `[2017 - 2023]`

```{r}
#| echo: false
open_quick("research")
```

::: 

<br>

## Querying

```{r}
#| label: open_helpers
format_query_open <- function(args, op = "=") {

  args  <- discard(args, is.null)

  query <- glue(
  "
  'conditions[{i}][property]' = '{PROPERTY}',
  'conditions[{i}][operator]' = '{OPERATOR}',
  'conditions[{i}][value]' = '{VALUE}'
  ",
    i                 = seq_along0(args),
    PROPERTY          = names(args),
    OPERATOR          = op,
    VALUE             = args) |>
    glue_collapse(sep = ",\n")
  
  glue("c({query})") |>
    parse_expr() |>
    eval_bare()
}

create_request_open <- function(id, args) {
  
  id |>
    open_uuid_url() |>
    request() |>
    req_url_query(
      !!!format_query_open(args),
      schema  = "false",
      keys    = "false",
      offset  = 0
    )
}

query_nresults_open <- function(req) {
  
  req_url_query(
    req,
    results = "false", 
    count   = "true", 
    offset  = 0, 
    limit   = 1) |>
    perform_simple() |> 
    _[["count"]]
  
}

perform_request_open <- function(req) {
  
  req_url_query(
    req,
    results = "true", 
    count   = "false", 
    offset  = 0, 
    limit   = 500) |>
    perform_simple()
  
}

format_query_open(
  c(
    covered_recipient_npi = 1023630738, 
    covered_recipient_profile_city = "Valdosta")
  ) |> 
  fuimus::print_ls()
```

### Query Format

> SQL Format

```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/sql") |> 
  req_url_query(
    query = paste0(
      '[SELECT * FROM 08e796b8-7108-561a-8430-bea3bd54e485]',
      '[LIMIT 500 OFFSET 0]',
      '[WHERE covered_recipient_last_name = "SMITH"]'
      ),
    show_db_columns = "true"
  ) |> 
  perform_simple() |> 
  as_tbl() |> 
  map_na_if() |> 
  handle_na()
tictoc::toc()
```

> JSON:API Format

```{r}
#| eval: false
ex_url <- url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    # `conditions[0][property]` = "covered_recipient_last_name",
    # `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build()

tictoc::tic()
ex_res <- fload(ex_url)
tictoc::toc()

as_tbl(ex_res$results) |> 
  map_na_if() |> 
  handle_na() |>
  purse()
```

```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    # `conditions[0][property]` = "covered_recipient_npi",
    # `conditions[0][value]`    = "1093709297",
    `conditions[0][property]` = "covered_recipient_last_name",
    `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build() |> 
  request() |> 
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
#| eval: false
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  req_url_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    results                   = "false",
    offset                    = 0) |>
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
#| eval: false
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_first_name",
    `conditions[0][value]`    = "PATRICK",
    `conditions[0][operator]` = "=",
    `conditions[1][property]` = "covered_recipient_last_name",
    `conditions[1][value]`    = "WARD",
    `conditions[1][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    offset                    = 0) |>
  url_build() |> 
  request() |> 
  perform_simple()
tictoc::toc()
```



::: {#nte-open-json .callout-note collapse="true"}

## __JSON__ Catalog

```{r}
#| label: open_json
#| echo: false
#| message: false
open_JSON <- "https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids" |> 
  request() |>
  req_perform() |>
  resp_body_json(check_type = FALSE, simplifyVector = FALSE)

c(open_JSON[[1]], open_JSON[[2]], open_JSON[[3]]) |> 
  lobstr::tree(max_length = 1000L, max_depth = 10L)
```


:::
