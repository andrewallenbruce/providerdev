# Open Payments {#sec-openapi}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")

# "[^\\x00-\\x7F]"
# 
# open_payments(year = 2021, npi = 1023630738)
# open_payments(year = 2021, npi = 1043218118)
# c(covered_recipient_npi = 1043218118)
```

## Links

   * [CMS: Open Payments API](https://openpaymentsdata.cms.gov/about/api)
   * [University of Illinois-Chicago: Sunshine Act](https://research.uic.edu/compliance/coi/organizational-coi/faqs-sunshine)

## Load Catalog

```{r}
#| label: open_catalog
.c(open_curr, open_temp) %=% catalog_open()

open_curr

open_temp

subset_detect(open_curr, title, "^Covered")
```

## S7 Classes

```{r}
CurrentOpen("prof_cov")
CurrentOpen("prof_phys")
CurrentOpen("prof_info")
CurrentOpen("prof_map")
CurrentOpen("prof_entity")
CurrentOpen("prof_teach")
CurrentOpen("dashboard")
CurrentOpen("pay_state_total")
CurrentOpen("pay_state_group")
CurrentOpen("pay_nat_group")
CurrentOpen("pay_nat_total")
```

```{r}
TemporalOpen("general")
TemporalOpen("ownership")
TemporalOpen("research")
TemporalOpen("recipient_nature")
TemporalOpen("recipient_entity")
TemporalOpen("entity_nature")
TemporalOpen("entity_recipient_nature")
TemporalOpen("state_nature")
```

```{r}
#| message: true
providertwo:::new_request(CurrentOpen("dashboard"))
```

### Dashboard

```{r}
dashboard <- data.table::fread(CurrentOpen("dashboard")@download)

dashboard |> 
  as_tbl() |> 
  f_select(Data_Metrics, Total) |> 
  f_arrange(-Total) |> 
  print(n = Inf)
```


```{r}
dash <- dashboard |> 
  as_tbl() |> 
  slt(-Dashboard_Row_Number) |>
  pivot(ids = 1) |> 
  roworder(Data_Metrics) |> 
  mtt(year = delist(stri_extract_all_regex(variable, "[0-9]{4}")))

dash |> 
  sbt(na(year), metrics = Data_Metrics, amount = value)

dash |> 
  sbt(not_na(year), year, metrics = Data_Metrics, amount = value) |> 
  mtt(year = as_int(year)) |> 
  rsplit(~ metrics)
```

## Querying

```{r}
#| label: open_helpers
format_query_open <- function(args, op = "=") {

  args  <- discard(args, is.null)

  query <- glue(
  "
  'conditions[{i}][property]' = '{PROPERTY}',
  'conditions[{i}][operator]' = '{OPERATOR}',
  'conditions[{i}][value]' = '{VALUE}'
  ",
    i                 = seq_along0(args),
    PROPERTY          = names(args),
    OPERATOR          = op,
    VALUE             = args) |>
    glue_collapse(sep = ",\n")
  
  glue("c({query})") |>
    parse_expr() |>
    eval_bare()
}

create_request_open <- function(id, args) {
  
  id |>
    open_uuid_url() |>
    request() |>
    req_url_query(
      !!!format_query_open(args),
      schema  = "false",
      keys    = "false",
      offset  = 0
    )
}

query_nresults_open <- function(req) {
  
  req_url_query(
    req,
    results = "false", 
    count   = "true", 
    offset  = 0, 
    limit   = 1) |>
    perform_simple() |> 
    _[["count"]]
  
}

perform_request_open <- function(req) {
  
  req_url_query(
    req,
    results = "true", 
    count   = "false", 
    offset  = 0, 
    limit   = 500) |>
    perform_simple()
  
}

format_query_open(
  c(
    covered_recipient_npi = 1023630738, 
    covered_recipient_profile_city = "Valdosta")
  ) |> 
  fuimus::print_ls()
```

## Query Format

```{r}
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/sql") |> 
  req_url_query(
    query = paste0(
      '[SELECT * FROM 08e796b8-7108-561a-8430-bea3bd54e485]',
      '[LIMIT 500 OFFSET 0]',
      '[WHERE covered_recipient_last_name = "SMITH"]'
      ),
    show_db_columns = "true"
  ) |> 
  perform_simple() |> 
  as_tbl() |> 
  map_na_if() |> 
  handle_na()
tictoc::toc()
```


```{r}
ex_url <- url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    # `conditions[0][property]` = "covered_recipient_last_name",
    # `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build()

tictoc::tic()
ex_res <- fload(ex_url)
tictoc::toc()

as_tbl(ex_res$results) |> 
  map_na_if() |> 
  handle_na() |>
  purse()
```



```{r}
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    # `conditions[0][property]` = "covered_recipient_npi",
    # `conditions[0][value]`    = "1093709297",
    `conditions[0][property]` = "covered_recipient_last_name",
    `conditions[0][value]`    = "SMITH",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    # results                   = "false",
    offset                    = 0,
    limit                     = 500) |>
  url_build() |> 
  request() |> 
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```


```{r}
tictoc::tic()
request("https://openpaymentsdata.cms.gov/api/1/datastore/query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  req_url_query(
    `conditions[0][property]` = "covered_recipient_npi",
    `conditions[0][value]`    = "1093709297",
    `conditions[0][operator]` = "=",
    schema                    = "false",
    keys                      = "false",
    results                   = "false",
    offset                    = 0) |>
  perform_simple() |>
  _[["count"]]
tictoc::toc()
```

```{r}
tictoc::tic()
url_parse(
  base_url = "https://openpaymentsdata.cms.gov/api/1/datastore/", 
  url      = "query/fdc3c773-018a-412c-8a81-d7b8a13a037b/0") |> 
  url_modify_query(
    `conditions[0][property]` = "covered_recipient_first_name",
    `conditions[0][value]`    = "PATRICK",
    `conditions[0][operator]` = "=",
    `conditions[1][property]` = "covered_recipient_last_name",
    `conditions[1][value]`    = "WARD",
    `conditions[1][operator]` = "=",
    schema                    = "false",
    keys                      = "true",
    offset                    = 0) |>
  url_build() |> 
  request() |> 
  perform_simple()
tictoc::toc()
```
