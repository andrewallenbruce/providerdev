# Groups {#sec-keygroups}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")
```

## Provider Data

```{r}
#| label: provider_urls
provider_urls <- function(x, nm) {
  switch(nm,
         identifier  = paste0("https://data.cms.gov/provider-data/api/1/datastore/query/", x, "/0"),
         describedBy = paste0("https://data.cms.gov/provider-data/dataset/", x, "#data-dictionary"))
}
```

```{r}
catalog_provider <- \() {
  
  x <- as_tbl(
    fload(
      "https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items"
    ) |>
      mtt(
        issued      = as_date(issued),
        modified    = as_date(modified),
        released    = as_date(released),
        keyword     = flatten_column(keyword),
        theme       = flatten_column(theme),
        description = trimws(sf_remove(description, "\n"))))
  
    add_vars(x,
      downloadurl = delist(get_elem(x$distribution, "downloadURL", DF.as.list = TRUE)),
      contact     = as.character(
        glue(
          '{delist(get_elem(x$contactPoint, "fn"))} ',
          '({delist(get_elem(x$contactPoint, "^has", regex = TRUE))})'))) |> 
      slt(
        title,
        theme,
        description,
        keyword,
        issued,
        modified,
        released,
        identifier,
        contact,
        downloadurl,
        site = landingPage) |> 
      roworder(theme, title) |> 
      rsplit(~ theme) |> 
      set_names(
        c(
          "dialysis_facilities",
          "doctors_and_clinicians",
          "home_health_services",
          "hospice_care",
          "hospitals",
          "inpatient_rehabilitation_facilities",
          "long_term_care_hospitals",
          "nursing_homes",
          "physician_office_visit_costs",
          "supplier_directory"
        )
      )
}

prov <- catalog_provider()

prov
```

### Hospitals Subgroups

```{r}
filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "Quality Measures - |Quality Measure Data - "
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^Hospital Value-Based Purchasing"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^(Medicare Spending Per Beneficiary|Medicare Hospital|Payment)"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^(Complications|Hospital Readmissions|Hospital-Acquired|Safety and Healthcare|Unplanned|Timely|Healthcare Associated)"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^Veterans Health Administration"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^Patient [Ss]urvey"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "OAS CAHPS"
    ))

filter(
  prov$hospitals, 
  stri_detect_regex(
    title, 
    "^Table"
    ))
```


## Main Data

```{r}
main <- as_tbl(
    fload(
      "https://data.cms.gov/data.json", 
      query = "/dataset") |>
      slt(
        title,
        keyword,
        description,
        periodicity = accrualPeriodicity,
        modified,
        temporal,
        distribution,
        identifier,
        contactPoint,
        dictionary = describedBy,
        site = landingPage,
        references
      ) |>
      mtt(
        modified = as_date(modified),
        periodicity = recode_iso8601(periodicity),
        keyword = flatten_column(keyword),
        description = trimws(sf_remove(description, "\n")),
        references = delist(references)
      )
  ) |>
    roworder(title)

main <- add_vars(
  main,
  contact = glue('{delist(get_elem(main$contactPoint, "fn"))} ',
                 '({delist(get_elem(main$contactPoint, "^has", regex = TRUE))})') |> 
        as.character()
      ) |> 
  slt(-contactPoint)

main
```

### Possible Groups

```{r}
main |> 
  filter(stri_detect_regex(
    title, 
    "Provider of Services File"
    ))

main |> 
  filter(stri_detect_regex(
    title, 
    "by Geography|by Provider|by Referring|by Drug|Physician/Supplier Procedure Summary|Hospital Provider Cost Report"
    ))

main |> 
  filter(stri_detect_regex(
    title, 
    "Accountable Care Organization|ACO Realizing Equity|Pioneer ACO Model"
    ))

main |> 
  filter(stri_detect_regex(
    title, 
    "CMS Program Statistics"
    ))

main |> 
  filter(stri_detect_regex(
    title, 
    "^(Federally Qualified Health Center|Rural Health Clinic|Home Health Agency|Hospice|Skilled Nursing Facility|Long-Term Care Facility|Hospital|Home Infusion)"
    ))

main |> 
  filter(stri_detect_regex(
    title, 
    "Innovation Center"
    ))

main |> 
  filter(
    stri_detect_regex(
      title, 
      "Market Saturation & Utilization"
      ))

main |> 
  filter(stri_detect_regex(
    title, 
    "End-Stage Renal Disease Facility Aggregation Group Performance|Medicare Dialysis Facilities"))
```

```{r}
# distribution <- as_tbl(rowbind(get_elem(dataset, "distribution"), fill = TRUE)) |>
#     mtt(modified    = as_date(modified),
#         format      = cheapr_if_else(not_na(description), paste0(format, "-", description), format),
#         `@type`     = NULL,
#         description = NULL) |>
#     colorder(title)
# 
#   list(
#     dataset = slt(dataset, title, theme, keyword, description, accrualPeriodicity, contactPoint, describedBy, identifier, modified, landingPage, temporal, references) |> uniq(),
#     download = sbt(distribution, not_na(mediaType), title, mediaType, downloadURL, modified, temporal) |> uniq(),
#     distribution = sbt(distribution, not_na(format), title, format, accessURL, modified, temporal) |> uniq(),
#     resources = slt(distribution, title, resourcesAPI, modified, temporal) |> uniq()
#   )
```
