---
title: "Data Catalogs"
editor_options: 
   chunk_output_type: console
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
knitr::opts_chunk$set(
  dev        = "ragg_png",
  dpi        = 320,
  out.width  = "100%",
  fig.width  = 8,
  fig.asp    = 0.818,
  fig.retina = 2,
  fig.align  = "center",
  fig.show   = "hold"
)
options(scipen = 999, digits = 3)

library(tidyverse)
library(provider)
library(fuimus)
library(httr2)
library(arrow)
library(terse)
library(emphatic)

purse <- function(x, 
                  pre = "- ", 
                  wid = 0, 
                  sep = " ") {
  terse::terse(
    x = x, 
    prefix = pre, 
    width = wid, 
    config = list(
      gsep = sep, 
      ansi = FALSE))
}
```

## Main CMS

```{r}
#| label: data_json_metadata
read_json_arrow(
    file = "https://data.cms.gov/data.json", 
    col_select = c("@context", "@id", "@type", "conformsTo", "describedBy"),
    as_data_frame = FALSE) |> 
  collect() |> 
  purse()
```

```{r}
#| label: data_json
data_json <- read_json_arrow(
  file = "https://data.cms.gov/data.json",
  col_select = c("dataset"),
    as_data_frame = TRUE) |> 
  to_duckdb()

data_json |> 
  pull(dataset) |> 
  pluck(1) |> 
  tibble() |> 
  mutate(
    bureauCode = delist(bureauCode),
    keyword = map_chr(keyword, \(x) paste0(delist(x), collapse = ", ")),
    language = delist(language),
    programCode = delist(programCode),
    theme = map_chr(theme, \(x) paste0(delist(x), collapse = ", ")),
    references = delist(references)) |>
  unnest_wider(contactPoint, names_sep = "_") |>
  unnest_wider(publisher, names_sep = "_") |> 
  purse()
```

## Provider CMS

```{r}
request('https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items') |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE) |> 
  tibble() |> 
  mutate(
    bureauCode = delist(bureauCode),
    keyword = map_chr(keyword, \(x) paste0(delist(x), collapse = ", ")),
    programCode = delist(programCode),
    theme = map_chr(theme, \(x) paste0(delist(x), collapse = ", "))) |>
  unnest_wider(contactPoint, names_sep = "_") |>
  unnest_wider(publisher, names_sep = "_") |> 
  purse()
```

## Open Payments

```{r}
request("https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids") |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE) |> 
  tibble() |> 
  mutate(
    bureauCode = delist(bureauCode),
    keyword = map_chr(keyword, \(x) paste0(delist(x), collapse = ", ")),
    programCode = delist(programCode),
    theme = map_chr(theme, \(x) paste0(delist(x), collapse = ", "))) |>
  unnest_wider(contactPoint, names_sep = "_") |>
  unnest_wider(publisher, names_sep = "_") |> 
  unnest_wider(publisher_data, names_sep = "_") |> 
  purse()
```


## QPP CMS Endpoint

   * [QPP Eligibility API Documentation](https://cmsgov.github.io/qpp-eligibility-docs/)
   * [QPP Eligibility REST API Documentation](https://qpp.cms.gov/api/eligibility/docs/)

> Note: Not really a catalog

```{r}
request("https://qpp.cms.gov/api/eligibility/stats/?year=2025") |>
  req_headers(Accept = "application/vnd.qpp.cms.gov.v6+json") |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE)

request("https://qpp.cms.gov/api/eligibility/npis/1043477615/?year=2025") |>
  req_headers(Accept = "application/vnd.qpp.cms.gov.v6+json") |>
  req_error(body = \(resp) resp_body_json(resp)$error$message) |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE) |> 
  pluck(1) |> 
  tibble() |> 
  unnest_wider(specialty, names_sep = "_") |>
  unnest_wider(organizations, names_sep = "_") |>
  unnest_wider(organizations_apms, names_sep = "_") |>
  unnest_wider(organizations_virtualGroups, names_sep = "_") |>
  unnest_wider(organizations_individualScenario, names_sep = "_") |>
  unnest_wider(organizations_groupScenario, names_sep = "_") |>
  # organizations_individualScenario_extremeHardshipReasons
  # organizations_individualScenario_extremeHardshipSources
  # organizations_individualScenario_lowVolumeStatusReasons
  # organizations_individualScenario_specialty
  # organizations_individualScenario_isEligible
  # organizations_groupScenario_extremeHardshipReasons
  # organizations_groupScenario_extremeHardshipSources
  # organizations_groupScenario_lowVolumeStatusReasons
  # organizations_groupScenario_isEligible
  glimpse()
```


### GraphQL API

   * [Basic Clinician GraphQL Example](https://cmsgov.github.io/qpp-eligibility-docs/clinician)
   * [QPP Eligibility GraphQL API Documentation](https://qpp.cms.gov/api/eligibility/graphql)
