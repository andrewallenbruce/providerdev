---
title: "API FAQ"
editor_options: 
   chunk_output_type: console
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
knitr::opts_chunk$set(
  dev        = "ragg_png",
  dpi        = 320,
  out.width  = "100%",
  fig.width  = 8,
  fig.asp    = 0.818,
  fig.retina = 2,
  fig.align  = "center",
  fig.show   = "hold"
)
options(scipen = 999, digits = 3)

source("_common.R")

library(tidyverse)
library(provider)
library(httr2)
library(arrow)
```


```{r}
#| echo: false
htmltools::tagList(
  btn_link("https://data.cms.gov/api-docs", "CMS API Docs"),
  btn_link("https://data.cms.gov/sites/default/files/2024-10/7ef65521-65a4-41ed-b600-3a0011f8ec4b/API%20Guide%20Formatted%201_6.pdf", 
           "API FAQ"))
```

Working through the new (October 2024 - Version 1.6) [API FAQ](https://data.cms.gov/sites/default/files/2024-10/7ef65521-65a4-41ed-b600-3a0011f8ec4b/API%20Guide%20Formatted%201_6.pdf) for [data.CMS.gov](https://data.cms.gov/api-docs), extracting the relevant information

# Accessing the Data Catalog

The [`data.json`](https://data.cms.gov/data.json) file is an [**Open Data**](https://resources.data.gov/resources/dcat-us/) catalog containing all available datasets. As new data is added, `data.json` is automatically updated.


```{r}
#| label: data_json
data_json <- read_json_arrow(
  file = "https://data.cms.gov/data.json",
  col_select = c("dataset"),
    as_data_frame = TRUE) |> 
  to_duckdb()

data_json |> glimpse()
```


> **Note:** Removing `col_select = c("dataset")` from the above call returns the following metadata:


```{r}
#| label: col_select_remove
#| echo: false
c("@context    <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.jsonld", 
  "@id         <chr> https://data.cms.gov/data.json", 
  "@type       <chr> dcat:Catalog", 
  "conformsTo  <chr> https://project-open-data.cio.gov/v1.1/schema", 
  "describedBy <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.json", 
  "dataset     <list> [<data.frame[138 x 22]>]") |> 
  cat(sep = "\n")
```


Within `data.json`, there is an array called `dataset`. One can search through this array using the dataset's `title`, such as `"Payroll Based Journal Daily Nurse Staffing"`:


```{r}
#| label: dataset_title
data_json |> 
  pull(dataset) |> 
  pluck(1) |> 
  filter(grepl("Payroll Based Journal Daily Nurse Staffing", title)) |> 
  glimpse()
```


Within `dataset`, there is an array called `distribution` which contains all dataset versions, in all available formats:


```{r}
#| label: distribution
distribution <- data_json |> 
  pull(dataset) |> 
  pluck(1) |> 
  select(distribution) |> 
  unnest(distribution)

distribution
```

## Formats

   * __description__ `"latest"` is a URL that always point to the latest data
   * __mediaType__ `"text/csv"` is a downloadable CSV file
   * __mediaType__ `"application/zip"` is a downloadable ZIP file
   * __format__ `"API"` is an API endpoint
   * Remaining entries provide references to the data at fixed points in time, listed in descending order by date.

```{r}
distribution |> 
  count(description, format, mediaType)
```


For example, the URL in the following example will *always* point to the **Payroll Based Journal Daily Nurse Staffing** data from **Q2 2021**:


```{r}
#| label: staffing
# "https://data.cms.gov/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data"
staffing <- distribution |> 
  filter(
    grepl("Payroll Based Journal Daily Nurse Staffing", title),
    format == "API",
    grepl("^2021-04", temporal)) |> 
  pull(accessURL) |> 
  request() |> 
  req_perform() |> 
  resp_body_json(simplifyVector = TRUE)

glimpse(head(staffing, 1))
```

## Temporal Data

Datasets with multiple historical versions available will have a `temporal` field in the `distribution` array of the `data.json` file which will indicate the time period. 

The following example finds the API link for the [2017 Medicare Inpatient Hospitals - by Provider and Service Data](https://data.cms.gov/provider-summary-by-type-of-service/medicare-inpatienthospitals/medicare-inpatient-hospitals-by-provider-and-service):


```{r}
#| label: inpatienthospitals
distribution |> 
  filter(
    grepl("Medicare Inpatient Hospitals - by Provider and Service", title), 
    format == "API",
    temporal == "2017-01-01/2017-12-31") |> 
  glimpse()
```


## Latest Data Access Methods

There are two ways to find the latest data. Both methods provide a URL that points to the latest version. The URL will not change as new versions are added. As such, it is recommended to *always* start with `data.json` rather than hardcoding any URL.

### Standard JSON


   1. Use the `distribution` with the "latest" `description`
   
      * Within `data.json/distribution`, filter the `description` to `"latest"`. Pull the `"accessURL"`.
      * This URL returns data as a standard JSON. 
      * For example, this URL for Opt Out Affidavits is `"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data"` 
   
   2. Use the URL in the identifier field:
      * In the data.json the dataset will have a field called “identifier” and the value for this field is a URL that always points to the latest data.
      * This URL returns data using the JSON:API specification, which has a different response structure that includes metadata about the dataset, otherwise it is identical to the URL in option 1.
      * For example, this URL for Opt Out Affidavits `"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data-viewer"`

The following example finds the API link for the latest [Order and Referring Data](https://data.cms.gov/provider-characteristics/medicare-provider-supplierenrollment/order-and-referring):

```{r}
#| label: url_order
distribution |> 
  filter(grepl("Order and Referring", title),
         description == "latest") |> 
  glimpse()
```

# Using the API



-------------------------------------------------------------------------------

## Schema

```r
<[data.json]
   |--@context
   |--@id
   |--@type
   |--conformsTo
   |--describedBy
   |==[dataset]
   |     |--@type
   |     |--accessLevel
   |     |--accrualPeriodicity
   |     |--bureauCode
   |     |--contactPoint
   |     |--describedBy
   |     |--dataQuality
   |     |--description
   |     |==[distribution]
   |     |     |--@type
   |     |     |--format
   |     |     |--accessURL
   |     |     |--resourcesAPI
   |     |     |--description
   |     |     |--title
   |     |     |--modified
   |     |     |--temporal
   |     |     |--downloadURL
   |     |     |--mediaType
   |     |--identifier
   |     |--keyword
   |     |--landingPage
   |     |--language
   |     |--license
   |     |--modified
   |     |--programCode
   |     |--publisher
   |     |--references
   |     |--temporal
   |     |--theme
   |     |--title
   |_____|--describedBy
```
