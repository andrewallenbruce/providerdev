---
title: "Open Payments API"
editor_options: 
   chunk_output_type: console
---
```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")
```

## Dataset

   * `publisher`: `"openpaymentsdata.cms.gov"`
   * `bureauCode`: `"009:38"`
   * `programCode`: `"009:000"`
   * `accessLevel`: `"public"`
   * limit = `500`

```{r}
#| label: open_dataset
get_describedby <- \(x) {
  
  x <- map(get_elem(
    get_elem(x$distribution, "data", DF.as.list = TRUE),
    "title|describedBy",
    regex = TRUE
  ), function(x)
    x[not_null(names(x))])
  
  new_df(title = delist(get_elem(x, "title")),
         describedBy = delist(get_elem(x, "describedBy"))) |>
    mtt(
      year = as_int(stri_extract_all_regex(title, "[0-9]{4}")),
      name = cheapr_if_else(
        na(year),
        title,
        stri_extract_all_regex(title, "^.*(?=\\s.\\sDetailed Dataset [0-9]{4} Reporting Year)")
      ),
      year = cheapr_if_else(na(year), max(year, na.rm = TRUE), year)
    ) |>
    sbt(year == max(year, na.rm = TRUE), -year, -title)
}

add_downloadurl <- \(x) {
  add_vars(x, downloadURL = delist(get_elem(
    get_elem(x$distribution, "data", DF.as.list = TRUE),
    "downloadURL"
  )))
  
}

load_open <- \() {
  
  dataset <- as_tbl(
  mtt(
    fload("https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids"), 
    modified    = as_date(modified), 
    description = replace_fixed(description, c("\n", "\r. \r."), c(". ", "")),
    theme       = delist(map(theme, function(x) get_elem(as.list(x), "data"))), 
    year        = delist(map(keyword, function(x) get_elem(as.list(x), "data"))), 
    year        = replace_fixed(year, c("all years"), c("All")),
    identifier  = paste0("https://openpaymentsdata.cms.gov/api/1/datastore/query/", identifier, "/0")))
  
  x <- rsplit(slt(add_downloadurl(dataset),
      year,
      theme,
      title,
      description,
      modified,
      temporal,
      identifier,
      downloadURL) |>
      roworder(-theme, -year, title), ~ theme)
  
  list(
    summary_all  = sbt(x$Summary, year == "All", -year),
    summary_year = sbt(x$Summary, year != "All") |> mtt(year = as_int(year)),
    general     = mtt(x$`General Payments`, year = as_int(year), title = NULL),
    research    = mtt(x$`Research Payments`, year = as_int(year), title = NULL),
    ownership   = mtt(x$`Ownership Payments`, year = as_int(year), title = NULL),
    dictionary = get_describedby(dataset))
  
}

dataset <- load_open()

dataset
```

## Dictionaries

```{r}
#| label: get_dictionary
get_dictionary <- function(x, dataset) {
  
  dataset <- arg_match0(
    dataset,
    c(
      "Covered Recipient Profile Supplement",
      "Research Payment Data",
      "Ownership Payment Data",
      "General Payment Data"
    )
  )  
  
  x <- sbt(x$dictionary, dataset == name) |> 
    _[["describedBy"]] |> 
    request() |> 
    req_perform() |> 
    resp_simple_json() |> 
    as_tbl() |> 
    _[["data"]]
  
  new_tbl(
    field       = delist(get_elem(x$fields, "name")),
    description = delist(get_elem(x$fields, "description"))
  )
}
```

### Covered Recipient Profile Supplement

```{r}
#| label: dict_covered_recipient_profile
get_dictionary(dataset, "Covered Recipient Profile Supplement") |> 
  roworder(field) |> 
  print(n = Inf)
```

### General Payment File

```{r}
#| label: dict_general_payments
get_dictionary(dataset, "General Payment Data") |> 
  roworder(field) |> 
  print(n = Inf)
```

### Ownership Payment File

```{r}
#| label: dict_ownership
get_dictionary(dataset, "Ownership Payment Data") |> 
  roworder(field) |> 
  print(n = Inf)
```

### Ownership Payment File

```{r}
#| label: dict_research
get_dictionary(dataset, "Research Payment Data") |> 
  roworder(field) |> 
  print(n = Inf)
```
