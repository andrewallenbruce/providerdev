---
title: "Open Payments API"
editor_options: 
   chunk_output_type: console
---
```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")
```

## Dataset

   * `publisher`: `"openpaymentsdata.cms.gov"`
   * `bureauCode`: `"009:38"`
   * `programCode`: `"009:000"`
   * `accessLevel`: `"public"`
   * limit = `500`

```{r}
#| label: open_dataset
get_describedby <- \(x) {
  
  x <- map(get_elem(
    get_elem(x$distribution, "data", DF.as.list = TRUE),
    "title|describedBy",
    regex = TRUE
  ), function(x)
    x[not_null(names(x))])
  
  new_df(
    title = delist(get_elem(x, "title")), 
    describedBy = delist(get_elem(x, "describedBy")))
}

add_downloadurl <- \(x) {
  add_vars(x, downloadURL = delist(get_elem(
    get_elem(x$distribution, "data", DF.as.list = TRUE),
    "downloadURL"
  )))
}

load_open <- \() {
  
  dataset <- as_tbl(
  mtt(
    fload("https://openpaymentsdata.cms.gov/api/1/metastore/schemas/dataset/items?show-reference-ids"), 
    modified    = as_date(modified), 
    description = replace_fixed(description, c("\n", "\r. \r."), c(". ", "")),
    theme       = delist(map(theme, function(x) get_elem(as.list(x), "data"))), 
    year        = delist(map(keyword, function(x) get_elem(as.list(x), "data"))), 
    year        = replace_fixed(year, c("all years"), c("All")),
    identifier  = paste0("https://openpaymentsdata.cms.gov/api/1/datastore/query/", identifier, "/0")))
  
  dataset <- roworder(
    slt(
      join(
        add_downloadurl(dataset),
        get_describedby(dataset) |>
          mtt(
            year = stri_extract_all_regex(title, "[0-9]{4}"),
            name = stri_extract_all_regex(title, "^.*(?=\\s.\\sDetailed Dataset [0-9]{4} Reporting Year)"),
            title = ifelse(na(name), title, glue("{year} {name}")),
            year = NULL,
            name = NULL
          ),
        on = "title",
        verbose = 0
      ),
      year,
      theme,
      title,
      description,
      modified,
      temporal,
      identifier,
      downloadURL,
      describedBy
    ),
    -theme,
    -year,
    title
  )
  
  dataset <- rsplit(dataset, ~ theme)
  
  list(
    SummaryAll  = sbt(dataset$Summary, year == "All", -year),
    SummaryYear = sbt(dataset$Summary, year != "All", -describedBy) |> mtt(year = as_int(year)),
    General     = mtt(dataset$`General Payments`, year = as_int(year)),
    Research    = mtt(dataset$`Research Payments`, year = as_int(year)),
    Ownership   = mtt(dataset$`Ownership Payments`, year = as_int(year)))
  
}

dataset <- load_open()

dataset
```

## Dictionaries

```{r}
#| label: get_dictionary
get_dictionary <- function(x) {
  
  x <- x |> 
    _[["describedBy"]] |> 
    request() |> 
    req_perform() |> 
    resp_simple_json() |> 
    as_tbl() |> 
    _[["data"]]
  
  list(
    title         = x$title,
    dictionary    = new_tbl(
      field       = delist(get_elem(x$fields, "name")),
      description = delist(get_elem(x$fields, "description")))
  )
}
```

### Covered Recipient Profile Supplement

```{r}
#| label: dict_covered_recipient_profile
dict_covered_recipient <- dataset$SummaryAll |> 
  sbt(not_na(describedBy)) |> 
  get_dictionary()

dict_covered_recipient
```

### General Payment File

```{r}
#| label: dict_general_payments
dict_general <- dataset$General |> 
  sbt(year == "2023") |> 
  get_dictionary()

dict_general
```

### Ownership Payment File

```{r}
#| label: dict_ownership
dict_owner <- dataset$Ownership |> 
  sbt(year == "2023") |> 
  get_dictionary()

dict_owner
```

### Ownership Payment File

```{r}
#| label: dict_research
dict_research <- dataset$Research |> 
  sbt(year == "2023") |> 
  get_dictionary()

dict_research
```
