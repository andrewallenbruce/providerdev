---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Medicaid {#sec-mcdapi}

```{r}
#| label: setup-common-01
#| include: false
source("includes/_common.R")
```

## Links

   * [Medicaid.gov API](https://data.medicaid.gov/about/api)
   * Limit: `8000L`

## Load Catalog

```{r}
#| label: mcd_catalog
catalog_mcd <- function() {

  x <- fload("https://data.medicaid.gov/api/1/metastore/schemas/dataset/items?show-reference-ids")
    
  x <- x |>
    as_tbl() |>
    mtt(
      modified    = as_date(modified),
      issued      = as_date(issued),
      periodicity = recode_iso8601(accrualPeriodicity),
      contact     = reduce_contact(x$contactPoint)
    ) |>
    slt(
      title,
      identifier,
      description,
      periodicity,
      issued,
      modified,
      contact,
      theme,
      keyword,
      distribution,
      temporal,
      references
    )
  
  groups <- new_df(
    title = x$title,
    group = na_if(
      flatten_column(
        map(x$theme, \(x) get_elem(as.list(x), "data"))), "")) |>
    sbt(not_na(group) & group != "Uncategorized")
  
  keys <- new_df(
    title = x$title,
    keywords = na_if(
      flatten_column(
        map(x$keyword, \(x) get_elem(as.list(x), "data"))), ""))
  
  refs <- new_df(
    title = x$title,
    references = na_if(flatten_column(x$references), "NA")) |> 
  sbt(not_na(references) & stri_detect_regex(references, "^https://www.mathematica.org/", negate = TRUE)) |> 
  mtt(references = stri_replace_all_fixed(
    references,
    ", https://www.mathematica.org/",
    ""
  ))
  
  join(
    slt(x, -theme, -keyword, -references), 
    groups,
    on = "title", verbose = 0) |> 
    join(
      keys,
      on = "title",
      verbose = 0) |> 
    join(
      refs,
      on = "title",
      verbose = 0)
}

x <- catalog_mcd()

x
```

```{r}
x$distribution[[326]]$data[[2]]$downloadURL

x$distribution[[1]]$data[[1]]$describedBy
```


```{r}
d <- rowbind(x$distribution, fill = TRUE) |> as_tbl()

new_tbl(
  title = delist(get_elem(d$data, "title")),
  download = delist(get_elem(d$data, "downloadURL")),
  dictionary = delist(get_elem(d$data, "describedBy"))
) |> 
  print(n = 100)
```

```{r}
mcd_url <- function(uuid) {
  paste0("https://data.medicaid.gov/api/1/datastore/query/", uuid, "/0")
}

mcd_dims <- function(uuid) {

  x <- uuid |>
    mcd_url() |>
    request() |>
    req_url_query(
      schema  = "false",
      keys    = "false",
      results = "true",
      count   = "true",
      format  = "json",
      rowIds  = "false",
      limit   = 1,
      offset  = 0
    ) |>
    perform_simple()

  list_tidy(
    rows   = x$count,
    fields = x$query$properties,
    pages  = offset_length(rows, 8000L))

}

identifier <- sbt(x, title == "State Drug Utilization Data 2020") |> _[["identifier"]]

mcd_dims(identifier)

mcd_url(identifier) |> 
  request() |> 
  req_url_query(
    limit = 10,
    offset = 0,
    count = "true",
    results = "true",
    schema = "false",
    keys = "true",
    format = "json",
    rowIds = "false"
  ) |> 
  perform_simple() |> 
  _[["results"]] |> 
  map_na_if() |> 
  as_tbl()
```


```{r}
utils::formatOL(
  x$title
) |> 
  writeLines()
```

