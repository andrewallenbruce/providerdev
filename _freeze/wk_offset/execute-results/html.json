{
  "hash": "e4e4657d90dc381bbd5290fd7e0c1836",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pagination + Offset\"\neditor_options: \n   chunk_output_type: console\n---\n\n\n\n## Pagination Example 1\n\n::: {.cell}\n\n```{.r .cell-code}\nbase <- request(\"https://data.cms.gov/data-api/v1/dataset\") |> \n  req_url_path_append(\"9887a515-7552-4693-bf58-735c77af46d7\") |> \n  req_url_path_append(\"data\")\n\nbase\n\nstats <- base |> \n  req_url_path_append(\"stats\")\n\nstats\n\nstats <- stats |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nstats |> purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $found_rows i1  48702\n- $total_rows i1  48702\n```\n\n\n:::\n\n```{.r .cell-code}\n# Offset shouldn't go to 50000\noffset_sequence(stats$found_rows, 5000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]     0  5000 10000 15000 20000 25000 30000 35000 40000 45000 50000\n```\n\n\n:::\n\n```{.r .cell-code}\nurls <- glue::glue(\n  \"{base$url}\",\n  \"?size=5000&\",\n  \"offset=\",\n  \"{offset_sequence(stats$found_rows, 5000)}\"\n)\n\nresp <- urls[1:3] |> \n  map(\n    function(x) {\n      request(x) |> \n        req_perform() |> \n        resp_body_json(simplifyVector = TRUE) |> \n        tibble()\n    }) |> \n  list_rbind(names_to = \"reqID\") |> \n  janitor::clean_names()\n\nresp |> \n  janitor::get_dupes()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 15\n  req_id first_name last_name npi        specialty  optout_effective_date\n   <int> <chr>      <chr>     <chr>      <chr>      <chr>                \n1      2 Joseph     Kunnel    1740295518 Dentist    09/25/2015           \n2      2 Joseph     Kunnel    1740295518 Dentist    09/25/2015           \n3      3 David      Fernitz   1225232226 Dentist    03/15/2016           \n4      3 David      Fernitz   1225232226 Dentist    03/15/2016           \n5      3 Martin     Drooker   1326103029 Psychiatry 04/01/2016           \n6      3 Martin     Drooker   1326103029 Psychiatry 04/01/2016           \n# ℹ 9 more variables: optout_end_date <chr>, first_line_street_address <chr>,\n#   second_line_street_address <chr>, city_name <chr>, state_code <chr>,\n#   zip_code <chr>, eligible_to_order_and_refer <chr>, last_updated <chr>,\n#   dupe_count <int>\n```\n\n\n:::\n\n```{.r .cell-code}\ndupes <- resp |> \n  count(npi, sort = TRUE) |> \n  filter(n > 1) |> \n  pull(npi)\n\nresp |> \n  filter(npi %in% dupes) |> \n  arrange(npi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 161 × 14\n   req_id first_name last_name npi        specialty        optout_effective_date\n    <int> <chr>      <chr>     <chr>      <chr>            <chr>                \n 1      2 Barbara    Lino      1013130632 Clinical Psycho… 04/16/2021           \n 2      2 Barbara    Lino      1013130632 Clinical Psycho… 04/19/2021           \n 3      2 Victoria   Lasser    1043597586 Clinical Psycho… 10/21/2015           \n 4      3 Victoria   Lasser    1043597586 Clinical Psycho… 01/13/2016           \n 5      2 Peter      Chang     1053320606 Dentist          09/25/2015           \n 6      3 Peter      Chang     1053320606 Dentist          05/31/2016           \n 7      1 Donna      Lewinter  1053493767 Psychiatry       10/10/2002           \n 8      1 Donna      Lewinter  1053493767 Psychiatry       10/10/2012           \n 9      1 Jeffrey    Dean      1073687711 Oral Surgery     06/25/2023           \n10      1 Jeffrey    Dean      1073687711 Maxillofacial S… 06/25/2013           \n# ℹ 151 more rows\n# ℹ 8 more variables: optout_end_date <chr>, first_line_street_address <chr>,\n#   second_line_street_address <chr>, city_name <chr>, state_code <chr>,\n#   zip_code <chr>, eligible_to_order_and_refer <chr>, last_updated <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\nresp |> \n  filter(npi %in% c(\"1225232226\", \"1740295518\", \"1326103029\")) |> \n  relocate(last_updated) |> \n  arrange(npi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 14\n  last_updated req_id first_name last_name npi   specialty optout_effective_date\n  <chr>         <int> <chr>      <chr>     <chr> <chr>     <chr>                \n1 10/15/2024        3 David      Fernitz   1225… Dentist   03/15/2016           \n2 10/15/2024        3 David      Fernitz   1225… Dentist   03/15/2016           \n3 05/15/2024        3 Martin     Drooker   1326… Psychiat… 04/01/2016           \n4 05/15/2024        3 Martin     Drooker   1326… Psychiat… 04/01/2016           \n5 10/15/2024        2 Joseph     Kunnel    1740… Dentist   09/25/2015           \n6 10/15/2024        2 Joseph     Kunnel    1740… Dentist   09/25/2015           \n# ℹ 7 more variables: optout_end_date <chr>, first_line_street_address <chr>,\n#   second_line_street_address <chr>, city_name <chr>, state_code <chr>,\n#   zip_code <chr>, eligible_to_order_and_refer <chr>\n```\n\n\n:::\n:::\n\n## Pagination Example 2\n\nSelect Dataset\n\n::: {.cell}\n\n```{.r .cell-code}\ndistribution <- read_json_arrow(\n  file = \"https://data.cms.gov/data.json\",\n  col_select = c(\"dataset\"),\n  as_data_frame = TRUE) |> \n  to_duckdb() |> \n  pull(dataset) |> \n  pluck(1) |> \n  select(distribution) |> \n  as_tibble() |> \n  unnest(distribution) |> \n  rename_with(remove_at_symbol) |> \n  filter(format      == \"API\", \n         description == \"latest\") |> \n  handle_na()\n\ndistribution |> \n  filter(grepl(\"Enrollment\", title)) |> \n  pull(title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Federally Qualified Health Center Enrollments : 2025-01-01\"      \n[2] \"Home Health Agency Enrollments : 2025-01-01\"                     \n[3] \"Hospice Enrollments : 2025-01-01\"                                \n[4] \"Hospital Enrollments : 2025-01-01\"                               \n[5] \"Medicare Fee-For-Service Public Provider Enrollment : 2024-12-31\"\n[6] \"Rural Health Clinic Enrollments : 2025-01-01\"                    \n[7] \"Skilled Nursing Facility Enrollments : 2025-01-01\"               \n[8] \"Medicare Monthly Enrollment : 2024-09-01\"                        \n```\n\n\n:::\n\n```{.r .cell-code}\naccessURL <- distribution |> \n  filter(grepl(\"Opt Out Affidavits : \", title)) |> \n  pull(accessURL)\n\naccessURL\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"https://data.cms.gov/data-api/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data\"\n```\n\n\n:::\n:::\n\nFormat Query\n\n::: {.cell}\n\n```{.r .cell-code}\nquery <- glue::glue(\n  'c(\n    \"filter[{FID}][path]\"  = \"{PATH}\",\n    \"filter[{FID}][value]\" = \"{VALUE}\"\n  )', \n  FID = 1, \n  PATH = \"State Code\", \n  VALUE = \"CA\")\n\nquery\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nc(\n  \"filter[1][path]\"  = \"State Code\",\n  \"filter[1][value]\" = \"CA\"\n)\n```\n\n\n:::\n\n```{.r .cell-code}\nquery <- query |> \n  rlang::parse_expr() |> \n  rlang::eval_bare()\n\nquery\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n filter[1][path] filter[1][value] \n    \"State Code\"             \"CA\" \n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqueryurl <- accessURL |> \n  request() |> \n  req_url_query(size = 5000, !!!query)\n\nnresults <- queryurl |> \n  req_url_path_append(\"stats\") |> \n  req_perform() |> \n  resp_body_json() |> \n  gelm(\"found\")\n\nnresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9405\n```\n\n\n:::\n\n```{.r .cell-code}\nurl_parse(queryurl$url)\n\n# Offset Shouldn't go to 10000\noff <- offset_sequence(nresults, 5000)\n\noff <- off[-3]\n\nreqs <- map(\n  glue::glue(\n    \"{url}\", \n    \"&offset={off}\", \n    url = queryurl$url, \n    off = ), \n  httr2::request)\n\nres <- req_perform_parallel(reqs) |> resps_successes()\n\nresults <- map(res, \\(x) tibble(resp_body_json(x, simplifyVector = TRUE))) |> \n  bind_rows()\n\nresults\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9,405 × 13\n   `First Name` `Last Name` NPI        Specialty          Optout Effective Dat…¹\n   <chr>        <chr>       <chr>      <chr>              <chr>                 \n 1 Namir        Damluji     1124116793 Psychiatry         07/26/2020            \n 2 Lesley       Macarthur   1073604054 Psychiatry         04/05/2012            \n 3 Sharon       Bae         1346211372 Internal Medicine  06/01/2012            \n 4 Albert       Fuchs       1013964386 Internal Medicine  07/01/2012            \n 5 Abilash      Gopal       1306179486 Psychiatry         11/29/2016            \n 6 Linda        Schaffer    1740495043 Psychiatry         06/14/2012            \n 7 Charles      Schaffer    1114132313 Psychiatry         06/14/2012            \n 8 Cheri        Adrian      1366597833 Clinical Psycholo… 05/25/2012            \n 9 Richard      Wolf        1891713079 Internal Medicine  08/16/2012            \n10 Robert       Woods       1881601029 Psychiatry         06/11/2012            \n# ℹ 9,395 more rows\n# ℹ abbreviated name: ¹​`Optout Effective Date`\n# ℹ 8 more variables: `Optout End Date` <chr>,\n#   `First Line Street Address` <chr>, `Second Line Street Address` <chr>,\n#   `City Name` <chr>, `State Code` <chr>, `Zip code` <chr>,\n#   `Eligible to Order and Refer` <chr>, `Last updated` <chr>\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "wk_offset_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}