{
  "hash": "362d3819f0f1733842837987dbe34fd9",
  "result": {
    "engine": "knitr",
    "markdown": "---\neditor_options: \n   chunk_output_type: console\n---\n\n\n\n# CPC Initiative {#sec-cpc}\n\nThe __Comprehensive Primary Care (CPC) Initiative - Participating Primary Care Practices__ dataset provides a list of practices involved in a multi-payer initiative which fosters collaboration between public and private health care payers to strengthen primary care.\n\n## Metadata\n\n::: {.cell}\n<pre class=\"r-output\"><code>       [ROWS] 497 \n   [MODIFIED] 2025-04-24 \n[PERIODICITY] Annually [R/P1Y] \n   [TEMPORAL] 2017-01-01 • 2017-12-31 \n [DICTIONARY] https://data.cms.gov/resources/cpc-initiative-participating-primary-care-practices-data-dictionary \n       [SITE] https://data.cms.gov/cms-innovation-center-programs/accountable-care-models/cpc-initiative-participating-primary-care-practices \n [REFERENCES] https://data.cms.gov/resources/cpc-initiative-participating-primary-care-practices-methodology \n  [RESOURCES] https://data.cms.gov/data-api/v1/dataset-resources/24da2642-7269-4c75-9a62-0dc3a195b205 \n   [DOWNLOAD] https://data.cms.gov/sites/default/files/2020-07/CPC_Initiative__Participating_Primary_Care_Practices.csv \n</code></pre>\n:::\n\n### Resources\n\n::: {.cell}\n<pre class=\"r-output\"><code>[CSV] … CPC Initiative - Participating Primary Care Practices (98.8K)\n[PDF] … CPC Initiative - Participating Primary Care Practices Methodology (72.3K)\n[PDF] … CPC Initiative - Participating Primary Care Practices Data Dictionary (46.6K)\n</code></pre>\n:::\n\n### Dictionary\n\n::: {.cell}\n<pre class=\"r-output\"><code><span style='color: #BB0000; text-decoration: underline;'>Name of Initiative</span>\n<span style='color: #555555;'>Name of the initiative.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>Participating Practice</span>\n<span style='color: #555555;'>Participating practice's name.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>Participating Practice Location</span>\n<span style='color: #555555;'>Participating practice's location, including\nlongitude and latitude.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>State</span>\n<span style='color: #555555;'>State where the participating practice is located.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>City</span>\n<span style='color: #555555;'>City where the participating practice is located.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>Geographic Reach</span>\n<span style='color: #555555;'>Geographic reach of the participating practice.\nThis field is not currently in use.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>Street Address</span>\n<span style='color: #555555;'>Street where the participating practice is\nlocated.</span>\n\n<span style='color: #BB0000; text-decoration: underline;'>Zip Code</span>\n<span style='color: #555555;'>Zip code of the participating practice. This field\nis not currently in use.</span>\n</code></pre>\n:::\n\n## Data\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- quick(\"cpc_primary\", limit = 5000) |>\n  slt(\n    practice = \"Participating Practice\",\n    location = \"Participating Practice Location\",\n    state    = \"State\",\n    city     = \"City\",\n    address  = \"Street Address\"\n  ) |>\n  mtt(\n    location = unlist(\n      stri_extract_all_regex(location, \"(?<=\\\\().*(?=\\\\))\"),\n      use.names = FALSE\n    ),\n    lat = stri_extract(location, regex = \".*(?=\\\\,)\") |> as.double(),\n    lon = stri_extract(location, regex = \"(?<=\\\\,\\\\s).*\") |> as.double(),\n    location = NULL\n  ) |> \n  sf::st_as_sf(\n      coords = c(\"lon\", \"lat\"),\n      crs = sf::st_crs(4326),\n      na.fail = FALSE)\n\nres_ny <- res |> \n  dplyr::filter(state == \"NY\")\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usmap)\nlibrary(ggplot2)\n\nres_map <- usmap_transform(res_ny)\n\nplot_usmap(\n  \"counties\",\n  include            = c(\"NY\"),\n  color              = \"white\", \n  fill               = \"grey80\", \n  linewidth          = 0.25) +\n  geom_sf(data       = res_map, \n          color      = \"orange\"\n          # shape      = 21,\n          # size       = 3\n          ) +\n  ggrepel::geom_label_repel(\n    data             = res_map,\n    aes(label        = practice, \n        geometry     = geometry),\n    size             = 3, \n    alpha            = 0.8,\n    label.size       = 0,\n    segment.color    = \"red\", \n    segment.size     = 1,\n    point.padding    = 0.5,\n    stat             = \"sf_coordinates\", \n    seed             = 1002,\n    force            = 5,\n    max.overlaps     = 20) +\n  theme(\n    panel.background = element_rect(\n      color          = \"white\", \n      fill           = \"lightyellow\"))\n```\n\n::: {.cell-output-display}\n![](care_cpc_files/figure-html/map-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "care_cpc_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}