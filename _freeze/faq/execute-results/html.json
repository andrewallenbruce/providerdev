{
  "hash": "b7ec230c178d2c2b701f962d8e88fe50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"API FAQ\"\neditor_options: \n   chunk_output_type: console\n---\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"https://data.cms.gov/api-docs\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nCMS API Docs\n</a>\n<a href=\"https://data.cms.gov/sites/default/files/2024-10/7ef65521-65a4-41ed-b600-3a0011f8ec4b/API%20Guide%20Formatted%201_6.pdf\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nAPI FAQ\n</a>\n```\n\n:::\n:::\n\n\n> Working through the updated [API FAQ](https://data.cms.gov/sites/default/files/2024-10/7ef65521-65a4-41ed-b600-3a0011f8ec4b/API%20Guide%20Formatted%201_6.pdf) *(Oct 2024 - v1.6)*  for [data.CMS.gov](https://data.cms.gov/api-docs), extracting the relevant information\n\nThe Application Programming Interface (API) offers access to the Centers for Medicare & Medicaid Services public data allowing you to interactively analyze our datasets in real-time. Our APIs are organized around REST and have predictable resource-oriented URLs, accept form-encoded requests and returns JSON & JSON:API encoded responses and uses standard HTTP response codes.\n\n## What's new\n\nResources, which are supplemental documents to the main dataset, are now available for programmatic download in the API. Through our Public API Open Data Catalog, you can find direct download links for resources such as sub-files, tables, supplementary data, reports, and documentation.  The new endpoints can be accessed using the 'resourcesAPI' field. For more details on the data catalog and code examples, download our API FAQ document.\n\n## API integrations\n\nTo integrate endpoint requests with the data.cms.gov Public API, follow these steps:\n\n   1. Find Dataset & Identifier: \n      * [Search for dataset](https://data.cms.gov/search) and visit its **overview** page. \n      * Click on **Access API**, then **API Docs for the Dataset**.\n   2. Integrate Dataset Endpoint Paths:\n      * Endpoint structure: `data.cms.gov/data-api/v1/dataset/{{dataset_id}}/data` \n   3. Integrate your API Endpoint Requests\n      * System uses **JSONAPI** query syntax.\n      * Most common: Key-value filter (`?filter[field_name]=value&filter[field_other]=value`)\n      * Responses are paged and support a max page size of 5000 rows. \n      * Use the size & offset query parameters to page through the data\n\n### Filter Examples\n\n**Exact Match Search on Column:**\n   * <dataset> `\"Medicare Fee-For-Service Public Provider Enrollment\"`\n   * <column> `PROVIDER_TYPE_DESC` == `\"PRACTITIONER-GENERAL PRACTICE\"`\n   * REQUEST: `/data?`\n      * `filter[PROVIDER_TYPE_DESC]=PRACTITIONER%20-%20GENERAL%20PRACTICE`\n\n**Contains Search on Column:**\n   * <dataset> Medicare Fee-For-Service Public Provider Enrollment Dataset \n   * <column> `PROVIDER_TYPE_DESC`\n   * <contains> all rows that contain `SUPPLIER`\n   * REQUEST: `/data?`\n      * `filter[example][condition][path]=PROVIDER_TYPE_DESC&`\n      * `filter[example][condition][operator]=CONTAINS&`\n      * `filter[example][condition][value]=SUPPLIER`\n\n**Combination search on 2 columns:** \n   * <dataset> `\"Medicare Fee-For-Service Public Provider Enrollment\"`\n   * <column> `PROVIDER_TYPE_DESC`\n   * <contains> all rows that contain `PRACTITIONER`\n   * <column> `STATE_CD` == `\"MD\"`\n   * REQUEST: `/data?`\n      * `filter[filter-1][condition][path]=PROVIDER_TYPE_DESC&`\n      * `filter[filter-1][condition][operator]=CONTAINS&`\n      * `filter[filter-1][condition][value]=PRACTITIONER&`\n      * `filter[filter-2][condition][path]=STATE_CD&`\n      * `filter[filter-2][condition][operator]==&`\n      * `filter[filter-2][condition][value]=MD`\n\n[Refer to the Drupal documentation](https://www.drupal.org/docs/core-modules-and-themes/core-modules/jsonapi-module/filtering) for more information on filtering API requests.\n\n--------------------------------------------------------------------------------\n\n# Data Catalog API\n\nThe [`data.json`](https://data.cms.gov/data.json) file is an [**Open Data**](https://resources.data.gov/resources/dcat-us/) catalog containing all available datasets. As new data is added, `data.json` is automatically updated.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_json <- read_json_arrow(\n  file = \"https://data.cms.gov/data.json\",\n  col_select = c(\"dataset\"),\n    as_data_frame = TRUE) |> \n  to_duckdb()\n\ndata_json |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: ??\nColumns: 1\nDatabase: DuckDB v1.1.3 [Andrew@Windows 10 x64:R 4.4.2/:memory:]\n$ dataset <list> [<data.frame[139 x 22]>]\n```\n\n\n:::\n:::\n\n\n> **Note:** Removing `col_select = c(\"dataset\")` from the above call returns the following metadata:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n@context    <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.jsonld\n@id         <chr> https://data.cms.gov/data.json\n@type       <chr> dcat:Catalog\nconformsTo  <chr> https://project-open-data.cio.gov/v1.1/schema\ndescribedBy <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.json\ndataset     <list> [<data.frame[138 x 22]>]\n```\n\n\n:::\n:::\n\n\nWithin `data.json`, there is an array called `dataset`. One can search through this array using the dataset's `title`, such as `\"Payroll Based Journal Daily Nurse Staffing\"`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_json |> \n  pull(dataset) |> \n  pluck(1) |> \n  filter(\n    grepl(\n      \"Payroll Based Journal Daily Nurse Staffing\", \n      title)) |> \n  mutate(\n    bureauCode = delist(bureauCode),\n    keyword = map_chr(\n      keyword, \n      \\(x) paste0(\n        delist(x), \n        collapse = \", \")),\n    language = delist(language),\n    programCode = delist(programCode),\n    references = delist(references),\n    theme = delist(theme)) |> \n  unnest_wider(contactPoint, names_sep = \"_\") |>\n  unnest_wider(publisher, names_sep = \"_\") |>\n  terse(width = 110, prefix = \"- \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49m@type                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mdcat:Dataset                                                                 \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccessLevel           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mpublic                                                                       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccrualPeriodicity    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mR/P3M                                                                        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mbureauCode            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m009:38                                                                       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_@type    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mvcard:Contact                                                                \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_fn       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNursing Home Staffing - CCSQ (PBJ Reports)                                   \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_hasEmail \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mmailto:nhstaffing@cms.hhs.gov                                                \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescribedBy           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/resources/payroll-based-journal-daily-nurse-staffing-dat\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdataQuality           \u001b[38;5;72ml1\u001b[39m\u001b[49m \u001b[38;5;237mT                                                                            \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescription           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mThe Payroll Based Journal (PBJ) Nurse Staffing and Non-Nurse Staffing dataset\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdistribution          \u001b[38;5;72mL1\u001b[39m\u001b[49m \u001b[38;5;253mlist(structure(list(\"@type\" = c(\"dcat:Distribution\", \"dcat:Distribution\", \"dc\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49midentifier            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset/7e0d53ba-8f02-4c66-98a5-14a1c997c50d\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mkeyword               \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mMedicare, Original Medicare, Hospitals & Facilities, Skilled Nursing, Health \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlandingPage           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/quality-of-care/payroll-based-journal-daily-nurse-staffi\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlanguage              \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237men-US                                                                        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlicense               \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://www.usa.gov/government-works                                         \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmodified              \u001b[38;5;72mp1\u001b[39m\u001b[49m \u001b[38;5;237m2024-10-31                                                                   \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mprogramCode           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m009:000                                                                      \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mpublisher_@type       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237morg:Organization                                                             \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mpublisher_name        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mCenters for Medicare & Medicaid Services                                     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mreferences            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/resources/payroll-based-journal-methodology-0           \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtemporal              \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m2017-01-01/2024-06-30                                                        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtheme                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mMedicare                                                                     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtitle                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mPayroll Based Journal Daily Nurse Staffing                                   \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescribedByType       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                           \u001b[0m ...\n```\n\n\n:::\n:::\n\n\nWithin `dataset`, there is an array called `distribution` which contains all dataset versions, in all available formats:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution <- data_json |> \n  pull(dataset) |> \n  pluck(1) |> \n  select(distribution) |> \n  unnest(distribution)\n\ndistribution\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,897 × 10\n   `@type`   format accessURL resourcesAPI description title modified           \n   <chr>     <chr>  <chr>     <chr>        <chr>       <chr> <dttm>             \n 1 dcat:Dis… API    https://… https://dat… latest      Acco… 2024-01-29 00:00:00\n 2 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2024-01-29 00:00:00\n 3 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2024-01-29 00:00:00\n 4 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2023-03-06 00:00:00\n 5 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2023-03-06 00:00:00\n 6 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-26 00:00:00\n 7 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2022-01-26 00:00:00\n 8 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-27 00:00:00\n 9 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2022-01-27 00:00:00\n10 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-27 00:00:00\n# ℹ 3,887 more rows\n# ℹ 3 more variables: temporal <chr>, downloadURL <chr>, mediaType <chr>\n```\n\n\n:::\n:::\n\n## Formats\n\n   * __description__ `\"latest\"` is a URL that always point to the latest data\n   * __mediaType__ `\"text/csv\"` is a downloadable CSV file\n   * __mediaType__ `\"application/zip\"` is a downloadable ZIP file\n   * __format__ `\"API\"` is an API endpoint\n   * Remaining entries provide references to the data at fixed points in time, listed in descending order by date.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution |> \n  count(description, \n        format, \n        mediaType) |> \n  as_emphatic() |> \n  hl(ggplot2::scale_colour_viridis_c(), cols = \"n\") |>\n  hl_adjust(text_contrast = 0.5, na = \"-\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<pre style=''>\n<span style='text-decoration:underline;'>    description format                mediaType    n</span><br/>1  <span style='color:#808080;'><span>      latest</span></span><span style='color:#808080;'><span>    API</span></span><span style='color:#808080;'><span>                        -</span></span><span style='color:#a38db1;'><span style='background-color:#461a62;'>  112</span></span><br/>2  <span style='color:#808080;'><span>           -</span></span><span style='color:#808080;'><span>    API</span></span><span style='color:#808080;'><span>                        -</span></span><span style='color:#7f7413;'><span style='background-color:#fde725;'> 1626</span></span><br/>3  <span style='color:#808080;'><span>           -</span></span><span style='color:#808080;'><span>      -</span></span><span style='color:#808080;'><span> application/vnd.ms-excel</span></span><span style='color:#a280aa;'><span style='background-color:#440154;'>   21</span></span><br/>4  <span style='color:#808080;'><span>           -</span></span><span style='color:#808080;'><span>      -</span></span><span style='color:#808080;'><span>          application/zip</span></span><span style='color:#9cb1c5;'><span style='background-color:#39638b;'>  534</span></span><br/>5  <span style='color:#808080;'><span>           -</span></span><span style='color:#808080;'><span>      -</span></span><span style='color:#808080;'><span>                 text/csv</span></span><span style='color:#7b7315;'><span style='background-color:#f5e62a;'> 1604</span></span><br/>\n</pre>\n`````\n:::\n:::\n\nFor example, the URL in the following example will *always* point to the **Payroll Based Journal Daily Nurse Staffing** data from **Q2 2021**:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# \"https://data.cms.gov/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data\"\nstaffing <- distribution |> \n  filter(\n    grepl(\"Payroll Based Journal Daily Nurse Staffing\", title),\n    format == \"API\",\n    grepl(\"^2021-04\", temporal)) |> \n  pull(accessURL) |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nhead(staffing, 1) |> \n  terse(width = 110, prefix = \"- \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49mPROVNUM          \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m015010                        \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mPROVNAME         \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mCOOSA VALLEY HEALTHCARE CENTER\u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCITY             \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mSYLACAUGA                     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSTATE            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mAL                            \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCOUNTY_NAME      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mTalladega                     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCOUNTY_FIPS      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m121                           \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCY_Qtr           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m2021Q2                        \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mWorkDate         \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m20210401                      \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mMDScensus        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m70                            \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNDON        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m8                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNDON_emp    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m8                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNDON_ctr    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNadmin      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m48.25                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNadmin_emp  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m48.25                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RNadmin_ctr  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RN           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m32                            \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RN_emp       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m32                            \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_RN_ctr       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPNadmin     \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPNadmin_emp \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPNadmin_ctr \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPN          \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m63.25                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPN_emp      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m63.25                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_LPN_ctr      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_CNA          \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m189.5                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_CNA_emp      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m189.5                         \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_CNA_ctr      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_NAtrn        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_NAtrn_emp    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_NAtrn_ctr    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_MedAide      \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_MedAide_emp  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mHrs_MedAide_ctr  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m0                             \u001b[39m\u001b[49m\n```\n\n\n:::\n:::\n\n## Temporal Data\n\nDatasets with multiple historical versions available will have a `temporal` field in the `distribution` array of the `data.json` file which will indicate the time period.\n\n**Format**: `yyyy-mm-dd/yyyy-mm-dd`\n\nThe following example finds the API link for the [2017 Medicare Inpatient Hospitals - by Provider and Service Data](https://data.cms.gov/provider-summary-by-type-of-service/medicare-inpatienthospitals/medicare-inpatient-hospitals-by-provider-and-service):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution |> \n  filter(\n    grepl(\"Medicare Inpatient Hospitals - by Provider and Service\", title), \n    format == \"API\",\n    temporal == \"2017-01-01/2017-12-31\") |> \n  terse(width = 110, prefix = \"- \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49m@type        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mdcat:Distribution                                                                      \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mformat       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mAPI                                                                                    \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccessURL    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset/b61ba5eb-021b-4510-947e-0f198982b0e8/data     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mresourcesAPI \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset-resources/b61ba5eb-021b-4510-947e-0f198982b0e8\u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescription  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                                     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtitle        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mMedicare Inpatient Hospitals - by Provider and Service : 2017-12-31                    \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmodified     \u001b[38;5;72mp1\u001b[39m\u001b[49m \u001b[38;5;237m2023-05-10                                                                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtemporal     \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m2017-01-01/2017-12-31                                                                  \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdownloadURL  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                                     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmediaType    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                                     \u001b[39m\u001b[49m\n```\n\n\n:::\n:::\n\n## Methods: Same Data, Different Output\n\nThere are two methods of accessing the latest data. \n\nBoth result in a URL pointing to the most recent version of the dataset. This URL is canonical, i.e., will not change as new versions are added. \n\nFor this reason, it is _recommended to **always** start with the **`data.json` object** as opposed to hardcoding any URL_.\n\n### Method 1: Standard JSON\n\n```r\n<data_json>\n    => <dataset> \n    => <distribution> \n    -> $(description == \"latest\")\n    -> $(accessURL)\n```\nUse the `distribution` with the \"latest\" `description`. This URL returns **standard JSON**.\n\n> For example, this URL for Opt Out Affidavits is \n> `\"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data\"` \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\njson_standard <- distribution |> \n  filter(\n    grepl(\"Order and Referring\", title),\n    description == \"latest\")\n\njson_standard |> \n  terse(width = 110, prefix = \"- \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49m@type        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mdcat:Distribution                                                                      \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mformat       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mAPI                                                                                    \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccessURL    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset/c99b5865-1119-4436-bb80-c5af2773ea1f/data     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mresourcesAPI \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset-resources/c99b5865-1119-4436-bb80-c5af2773ea1f\u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescription  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mlatest                                                                                 \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtitle        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mOrder and Referring : 2024-12-20                                                       \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmodified     \u001b[38;5;72mp1\u001b[39m\u001b[49m \u001b[38;5;237m2024-12-20                                                                             \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtemporal     \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m2024-12-08/2024-12-14                                                                  \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdownloadURL  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                                     \u001b[39m\u001b[49m\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmediaType    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                                     \u001b[39m\u001b[49m\n```\n\n\n:::\n:::\n\n### Method 2: JSON:API\n\n```r\n<data_json>\n    => <dataset> \n    -> $(title == \"Order and Referring\")\n    -> $(identifier)\n```\n\nUse the URL in the `identifier` field. \n\nThis URL returns JSON in the **JSON:API** form. It has a different response structure that includes metadata about the dataset. Otherwise it is identical to Method 1. \n\n> For example, this URL for Opt Out Affidavits: \n> `\"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data-viewer\"`\n\nThe following example finds the API link for the latest [Order and Referring](https://data.cms.gov/provider-characteristics/medicare-provider-supplierenrollment/order-and-referring) Data:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\njson_api <- data_json |> \n  pull(dataset) |> \n  pluck(1) |> \n  dplyr::tibble() |> \n  filter(grepl(\"Order and Referring\", title))\n\njson_api |> \n  mutate(\n    bureauCode = delist(bureauCode),\n    keyword = map_chr(\n      keyword, \n      \\(x) paste0(\n        delist(x), \n        collapse = \", \")),\n    language = delist(language),\n    programCode = delist(programCode),\n    references = delist(references),\n    theme = delist(theme)) |> \n  unnest_wider(contactPoint, names_sep = \"_\") |>\n  unnest_wider(publisher, names_sep = \"_\") |> \n  terse(width = 110, prefix = \"- \")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49m@type                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mdcat:Dataset                                                                 \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccessLevel           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mpublic                                                                       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49maccrualPeriodicity    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mR/P3.5D                                                                      \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mbureauCode            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m009:38                                                                       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_@type    \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mvcard:Contact                                                                \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_fn       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mProvider Enrollment Data Requests - CPI                                      \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mcontactPoint_hasEmail \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mmailto:ProviderEnrollmentDataRequests@cms.hhs.gov                            \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescribedBy           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/resources/order-and-referring-data-dictionary           \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdataQuality           \u001b[38;5;72ml1\u001b[39m\u001b[49m \u001b[38;5;237mT                                                                            \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescription           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mThe Order and Referring dataset provides information on all physicians and no\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdistribution          \u001b[38;5;72mL1\u001b[39m\u001b[49m \u001b[38;5;253mlist(structure(list(\"@type\" = c(\"dcat:Distribution\", \"dcat:Distribution\", \"dc\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49midentifier            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/data-api/v1/dataset/c99b5865-1119-4436-bb80-c5af2773ea1f\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mkeyword               \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mMedicare, Original Medicare, Provider Enrollment                             \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlandingPage           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/provider-characteristics/medicare-provider-supplier-enro\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlanguage              \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237men-US                                                                        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mlicense               \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://www.usa.gov/government-works                                         \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mmodified              \u001b[38;5;72mp1\u001b[39m\u001b[49m \u001b[38;5;237m2024-12-20                                                                   \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mprogramCode           \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m009:000                                                                      \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mpublisher_@type       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237morg:Organization                                                             \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mpublisher_name        \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mCenters for Medicare & Medicaid Services                                     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mreferences            \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/resources/order-and-referring-methodology               \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtemporal              \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237m2023-05-21/2024-12-14                                                        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtheme                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mMedicare                                                                     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mtitle                 \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mOrder and Referring                                                          \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mdescribedByType       \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mNA                                                                           \u001b[0m ...\n```\n\n\n:::\n:::\n\n--------------------------------------------------------------------------------\n\n# Pagination\n\nThe default is to provide the first 1,000 rows per request. However, there is an ability to increase the limit to 5,000 rows per request. You can use pagination to retrieve the entire dataset. \n\nFor example, with our [Opt Out Affidavits]() dataset:\n\n   1. Start with the following request to get the number of rows:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequest(\"https://data.cms.gov/data-api/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data/stats\") |>\n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$found_rows\n[1] 47984\n\n$total_rows\n[1] 47984\n```\n\n\n:::\n:::\n      \n   2. Make a request for the *first* 5,000 rows:\n      \n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequest(\"https://data.cms.gov/data-api/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data?size=5000&offset=0\") |>\n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE) |> \n  tibble() |> \n  terse(width = 110, prefix = \"- \", config = list(gsep = \"\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Name                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mJonathan    \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mKevin              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mDavid             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mBruce          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mAlan\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mRaines      \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mCarlson            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mAltchek           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mShapiro        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mMcfa\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mNPI                         \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m1720444581  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1811981905         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1114974490        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1548271240     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1861\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSpecialty                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mPsychiatry  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mInternal Medicine  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mOrthopedic Surgery\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mPsychiatry     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mClin\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout Effective Date       \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m01/30/1998  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2010         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2012        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m12/28/2015     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/0\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout End Date             \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m01/30/2026  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2026         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2026        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m12/28/2025     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/0\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Line Street Address   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m1629 MONK RD\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m10700 CHARTER DRIVE\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m535 EAST 70TH ST  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m666 GLENBROK RD\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m7330\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSecond Line Street Address  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mP O BOX 470 \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m                   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m                  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mSTE \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCity Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mGLADWYNE    \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mCOLUMBIA           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNEW YORK          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mSTAMFORD       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mANNA\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mState Code                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mPA          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mMD                 \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNY                \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mCT             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mVA  \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mZip code                    \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m190351349   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m21044              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m100214823         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m069061439      \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m2200\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mEligible to Order and Refer \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mN           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY                  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY                 \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY   \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast updated                \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m02/15/2024  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m08/15/2024         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m08/15/2024        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/15/2024     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m02/1\u001b[0m ...\n```\n\n\n:::\n:::\n      \n   3. Make a request for the *next* 5,000 rows:\n   \n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequest(\"https://data.cms.gov/data-api/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data?size=5000&offset=5000\") |>\n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE) |> \n  tibble() |> \n  terse(width = 110, prefix = \"- \", config = list(gsep = \"\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Name                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mKatherine            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mBret           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mJeffrey          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mLorna          \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mWhipple              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mJacobson       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mZeller           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mBenjamin       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mNPI                         \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m1184839557           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1790893956     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1730172248       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1760572390     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSpecialty                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mClinical Psychologist\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mOral Surgery   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mDentist          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mClinical Psycho\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout Effective Date       \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m08/29/2013           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m06/28/2014     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m09/28/2022       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2014     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout End Date             \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m08/29/2025           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m06/28/2026     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m09/28/2026       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/01/2026     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Line Street Address   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m10529 SAINT PAUL ST  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1718 S 288TH ST\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1101 S AIRLINE RD\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m455 E 200 S    \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSecond Line Street Address  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m                     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m                 \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mSTE 110        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCity Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mKENSINGTON           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mFEDERAL WAY    \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mMOUNT PLEASANT   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mSALT LAKE CITY \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mState Code                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mMD                   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mWA             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mWI               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mUT             \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mZip code                    \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m208952614            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m98003          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m534063888        \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m841112156      \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mEligible to Order and Refer \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mN                    \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mN                \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY              \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast updated                \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m09/15/2023           \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07/15/2024     \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m11/15/2024       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m08/15/2024     \u001b[0m ...\n```\n\n\n:::\n:::\n\n   4. Continue increasing the offset until you reach the count from step 1\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequest(\"https://data.cms.gov/data-api/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data?size=5000&offset=10000\") |>\n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE) |> \n  tibble() |> \n  terse(width = 110, prefix = \"- \", config = list(gsep = \"\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Name                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mSteven              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mDavid               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mMichael            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mFrank    \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mGlickman            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mChristensen         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mIlardi             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mShallenbe\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mNPI                         \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m1942372362          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1255403606          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1558440842         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m134630003\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSpecialty                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mDentist             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mDentist             \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mDentist            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mInternal \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout Effective Date       \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m11/30/2015          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m11/30/2015          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m12/10/2015         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/01/201\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mOptout End Date             \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m11/30/2025          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m11/30/2025          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m12/10/2025         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/01/202\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mFirst Line Street Address   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m71 FRANKLIN TURNPIKE\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m71 FRANKLIN TURNPIKE\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m2713 ROUTE 23 SOUTH\u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m1231 COUN\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mSecond Line Street Address  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m#1-1                \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m#1-1                \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m                   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m         \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mCity Name                   \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mWALDWICK            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mWALDWICK            \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNEWFOUNDLAND       \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mCARSON CI\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mState Code                  \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mNJ                  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNJ                  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNJ                 \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mNV       \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mZip code                    \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m07463               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07463               \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m07435              \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m897038372\u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mEligible to Order and Refer \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237mY                   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY                   \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY                  \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237mY        \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49mLast updated                \u001b[38;5;72mc5000\u001b[39m\u001b[49m \u001b[38;5;237m12/15/2023          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m12/15/2023          \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m01/15/2024         \u001b[39m\u001b[49m\u001b[38;5;253m\u001b[39m\u001b[49m\u001b[38;5;237m02/15/202\u001b[0m ...\n```\n\n\n:::\n:::\n\n## Pagination Example\n\nPaginates through the [Opt Out Affidavits](https://data.cms.gov/provider-characteristics/medicare-provider-supplier-enrollment/opt-out-affidavits) data:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noptout_n <- distribution |> \n  filter(\n    grepl(\"Opt Out Affidavits : \", title), \n    format == \"API\",\n    description == \"latest\") |> \n  str_glue_data(\"{accessURL}/stats\") |> \n  request() |> \n  req_perform() |> \n  resp_body_json()\n\noptout_n$total_rows / 5000\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.6\n```\n\n\n:::\n\n```{.r .cell-code}\n# req_perform_iterative()\n```\n:::\n\n## Find the Number of Rows\n\nYou can use the `data-viewer/stats` or `data/stats` endpoints i.e., \n\n   * `data.cms.gov/data-api/v1/dataset/{ID}/data-viewer/stats`\n   * `data.cms.gov/data-api/v1/dataset/{ID}/data/stats`\n\n# Download CSV/ZIP versions\n\n   1. Start with a request to the `data.json`. \n   2. Matching the dataset `title` with its name.\n   3. The most recent release will be at the top of the `distribution` list. \n   4. There is also a `temporal` field which can be used to find earlier releases.\n   5. Datasets available as either CSV or ZIP files will be designated in the `mediaType` field.\n   6. The `downloadURL` field will provide a direct download link for the data.\n\n## CSV Example\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\norderrefer_url <- distribution |> \n  filter(\n    grepl(\"Order and Referring\", title), \n    mediaType == \"text/csv\",\n    modified == max(modified)) |> \n  pull(downloadURL)\n  \norderrefer_csv <- read_csv_arrow(\n  file = orderrefer_url, \n  as_data_frame = TRUE) |> \n  to_duckdb()\n\n# approx 2 million rows\norderrefer_csv\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   table<arrow_002> [?? x 8]\n# Database: DuckDB v1.1.3 [Andrew@Windows 10 x64:R 4.4.2/:memory:]\n          NPI LAST_NAME     FIRST_NAME PARTB DME   HHA   PMD   HOSPICE\n        <int> <chr>         <chr>      <chr> <chr> <chr> <chr> <chr>  \n 1 1558467555 .MCINDOE      THOMAS     N     Y     N     Y     N      \n 2 1770667479 A             SCOTT      N     Y     N     Y     N      \n 3 1417051921 A BELLE       N          Y     Y     Y     Y     N      \n 4 1356025894 A FOLEY       MEGAN      Y     Y     Y     Y     N      \n 5 1972040137 A NOVOTNY     ELIZABETH  Y     Y     Y     Y     N      \n 6 1760465553 A SATTAR      MUHAMMAD   Y     Y     Y     Y     Y      \n 7 1295400745 A'NEAL        BROGAN     Y     Y     N     N     N      \n 8 1265446264 A'VANT FOWLER CATHERINE  Y     Y     N     N     N      \n 9 1700562584 AAB           BAILEY     Y     Y     Y     N     Y      \n10 1205257284 AAB           KATIE      Y     Y     N     N     N      \n# ℹ more rows\n```\n\n\n:::\n:::\n\n## ZIP Example\n\n_CMS Summary Statistics/COVID data -> Likely not relevant to package scope_\n\n# Additional Resources\n\nThe data.json has been updated to include a resources API that allows you to easily find the download URL for resources, which are supplemental documents to the main dataset.\n1. Start with a request to the data.json. Always start with the catalog, do not hard code or try to predict the download URL. The catalog will update automatically when new data is available.\n2. Find the dataset within the catalog by matching the “title” with the name of the dataset.\n3. Within each dataset, there is an array called distribution which will contain all the versions of the data in all available formats for each version.\n4. The most recent release will be at the top of the distribution list, there is also a “temporal” field which can be used to find earlier releases.\n5. The “resourcesAPI” is a secondary API endpoint from data.json that will provide a link for the resources connected to the dataset and the download URL for the supporting documents.\n6. Using the link stored in the “resourcesAPI”, limit by the “name” of the resource you want to download. The name of the resource may change between versions.\n7. The “downloadURL” will provide a direct download link for the resource.\n\n## Resource Example\n\nResource File Download URL Link for Latest Dataset Code Example\n\nFinds the download link for the latest [Medicare Fee-For-Service Public Provider Enrollment Reassignment Sub-File](https://data.cms.gov/provider-characteristics/medicare-provider-supplier-enrollment/medicare-fee-for-service-public-provider-enrollment)\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresp_resources <- distribution |> \n  filter(\n  grepl(\"Medicare Fee-For-Service\", title),\n  description == \"latest\") |> \n  pull(resourcesAPI) |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = FALSE) |> \n  list_flatten() |> \n  list_flatten()\n\nreassign_url <- tibble(\n  name = gelm(resp_resources, \"name$\") |> delist(),\n  size = gelm(resp_resources, \"fileSize$\") |> delist(),\n  url =  gelm(resp_resources, \"downloadURL$\") |> delist()) |> \n  filter(grepl(\"Reassignment\", name))\n\nreassign_url |> \n  terse(width = 110, \n        prefix = \"- \", \n        config = list(gsep = \"\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- \u001b[38;5;253m$\u001b[39m\u001b[49mname \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mReassignment Sub-File 2024 Q3                                                                 \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49msize \u001b[38;5;72mi1\u001b[39m\u001b[49m \u001b[38;5;237m108956340                                                                                     \u001b[0m ...\n- \u001b[38;5;253m$\u001b[39m\u001b[49murl  \u001b[38;5;72mc1\u001b[39m\u001b[49m \u001b[38;5;237mhttps://data.cms.gov/sites/default/files/2024-10/9dc1f6a0-4339-4250-b9da-d25284650662/PPEF_Rea\u001b[0m ...\n```\n\n\n:::\n\n```{.r .cell-code}\nreassign_csv <- read_csv_arrow(\n  file = reassign_url$url, \n  as_data_frame = TRUE) |> \n  to_duckdb()\n\nreassign_csv\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   table<arrow_003> [?? x 2]\n# Database: DuckDB v1.1.3 [Andrew@Windows 10 x64:R 4.4.2/:memory:]\n   REASGN_BNFT_ENRLMT_ID RCV_BNFT_ENRLMT_ID\n   <chr>                 <chr>             \n 1 I20031103000001       O20031216000213   \n 2 I20031103000001       O20111004000177   \n 3 I20031103000007       O20040308000883   \n 4 I20031103000007       O20051206000046   \n 5 I20031103000014       O20070303000050   \n 6 I20031103000014       O20221026001638   \n 7 I20031103000020       O20190812002967   \n 8 I20031103000033       O20181107003537   \n 9 I20031103000033       O20181204002777   \n10 I20031103000037       O20051216000183   \n# ℹ more rows\n```\n\n\n:::\n:::\n\n# Filtering and Manipulating Data\n\n-------------------------------------------------------------------------------\n\n## Schema\n\n```r\n<data.json>\n  |--@context\n  |--@id\n  |--@type\n  |--conformsTo\n  |--describedBy\n  |==<dataset>\n  |    |--@type\n  |    |--accessLevel\n  |    |--accrualPeriodicity\n  |    |--bureauCode\n  |    |--contactPoint\n  |    |--describedBy\n  |    |--dataQuality\n  |    |--description\n  |    |==<distribution>\n  |    |    |--@type\n  |    |    |--format\n  |    |    |--accessURL\n  |    |    |--resourcesAPI\n  |    |    |--description\n  |    |    |--title\n  |    |    |--modified\n  |    |    |--temporal\n  |    |    |--downloadURL\n  |    |    |--mediaType\n  |    |--identifier\n  |    |--keyword\n  |    |--landingPage\n  |    |--language\n  |    |--license\n  |    |--modified\n  |    |--programCode\n  |    |--publisher\n  |    |--references\n  |    |--temporal\n  |    |--theme\n  |    |--title\n  |____|--describedByType\n```\n",
    "supporting": [
      "faq_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}