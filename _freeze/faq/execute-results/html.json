{
  "hash": "b70d54dae799abb7901b994985d27e56",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"API FAQ\"\neditor_options: \n   chunk_output_type: console\n---\n\nWorking through the new (October 2024 - Version 1.6) [API FAQ](https://data.cms.gov/sites/default/files/2024-10/7ef65521-65a4-41ed-b600-3a0011f8ec4b/API%20Guide%20Formatted%201_6.pdf) for [data.CMS.gov](https://data.cms.gov/api-docs), extracting the relevant information\n\n::: {.cell}\n\n:::\n\n\n## Schema\n\n```r\n[data.json]\n   |--@context\n   |--@id\n   |--@type\n   |--conformsTo\n   |--describedBy\n   |==[dataset]\n   |     |--@type\n   |     |--accessLevel\n   |     |--accrualPeriodicity\n   |     |--bureauCode\n   |     |--contactPoint\n   |     |--describedBy\n   |     |--dataQuality\n   |     |--description\n   |     |==[distribution]\n   |     |     |--@type\n   |     |     |--format\n   |     |     |--accessURL\n   |     |     |--resourcesAPI\n   |     |     |--description\n   |     |     |--title\n   |     |     |--modified\n   |     |     |--temporal\n   |     |     |--downloadURL\n   |     |     |--mediaType\n   |     |--identifier\n   |     |--keyword\n   |     |--landingPage\n   |     |--language\n   |     |--license\n   |     |--modified\n   |     |--programCode\n   |     |--publisher\n   |     |--references\n   |     |--temporal\n   |     |--theme\n   |     |--title\n   |_____|--describedBy\n```\n\n## Accessing the Data Catalog\n\nThe [`data.json`](https://data.cms.gov/data.json) file is an [**Open Data**](https://resources.data.gov/resources/dcat-us/) catalog containing all available datasets. As new data is added, `data.json` is automatically updated.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_json <- read_json_arrow(\n  file = \"https://data.cms.gov/data.json\",\n  col_select = c(\"dataset\"),\n    as_data_frame = TRUE) |> \n  to_duckdb()\n\ndata_json |> glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: ??\nColumns: 1\nDatabase: DuckDB v1.1.3 [Andrew@Windows 10 x64:R 4.4.2/:memory:]\n$ dataset <list> [<data.frame[139 x 22]>]\n```\n\n\n:::\n:::\n\n\n> **Note:** Removing `col_select = c(\"dataset\")` from the above call returns the following metadata:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n@context    <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.jsonld\n@id         <chr> https://data.cms.gov/data.json\n@type       <chr> dcat:Catalog\nconformsTo  <chr> https://project-open-data.cio.gov/v1.1/schema\ndescribedBy <chr> https://project-open-data.cio.gov/v1.1/schema/catalog.json\ndataset     <list> [<data.frame[138 x 22]>]\n```\n\n\n:::\n:::\n\n\nWithin `data.json`, there is an array called `dataset`. One can search through this array using the dataset's `title`, such as `\"Payroll Based Journal Daily Nurse Staffing\"`:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_json |> \n  pull(dataset) |> \n  pluck(1) |> \n  filter(grepl(\"Payroll Based Journal Daily Nurse Staffing\", title)) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 22\n$ `@type`            <chr> \"dcat:Dataset\"\n$ accessLevel        <chr> \"public\"\n$ accrualPeriodicity <chr> \"R/P3M\"\n$ bureauCode         <list> \"009:38\"\n$ contactPoint       <df[,3]> <data.frame[1 x 3]>\n$ describedBy        <chr> \"https://data.cms.gov/resources/payroll-based-journ…\n$ dataQuality        <lgl> TRUE\n$ description        <chr> \"The Payroll Based Journal (PBJ) Nurse Staffing and…\n$ distribution       <list> [<data.frame[61 x 10]>]\n$ identifier         <chr> \"https://data.cms.gov/data-api/v1/dataset/7e0d53ba-…\n$ keyword            <list> <\"Medicare\", \"Original Medicare\", \"Hospitals & Fac…\n$ landingPage        <chr> \"https://data.cms.gov/quality-of-care/payroll-ba…\n$ language           <list> \"en-US\"\n$ license            <chr> \"https://www.usa.gov/government-works\"\n$ modified           <dttm> 2024-10-31\n$ programCode        <list> \"009:000\"\n$ publisher          <df[,2]> <data.frame[1 x 2]>\n$ references         <list> \"https://data.cms.gov/resources/payroll-based-journ…\n$ temporal           <chr> \"2017-01-01/2024-06-30\"\n$ theme              <list> \"Medicare\"\n$ title              <chr> \"Payroll Based Journal Daily Nurse Staffing\"\n$ describedByType    <chr> NA\n```\n\n\n:::\n:::\n\n\nWithin `dataset`, there is an array called `distribution` which contains all dataset versions, in all available formats:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution <- data_json |> \n  pull(dataset) |> \n  pluck(1) |> \n  select(distribution) |> \n  unnest(distribution)\n\ndistribution\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,887 × 10\n   `@type`   format accessURL resourcesAPI description title modified           \n   <chr>     <chr>  <chr>     <chr>        <chr>       <chr> <dttm>             \n 1 dcat:Dis… API    https://… https://dat… latest      Acco… 2024-01-29 00:00:00\n 2 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2024-01-29 00:00:00\n 3 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2024-01-29 00:00:00\n 4 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2023-03-06 00:00:00\n 5 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2023-03-06 00:00:00\n 6 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-26 00:00:00\n 7 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2022-01-26 00:00:00\n 8 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-27 00:00:00\n 9 dcat:Dis… API    https://… https://dat… <NA>        Acco… 2022-01-27 00:00:00\n10 dcat:Dis… <NA>   <NA>      https://dat… <NA>        Acco… 2022-01-27 00:00:00\n# ℹ 3,877 more rows\n# ℹ 3 more variables: temporal <chr>, downloadURL <chr>, mediaType <chr>\n```\n\n\n:::\n:::\n\n## Formats\n\n   * __description__ `\"latest\"` is a URL that always point to the latest data\n   * __mediaType__ `\"text/csv\"` is a downloadable CSV file\n   * __mediaType__ `\"application/zip\"` is a downloadable ZIP file\n   * __format__ `\"API\"` is an API endpoint\n   * Remaining entries provide references to the data at fixed points in time, listed in descending order by date.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution |> \n  count(description, format, mediaType)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  description format mediaType                    n\n  <chr>       <chr>  <chr>                    <int>\n1 latest      API    <NA>                       112\n2 <NA>        API    <NA>                      1621\n3 <NA>        <NA>   application/vnd.ms-excel    21\n4 <NA>        <NA>   application/zip            534\n5 <NA>        <NA>   text/csv                  1599\n```\n\n\n:::\n:::\n\n\nFor example, the URL in the following example will *always* point to the **Payroll Based Journal Daily Nurse Staffing** data from **Q2 2021**:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# \"https://data.cms.gov/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data\"\nstaffing <- distribution |> \n  filter(\n    grepl(\"Payroll Based Journal Daily Nurse Staffing\", title),\n    format == \"API\",\n    grepl(\"^2021-04\", temporal)) |> \n  pull(accessURL) |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nglimpse(head(staffing, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 33\n$ PROVNUM          <chr> \"015010\"\n$ PROVNAME         <chr> \"COOSA VALLEY HEALTHCARE CENTER\"\n$ CITY             <chr> \"SYLACAUGA\"\n$ STATE            <chr> \"AL\"\n$ COUNTY_NAME      <chr> \"Talladega\"\n$ COUNTY_FIPS      <chr> \"121\"\n$ CY_Qtr           <chr> \"2021Q2\"\n$ WorkDate         <chr> \"20210401\"\n$ MDScensus        <chr> \"70\"\n$ Hrs_RNDON        <chr> \"8\"\n$ Hrs_RNDON_emp    <chr> \"8\"\n$ Hrs_RNDON_ctr    <chr> \"0\"\n$ Hrs_RNadmin      <chr> \"48.25\"\n$ Hrs_RNadmin_emp  <chr> \"48.25\"\n$ Hrs_RNadmin_ctr  <chr> \"0\"\n$ Hrs_RN           <chr> \"32\"\n$ Hrs_RN_emp       <chr> \"32\"\n$ Hrs_RN_ctr       <chr> \"0\"\n$ Hrs_LPNadmin     <chr> \"0\"\n$ Hrs_LPNadmin_emp <chr> \"0\"\n$ Hrs_LPNadmin_ctr <chr> \"0\"\n$ Hrs_LPN          <chr> \"63.25\"\n$ Hrs_LPN_emp      <chr> \"63.25\"\n$ Hrs_LPN_ctr      <chr> \"0\"\n$ Hrs_CNA          <chr> \"189.5\"\n$ Hrs_CNA_emp      <chr> \"189.5\"\n$ Hrs_CNA_ctr      <chr> \"0\"\n$ Hrs_NAtrn        <chr> \"0\"\n$ Hrs_NAtrn_emp    <chr> \"0\"\n$ Hrs_NAtrn_ctr    <chr> \"0\"\n$ Hrs_MedAide      <chr> \"0\"\n$ Hrs_MedAide_emp  <chr> \"0\"\n$ Hrs_MedAide_ctr  <chr> \"0\"\n```\n\n\n:::\n:::\n\n## Temporal Data\n\nDatasets with multiple historical versions available will have a `temporal` field in the `distribution` array of the `data.json` file which will indicate the time period. \n\nThe following example finds the API link for the [2017 Medicare Inpatient Hospitals - by Provider and Service Data](https://data.cms.gov/provider-summary-by-type-of-service/medicare-inpatienthospitals/medicare-inpatient-hospitals-by-provider-and-service):\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution |> \n  filter(\n    grepl(\"Medicare Inpatient Hospitals - by Provider and Service\", title), \n    format == \"API\",\n    temporal == \"2017-01-01/2017-12-31\") |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 10\n$ `@type`      <chr> \"dcat:Distribution\"\n$ format       <chr> \"API\"\n$ accessURL    <chr> \"https://data.cms.gov/data-api/v1/dataset/b61ba5eb-021b-4…\n$ resourcesAPI <chr> \"https://data.cms.gov/data-api/v1/dataset-resources/b61ba…\n$ description  <chr> NA\n$ title        <chr> \"Medicare Inpatient Hospitals - by Provider and Service :…\n$ modified     <dttm> 2023-05-10\n$ temporal     <chr> \"2017-01-01/2017-12-31\"\n$ downloadURL  <chr> NA\n$ mediaType    <chr> NA\n```\n\n\n:::\n:::\n\n\n## Latest Data Access Methods\n\nThere are two ways to find the latest data. Both methods provide a URL that points to the latest version. The URL will not change as new versions are added. As such, it is recommended to *always* start with `data.json` rather than hardcoding any URL.\n\n### Standard JSON\n\n\n   1. Use the `distribution` with the \"latest\" `description`\n   \n      * Within `data.json/distribution`, filter the `description` to `\"latest\"`. Pull the `\"accessURL\"`.\n      * This URL returns data as a standard JSON. \n      * For example, this URL for Opt Out Affidavits is `\"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data\"` \n   \n   2. Use the URL in the identifier field:\n      * In the data.json the dataset will have a field called “identifier” and the value for this field is a URL that always points to the latest data.\n      * This URL returns data using the JSON:API specification, which has a different response structure that includes metadata about the dataset, otherwise it is identical to the URL in option 1.\n      * For example, this URL for Opt Out Affidavits `\"https://data.cms.gov/dataapi/v1/dataset/9887a515-7552-4693-bf58-735c77af46d7/data-viewer\"`\n\nThe following example finds the API link for the latest [Order and Referring Data](https://data.cms.gov/provider-characteristics/medicare-provider-supplierenrollment/order-and-referring):\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndistribution |> \n  filter(grepl(\"Order and Referring\", title),\n         description == \"latest\") |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 10\n$ `@type`      <chr> \"dcat:Distribution\"\n$ format       <chr> \"API\"\n$ accessURL    <chr> \"https://data.cms.gov/data-api/v1/dataset/c99b5865-1119-4…\n$ resourcesAPI <chr> \"https://data.cms.gov/data-api/v1/dataset-resources/c99b5…\n$ description  <chr> \"latest\"\n$ title        <chr> \"Order and Referring : 2024-12-17\"\n$ modified     <dttm> 2024-12-17\n$ temporal     <chr> \"2024-12-08/2024-12-14\"\n$ downloadURL  <chr> NA\n$ mediaType    <chr> NA\n```\n\n\n:::\n:::\n\n\n",
    "supporting": [
      "faq_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}