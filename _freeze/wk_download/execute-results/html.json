{
  "hash": "312334a73e5a22c1d4b9b81e2077cad8",
  "result": {
    "engine": "knitr",
    "markdown": "# Downloads {#sec-downloads}\n\n\n\n## Run {duckplyr} Commands\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(duckplyr)\n\ndb_exec(\"INSTALL httpfs\")\n\ndb_exec(\"LOAD httpfs\")\n\ndb_exec(\"INSTALL json\")\n\ndb_exec(\"LOAD json\")\n\nread_sql_duckdb(\"SELECT current_setting('memory_limit') AS memlimit\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 1 variable\n  memlimit\n  <chr>   \n1 12.5 GiB\n```\n\n\n:::\n\n```{.r .cell-code}\ndb_exec(\"PRAGMA memory_limit = '1GB'\")\n\nread_sql_duckdb(\"SELECT current_setting('memory_limit') AS memlimit\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 1 variable\n  memlimit \n  <chr>    \n1 953.6 MiB\n```\n\n\n:::\n\n```{.r .cell-code}\ndb_exec(\"PRAGMA enable_progress_bar = true\")\n\nread_sql_duckdb(\"SELECT current_setting('threads') AS threads\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 1 variable\n  threads\n    <dbl>\n1       4\n```\n\n\n:::\n\n```{.r .cell-code}\nread_sql_duckdb(\"SELECT * FROM duckdb_settings()\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 5 variables\n   name                                       value description input_type scope\n   <chr>                                      <chr> <chr>       <chr>      <chr>\n 1 access_mode                                auto… Access mod… VARCHAR    GLOB…\n 2 allocator_background_threads               false Whether to… BOOLEAN    GLOB…\n 3 allocator_bulk_deallocation_flush_thresho… 512.… If a bulk … VARCHAR    GLOB…\n 4 allocator_flush_threshold                  128.… Peak alloc… VARCHAR    GLOB…\n 5 allow_community_extensions                 true  Allow to l… BOOLEAN    GLOB…\n 6 allow_extensions_metadata_mismatch         false Allow to l… BOOLEAN    GLOB…\n 7 allow_persistent_secrets                   true  Allow the … BOOLEAN    GLOB…\n 8 allow_unredacted_secrets                   false Allow prin… BOOLEAN    GLOB…\n 9 allow_unsigned_extensions                  false Allow to l… BOOLEAN    GLOB…\n10 allowed_directories                        []    List of di… VARCHAR[]  GLOB…\n# ℹ more rows\n```\n\n\n:::\n:::\n\n\n## Provider Enrollment Sub-Files\n\n::: {.cell}\n\n```{.r .cell-code}\nresources <- prop(\n  public_Dataset(\"enrollees\"), \n  \"resources\")\n\nsubfiles <- filter(\n  prop(resources, \"files\"), \n  fileType == \"csv\", \n  sf_detect(name, \"Sub-File\")) |> \n  pull(downloadURL)\n\nbasename(subfiles)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PPEF_Reassignment_Extract_2025.01.02.csv\"       \n[2] \"PPEF_Practice_Location_Extract_2025.01.02.csv\"  \n[3] \"PPEF_Secondary_Specialty_Extract_2025.01.02.csv\"\n```\n\n\n:::\n:::\n\n### Reassignment Sub-File 2024 Q4\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- tempfile(\"reassign_subfile\", fileext = \".csv\")\n\ndownload.file(url = subfiles[1], destfile = path)\n\ndk <- duckplyr::read_csv_duckdb(\n  path, \n  prudence = \"lavish\",\n  options = list(types = list(c(\"VARCHAR\", \"VARCHAR\")))) |> \n  collect()\n\ndk <- fcompute(\n  dk,\n  enid_ind = stringi::stri_replace_all_regex(REASGN_BNFT_ENRLMT_ID, \"\\n\", \"\"),\n  enid_org = RCV_BNFT_ENRLMT_ID)\n\nfnobs(dk$enid_ind) |> \n  prettyNum(big.mark = \",\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"3,386,477\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfndistinct(dk$enid_ind) |> \n  prettyNum(big.mark = \",\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2,024,798\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfndistinct(dk$enid_org) |> \n  prettyNum(big.mark = \",\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"262,076\"\n```\n\n\n:::\n:::\n\n### Address Sub-File 2024 Q4\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- tempfile(\"address_subfile\", fileext = \".csv\")\n\ndownload.file(url = subfiles[2], destfile = path)\n\ndk2 <- read_csv_duckdb(path)\n\ndk2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 4 variables\n   ENRLMT_ID           CITY_NAME     STATE_CD ZIP_CD   \n   <chr>               <chr>         <chr>    <chr>    \n 1 \"I20031103000005\"   MECHANICSBURG PA       170501925\n 2 \"\\nI20031103000013\" SAN JUAN      PR       009175030\n 3 \"\\nI20031103000015\" TOMS RIVER    NJ       08757    \n 4 \"\\nI20031103000028\" JERSEY CITY   NJ       073062305\n 5 \"\\nI20031103000030\" AGUADILLA     PR       006055256\n 6 \"\\nI20031103000032\" BINGHAM FARMS MI       480255810\n 7 \"\\nI20031103000036\" LAJAS         PR       006672082\n 8 \"\\nI20031103000037\" PONCE         PR       00780    \n 9 \"\\nI20031103000063\" CAGUAS        PR       00726    \n10 \"\\nI20031103000096\" SAN JUAN      PR       00921    \n# ℹ more rows\n```\n\n\n:::\n:::\n\n### Secondary Specialty Sub-File 2024 Q4\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- tempfile(\"second_specialty\", fileext = \".csv\")\n\ndownload.file(url = subfiles[3], destfile = path)\n\ndk3 <- read_csv_duckdb(path)\n\ndk3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A duckplyr data frame: 3 variables\n   ENRLMT_ID           PROVIDER_TYPE_CD PROVIDER_TYPE_DESC                      \n   <chr>               <chr>            <chr>                                   \n 1 \"I20031103000037\"   14-11            PRACTITIONER - INTERNAL MEDICINE        \n 2 \"\\nI20031103000037\" 14-81            PRACTITIONER - CRITICAL CARE (INTENSIVI…\n 3 \"\\nI20031103000039\" 14-19            PRACTITIONER - ORAL SURGERY             \n 4 \"\\nI20031103000089\" 14-09            PRACTITIONER - INTERVENTIONAL PAIN MANA…\n 5 \"\\nI20031103000123\" 14-30            PRACTITIONER - DIAGNOSTIC RADIOLOGY     \n 6 \"\\nI20031103000159\" 14-11            PRACTITIONER - INTERNAL MEDICINE        \n 7 \"\\nI20031103000159\" 14-17            PRACTITIONER - HOSPICE/PALLIATIVE CARE  \n 8 \"\\nI20031103000159\" 14-83            PRACTITIONER - HEMATOLOGY/ONCOLOGY      \n 9 \"\\nI20031103000197\" 14-25            PRACTITIONER - PHYSICAL MEDICINE AND RE…\n10 \"\\nI20031103000203\" 14-11            PRACTITIONER - INTERNAL MEDICINE        \n# ℹ more rows\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "wk_download_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}