{
  "hash": "a7870445ea46df630933d29a01f50541",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DCAT Schema\"\neditor_options: \n   chunk_output_type: console\n---\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"https://resources.data.gov/resources/dcat-us/\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nDCAT Schema\n</a>\n<a href=\"https://resources.data.gov/schemas/dcat-us/v1.1/iso8601_guidance/#accrualperiodicity\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nISO8601\n</a>\n```\n\n:::\n:::\n\n## `dataset` Fields\n\n   * [Data Catalog Vocabulary (DCAT) - Version 3](https://www.w3.org/TR/vocab-dcat/)\n\n### `bureauCode`\n\nFederal agencies, combined agency and bureau code from [OMB Circular A-11, Appendix C](https://obamawhitehouse.archives.gov/sites/default/files/omb/assets/a11_current_year/app_c.pdf). \n\n> __Format__: `015:11`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbureauCodes <- read_csv(\n  here(\"data/omb_bureau_codes.csv\"), \n  show_col_types  = FALSE,\n  col_types       = cols(\n  `Agency Name`   = col_character(),\n  `Bureau Name`   = col_character(),\n  `Agency Code`   = col_character(),\n  `Bureau Code`   = col_character(),\n  `Treasury Code` = col_character(),\n  `CGAC Code`     = col_character())) |> \n  setNames(c(\"agencyName\", \n             \"bureauName\", \n             \"agencyCode\", \n             \"bureauCode\", \n             \"treasuryCode\", \n             \"cgacCode\")) |> \n  mutate(\n    agencyCode   = str_pad(agencyCode, width = 3, pad = \"0\"),\n    bureauCode   = str_pad(bureauCode, width = 2, pad = \"0\"),\n    treasuryCode = str_pad(treasuryCode, width = 2, pad = \"0\"),\n    cgacCode     = str_pad(cgacCode, width = 3, pad = \"0\"))\n\nbureauCodes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 368 × 6\n   agencyName         bureauName     agencyCode bureauCode treasuryCode cgacCode\n   <chr>              <chr>          <chr>      <chr>      <chr>        <chr>   \n 1 Legislative Branch Senate         001        05         00           000     \n 2 Legislative Branch House of Repr… 001        10         00           000     \n 3 Legislative Branch Joint Items    001        11         00           000     \n 4 Legislative Branch Capitol Police 001        13         02           002     \n 5 Legislative Branch Office of Com… 001        12         09           009     \n 6 Legislative Branch Congressional… 001        14         08           008     \n 7 Legislative Branch Architect of … 001        15         01           001     \n 8 Legislative Branch Botanic Garden 001        18         09           009     \n 9 Legislative Branch Library of Co… 001        25         03           003     \n10 Legislative Branch Government Pr… 001        30         04           004     \n# ℹ 358 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nbureauCodes |> \n  filter(bureauCode == \"38\") |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $agencyName   c1  Department of Health and Human Services   \n- $bureauName   c1  Centers for Medicare and Medicaid Services\n- $agencyCode   c1  009                                       \n- $bureauCode   c1  38                                        \n- $treasuryCode c1  75                                        \n- $cgacCode     c1  075                                       \n```\n\n\n:::\n:::\n\n### `programCode`\n\nFederal agencies, list the primary program related to this data asset, from the [Federal Program Inventory](https://resources.data.gov/schemas/dcat-us/v1.1/FederalProgramInventory_FY13_MachineReadable_091613.csv). \n\n> __Format__: `015:001`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprogramCodes <- read_csv(\n  here(\"data/FederalProgramInventory_FY13_MachineReadable_091613.csv\"), \n  show_col_types                      = FALSE,\n  col_types                           = cols(\n  `Agency Name`                       = col_character(),\n  `Program Name`                      = col_character(),\n  `Additional Information (optional)` = col_character(),\n  `Agency Code`                       = col_character(),\n  ProgramCode                         = col_character(),\n  ProgramCodePODFormat                = col_character())) |> \n  setNames(c(\"agencyName\", \n             \"programName\", \n             \"AdditionalInformation\", \n             \"agencyCode\", \n             \"programCode\", \n             \"programCodePODFormat\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following named parsers don't match the column names: Agency Code\n```\n\n\n:::\n\n```{.r .cell-code}\nprogramCodes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,554 × 6\n   agencyName           programName AdditionalInformation agencyCode programCode\n   <chr>                <chr>       <chr>                 <chr>      <chr>      \n 1 Department of Agric… Rural Busi… <NA>                  005        005-001    \n 2 Department of Agric… Rural Busi… <NA>                  005        005-002    \n 3 Department of Agric… Energy Ass… <NA>                  005        005-003    \n 4 Department of Agric… Distance L… <NA>                  005        005-004    \n 5 Department of Agric… Rural Elec… <NA>                  005        005-005    \n 6 Department of Agric… Rural Wate… <NA>                  005        005-006    \n 7 Department of Agric… Single Fam… <NA>                  005        005-007    \n 8 Department of Agric… Multi-Fami… <NA>                  005        005-008    \n 9 Department of Agric… Farm labor… <NA>                  005        005-009    \n10 Department of Agric… Rental Ass… <NA>                  005        005-010    \n# ℹ 1,544 more rows\n# ℹ 1 more variable: programCodePODFormat <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\nprogramCodes |> \n  filter(programCodePODFormat == \"009:000\") |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $agencyName            c1  Department of Health and Human Services\n- $programName           c1  (Primary Program Not Available)        \n- $AdditionalInformation c1  NA                                     \n- $agencyCode            c1  009                                    \n- $programCode           c1  009-000                                \n- $programCodePODFormat  c1  009:000                                \n```\n\n\n:::\n:::\n\n### `accrualPeriodicity`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntibble(\n  accrualPeriodicity = c(\n  \"R/PT1S\",   \"R/PT1H\",  \"R/P1D\", \"R/P3.5D\", \n  \"R/P0.33W\", \"R/P0.5W\", \"R/P1W\", \"R/P2W\", \n  \"R/P0.33M\", \"R/P0.5M\", \"R/P1M\", \"R/P2M\",\n  \"R/P3M\",    \"R/P4M\",   \"R/P6M\", \"R/P1Y\",\n  \"R/P2Y\",    \"R/P3Y\",   \"R/P4Y\", \"R/P10Y\"),\n  accrualDescription = recode_iso_8601(accrualPeriodicity))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 2\n   accrualPeriodicity accrualDescription  \n   <chr>              <chr>               \n 1 R/PT1S             Continuously Updated\n 2 R/PT1H             Hourly              \n 3 R/P1D              Daily               \n 4 R/P3.5D            Semiweekly          \n 5 R/P0.33W           Three Times a Week  \n 6 R/P0.5W            Twice a Week        \n 7 R/P1W              Weekly              \n 8 R/P2W              Biweekly            \n 9 R/P0.33M           Three Times a Month \n10 R/P0.5M            Twice a Month       \n11 R/P1M              Monthly             \n12 R/P2M              Bimonthly           \n13 R/P3M              Quarterly           \n14 R/P4M              Three Times a Year  \n15 R/P6M              Semiannually        \n16 R/P1Y              Annually            \n17 R/P2Y              Biennially          \n18 R/P3Y              Triennially         \n19 R/P4Y              Quadrennially       \n20 R/P10Y             Decennially         \n```\n\n\n:::\n:::\n\n### DCAT Schemas\n\n#### Catalog\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nread_json_arrow(\n  here(\"data/dcat-us_v1.1_schema_catalog.json\")) |> \n  collect() |> \n  unnest(properties) |> \n  unnest(`@context`, names_sep = \"_\") |> \n  unnest(`@id`, names_sep = \"_\") |> \n  unnest(`@type`, names_sep = \"_\") |> \n  unnest(`@type_enum`, names_sep = \"_\") |> \n  unnest(conformsTo, names_sep = \"_\") |> \n  unnest(conformsTo_enum, names_sep = \"_\") |> \n  unnest(describedBy, names_sep = \"_\") |> \n  unnest(dataset, names_sep = \"_\") |> \n  unnest(dataset_items, names_sep = \"_\") |> \n  mutate(dependencies = delist(dependencies),\n         required = flatten_column(required)) |> \n  rename_with(replace_open_columns) |> \n  rename(schema = `$schema`,\n         dataset_items_ref = `dataset_items_$ref`) |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $schema                    c1  http://json-schema.org/draft-04/schema#    ...\n- $id                        c1  https://project-open-data.cio.gov/v1.1/sch ...\n- $title                     c1  Project Open Data Catalog                  ...\n- $description               c1  Validates an entire collection of Project  ...\n- $type                      c1  object                                     ...\n- $dependencies              c1  @context                                   ...\n- $required                  c1  conformsTo, dataset                        ...\n- $context_title             c1  Metadata Context                           ...\n- $context_description       c1  URL or JSON object for the JSON-LD Context ...\n- $context_type              c1  string                                     ...\n- $context_format            c1  uri                                        ...\n- $id_title                  c1  Metadata Catalog ID                        ...\n- $id_description            c1  IRI for the JSON-LD Node Identifier of the ...\n- $id_type                   c1  string                                     ...\n- $id_format                 c1  uri                                        ...\n- $type_title                c1  Metadata Context                           ...\n- $type_description          c1  IRI for the JSON-LD data type. This should ...\n- $type_enum                 c1  dcat:Catalog                               ...\n- $conformsTo_description    c1  Version of Schema                          ...\n- $conformsTo_title          c1  Version of Schema                          ...\n- $conformsTo_enum           c1  https://project-open-data.cio.gov/v1.1/sch ...\n- $describedBy_description   c1  URL for the JSON Schema file that defines  ...\n- $describedBy_title         c1  Data Dictionary                            ...\n- $describedBy_type          c1  string                                     ...\n- $describedBy_format        c1  uri                                        ...\n- $dataset_type              c1  array                                      ...\n- $dataset_items_ref         c1  dataset.json                               ...\n- $dataset_items_minItems    i1  1                                          ...\n- $dataset_items_uniqueItems l1  T                                          ...\n```\n\n\n:::\n:::\n\n#### Dataset\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nread_json_arrow(\n  here(\"data/dcat-us_v1.1_schema_dataset.json\")) |> \n  collect() |> \n  unnest(properties, names_sep = \"_\") |> \n  # unnest(`properties_@type`, names_sep = \"_\") |> \n  # unnest(properties_accessLevel, names_sep = \"_\") |> \n  # unnest(properties_rights, names_sep = \"_\") |> \n  # unnest(properties_accrualPeriodicity, names_sep = \"_\") |> \n  # unnest(properties_bureauCode, names_sep = \"_\") |> \n  # unnest(properties_contactPoint, names_sep = \"_\") |> \n  # unnest(properties_describedBy, names_sep = \"_\") |> \n  # unnest(properties_describedByType, names_sep = \"_\") |> \n  # unnest(properties_conformsTo, names_sep = \"_\") |> \n  # unnest(properties_rights_anyOf, names_sep = \"_\") |> \n  # unnest(properties_accrualPeriodicity_anyOf, names_sep = \"_\") |> \n  mutate(\n    required = flatten_column(required)) |> \n    # `properties_@type_enum` = delist(`properties_@type_enum`),\n    # properties_accessLevel_enum = flatten_column(properties_accessLevel_enum),\n    # properties_accrualPeriodicity_anyOf_enum = flatten_column(properties_accrualPeriodicity_anyOf_enum)) |> \n  rename_with(replace_open_columns) |> \n  rename(schema = `$schema`) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 35\n$ schema                    <chr> \"http://json-schema.org/draft-04/schema#\"\n$ id                        <chr> \"https://project-open-data.cio.gov/v1.1/sche…\n$ title                     <chr> \"Project Open Data Dataset\"\n$ description               <chr> \"The metadata format for all federal open da…\n$ type                      <chr> \"object\"\n$ required                  <chr> \"bureauCode, programCode, title, description…\n$ pr_type                   <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_accessLevel            <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_rights                 <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_accrualPeriodicity     <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_bureauCode             <tibble[,6]> <tbl_df[1 x 6]>\n$ pr_contactPoint           <tibble[,1]> <tbl_df[1 x 1]>\n$ pr_describedBy            <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_describedByType        <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_conformsTo             <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_dataQuality            <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_description            <tibble[,4]> <tbl_df[1 x 4]>\n$ pr_distribution           <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_identifier             <tibble[,4]> <tbl_df[1 x 4]>\n$ pr_issued                 <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_keyword                <tibble[,5]> <tbl_df[1 x 5]>\n$ pr_landingPage            <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_language               <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_license                <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_modified               <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_primaryITInvestmentUII <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_programCode            <tibble[,6]> <tbl_df[1 x 6]>\n$ pr_publisher              <tibble[,1]> <tbl_df[1 x 1]>\n$ pr_references             <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_spatial                <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_systemOfRecords        <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_temporal               <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_isPartOf               <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_theme                  <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_title                  <tibble[,4]> <tbl_df[1 x 4]>\n```\n\n\n:::\n:::\n\n#### Distribution\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nread_json_arrow(\n  here(\"data/dcat-us_v1.1_schema_distribution.json\")) |> \n  collect() |> \n  unnest(properties, names_sep = \"_\") |> \n  mutate(dependencies = flatten_column(dependencies)) |> \n  rename_with(replace_open_columns) |> \n  rename(schema = `$schema`) |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 16\n$ schema             <chr> \"http://json-schema.org/draft-04/schema#\"\n$ id                 <chr> \"https://project-open-data.cio.gov/v1.1/schema/dist…\n$ title              <chr> \"Project Open Data Distribution\"\n$ description        <chr> \"Validates an entire collection of common core meta…\n$ type               <chr> \"object\"\n$ dependencies       <chr> \"string, ^[-\\\\w]+/[-\\\\w]+(\\\\.[-\\\\w]+)*([+][-\\\\w]+)?…\n$ pr_type            <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_downloadURL     <tibble[,4]> <tbl_df[1 x 4]>\n$ pr_mediaType       <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_format          <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_accessURL       <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_description     <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_title           <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_conformsTo      <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_describedBy     <tibble[,3]> <tbl_df[1 x 3]>\n$ pr_describedByType <tibble[,3]> <tbl_df[1 x 3]>\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "api_schema_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}