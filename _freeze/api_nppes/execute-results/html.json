{
  "hash": "fc76be66bc761efc56efed94afc56287",
  "result": {
    "engine": "knitr",
    "markdown": "# NPPES NPI Registry {#sec-nppesapi}\n\n\n\n## Links\n\n   * [NLM: NPI API](https://clinicaltables.nlm.nih.gov/api/npi_idv/v3)\n\n## Catalog\n\n::: {.cell}\n\n```{.r .cell-code}\nnppes_nlm <- function(terms) {\n\n  req <- request(\"https://clinicaltables.nlm.nih.gov/api/npi_idv/v3/search?\") |>\n    req_url_query(\n      terms   = terms,\n      maxList = 500,\n      count   = 500,\n      offset  = 0L,\n      .space = \"form\"\n    )\n\n  resp <- req_perform(req) |> resp_simple_json()\n\n  n <- resp[[1]]\n\n  if (n > 7500L) {\n    cli::cli_abort(c(\n      \"Your search returned {.strong {.val {n}}} results.\",\n      \"x\" = \"The NLM API limit is {.strong {.emph 7,500}}.\"))\n  }\n\n  results <- resp[[4]] |>\n    as.data.frame() |>\n    set_names(c(\"name\", \"npi\", \"specialty\", \"address\")) |>\n    as_tbl()\n\n  nreq <- offset_length(n, 500) > 1\n\n  cli_n_results_requests(n, 500)\n\n  if (false(nreq)) {\n\n    return(results)\n\n    } else {\n\n      results2 <- req_perform_iterative(\n      req,\n      next_req        = iterate_with_offset(\n        param_name    = \"offset\",\n        start         = 500,\n        offset        = 500,\n        resp_complete = is_complete_with_limit(500))) |>\n      map(\n        function(x) {\n          x <- resp_simple_json(x)\n          x[[4]] |>\n            as.data.frame() |>\n            set_names(c(\"name\", \"npi\", \"specialty\", \"address\"))\n        }) |>\n      rowbind()\n\n    as_tbl(rowbind(results, results2))\n  }\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}