{
  "hash": "7e8f9ef2bf9534bab1a5d05c5afe861d",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n# Medicaid {#sec-mcdapi}\n\n\n\n## Links\n\n   * [Medicaid.gov API](https://data.medicaid.gov/about/api)\n   * Limit: `8000L`\n\n## Load Catalog\n\n::: {.cell}\n\n```{.r .cell-code}\njoin_title <- \\(a, b) join(x = a, y = b, on = \"title\", verbose = 0)\n```\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncatalog_mcd <- function() {\n\n  x <- fload(\"https://data.medicaid.gov/api/1/metastore/schemas/dataset/items?show-reference-ids\")\n    \n  x <- x |>\n    as_tbl() |>\n    mtt(\n      modified    = as_date(modified),\n      issued      = as_date(issued),\n      periodicity = recode_iso8601(accrualPeriodicity),\n      contact     = reduce_contact(x$contactPoint)\n    ) |>\n    slt(\n      title,\n      identifier,\n      description,\n      periodicity,\n      issued,\n      modified,\n      contact,\n      theme,\n      keyword,\n      distribution,\n      temporal,\n      references\n    )\n  \n  d <- rowbind(x$distribution, fill = TRUE)\n  \n  tvec <- new_df(title = x$title, ndist = fnobs(get_elem(x$distribution, \"data\", DF.as.list = TRUE))) |> \n    tidyr::uncount(ndist) |> \n    _[[\"title\"]]\n  \n  groups <- new_df(\n    title = x$title,\n    group = na_if(\n      flatten_column(\n        map(x$theme, \\(x) get_elem(as.list(x), \"data\"))), \"\")) |>\n    sbt(not_na(group) & group != \"Uncategorized\")\n  \n  keys <- new_df(\n    title = x$title,\n    keywords = na_if(\n      flatten_column(\n        map(x$keyword, \\(x) get_elem(as.list(x), \"data\"))), \"\"))\n  \n  refs <- new_df(\n    title = x$title,\n    references = na_if(flatten_column(x$references), \"NA\")) |> \n  sbt(not_na(references) & stri_detect_regex(references, \"^https://www.mathematica.org/\", negate = TRUE)) |> \n  mtt(references = stri_replace_all_fixed(references, \", https://www.mathematica.org/\", \"\"))\n  \n  list(\n    sets = reduce(list(slt(x, -theme, -keyword, -references, -distribution), groups, keys, refs), join_title),\n    download = new_tbl(title = tvec, download = delist(get_elem(d$data, \"downloadURL\"))),\n    dictionary = delist(get_elem(d$data, \"describedBy\")) |> funique() |> as_tbl()\n    )\n  \n}\n\nx <- catalog_mcd()\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$sets\n# A tibble: 482 × 11\n   title        identifier description periodicity issued     modified   contact\n * <chr>        <chr>      <chr>       <chr>       <date>     <date>     <chr>  \n 1 State Drug … ae4d5347-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 2 State Drug … acbd1537-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 3 State Drug … ec0d4b04-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 4 State Drug … 602e7c79-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 5 State Drug … 17c4bf03-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 6 State Drug … 56adbcf4-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 7 State Drug … b28a22a2-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 8 State Drug … d371b0f4-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n 9 State Drug … c39d3302-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n10 State Drug … 57c03da7-… Drug utili… Decenniall… 2015-06-11 2024-06-11 Medica…\n# ℹ 472 more rows\n# ℹ 4 more variables: temporal <chr>, group <chr>, keywords <chr>,\n#   references <chr>\n\n$download\n# A tibble: 515 × 2\n   title                            download                                    \n   <chr>                            <chr>                                       \n 1 State Drug Utilization Data 1991 https://download.medicaid.gov/data/StateDru…\n 2 State Drug Utilization Data 1992 https://download.medicaid.gov/data/StateDru…\n 3 State Drug Utilization Data 1993 https://download.medicaid.gov/data/StateDru…\n 4 State Drug Utilization Data 1994 https://download.medicaid.gov/data/StateDru…\n 5 State Drug Utilization Data 1995 https://download.medicaid.gov/data/StateDru…\n 6 State Drug Utilization Data 1996 https://download.medicaid.gov/data/StateDru…\n 7 State Drug Utilization Data 1997 https://download.medicaid.gov/data/StateDru…\n 8 State Drug Utilization Data 1998 https://download.medicaid.gov/data/StateDru…\n 9 State Drug Utilization Data 1999 https://download.medicaid.gov/data/StateDru…\n10 State Drug Utilization Data 2000 https://download.medicaid.gov/data/StateDru…\n# ℹ 505 more rows\n\n$dictionary\n# A tibble: 66 × 1\n   value                                                                        \n   <chr>                                                                        \n 1 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/6eb0…\n 2 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/de58…\n 3 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/f686…\n 4 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/8b3e…\n 5 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/7d80…\n 6 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/64b9…\n 7 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/9d72…\n 8 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/4041…\n 9 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/e278…\n10 https://data.medicaid.gov/api/1/metastore/schemas/data-dictionary/items/8f48…\n# ℹ 56 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmcd_url <- function(uuid) {\n  paste0(\"https://data.medicaid.gov/api/1/datastore/query/\", uuid, \"/0\")\n}\n\nmcd_dims <- function(uuid) {\n\n  x <- uuid |>\n    mcd_url() |>\n    request() |>\n    req_url_query(\n      schema  = \"false\",\n      keys    = \"false\",\n      results = \"true\",\n      count   = \"true\",\n      format  = \"json\",\n      rowIds  = \"false\",\n      limit   = 1,\n      offset  = 0\n    ) |>\n    perform_simple()\n\n  list_tidy(\n    rows   = x$count,\n    fields = x$query$properties,\n    pages  = offset_length(rows, 8000L))\n\n}\n\nidentifier <- sbt(x$sets, title == \"State Drug Utilization Data 2020\") |> _[[\"identifier\"]]\n\nmcd_dims(identifier)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$rows\n[1] 4917338\n\n$fields\n [1] \"utilization_type\"               \"state\"                         \n [3] \"ndc\"                            \"labeler_code\"                  \n [5] \"product_code\"                   \"package_size\"                  \n [7] \"year\"                           \"quarter\"                       \n [9] \"suppression_used\"               \"product_name\"                  \n[11] \"units_reimbursed\"               \"number_of_prescriptions\"       \n[13] \"total_amount_reimbursed\"        \"medicaid_amount_reimbursed\"    \n[15] \"non_medicaid_amount_reimbursed\"\n\n$pages\n[1] 615\n```\n\n\n:::\n\n```{.r .cell-code}\nmcd_url(identifier) |> \n  request() |> \n  req_url_query(\n    limit = 10,\n    offset = 0,\n    count = \"true\",\n    results = \"true\",\n    schema = \"false\",\n    keys = \"true\",\n    format = \"json\",\n    rowIds = \"false\"\n  ) |> \n  perform_simple() |> \n  _[[\"results\"]] |> \n  map_na_if() |> \n  as_tbl() |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $utilization_type               c10 FFSU        FFSU        FFSU        F ...\n- $state                          c10 AK          AK          AK          A ...\n- $ndc                            c10 00002143380 00002143480 00002143611 0 ...\n- $labeler_code                   c10 00002       00002       00002       0 ...\n- $product_code                   c10 1433        1434        1436        1 ...\n- $package_size                   c10 80          80          11          1 ...\n- $year                           c10 2020        2020        2020        2 ...\n- $quarter                        c10 4           4           4           4 ...\n- $suppression_used               c10 false       false       false       f ...\n- $product_name                   c10 TRULICITY   TRULICITY   EMGALITY P  T ...\n- $units_reimbursed               c10 312.000     418.000     12.000      2 ...\n- $number_of_prescriptions        c10 138         170         11          1 ...\n- $total_amount_reimbursed        c10 119031.37   158507.73   7065.83     1 ...\n- $medicaid_amount_reimbursed     c10 118119.22   152067.42   7065.83     1 ...\n- $non_medicaid_amount_reimbursed c10 912.15      6440.31     0.00        0 ...\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nutils::formatOL(\n  x$title\n) |> \n  writeLines()\n```\n:::\n\n",
    "supporting": [
      "api_mcd_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}