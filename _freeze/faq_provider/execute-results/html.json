{
  "hash": "edb66a698f2de1982cc8b547b7ac1d57",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Provider API\"\neditor_options: \n   chunk_output_type: console\n---\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"https://data.cms.gov/provider-data/docs\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nProvider API Docs\n</a>\n<a href=\"https://data.cms.gov/provider-data/search\" class=\"btn btn-outline-secondary\" role=\"button\" target=\"_blank\">\n<i class=\"bi bi-box-arrow-up-right\"></i>\nDataset Search\n</a>\n```\n\n:::\n:::\n\n\nThis site provides access to the Centers for Medicare & Medicaid Services official data that are used on the **Medicare Care Compare** website and directories.\n\n   * [Home](https://data.cms.gov/provider-data/)\n   * [About](https://data.cms.gov/provider-data/about)\n\n### Rate Limit\n\nThe **Provider Data Catalog API** currently limits each batch of results to a maximum of **2,000** entries. To retrieve datasets larger than this threshold, you must execute multiple requests, incrementing the offset each time to paginate through results:\n\n   1. Fetch the first 2000 results:\n\n::: {.cell}\n\n```{.r .cell-code}\nownership0 <- url_parse(\n  base_url = \"https://data.cms.gov/provider-data/\", \n  url      = \"api/1/datastore/query/7t8x-u3ir/0\") |> \n  url_modify_query(\n    offset = 0, \n    limit  = 2000) |> \n  url_build() |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nownership0$query\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$offset\n[1] 0\n\n$limit\n[1] 2000\n\n$resources\n                                    id alias\n1 e7fce918-0873-519f-80ae-818e386299d1     t\n\n$count\n[1] TRUE\n\n$results\n[1] TRUE\n\n$schema\n[1] TRUE\n\n$keys\n[1] TRUE\n\n$format\n[1] \"json\"\n\n$rowIds\n[1] FALSE\n\n$properties\n [1] \"cms_certification_number_ccn\" \"provider_name\"               \n [3] \"address_line_1\"               \"address_line_2\"              \n [5] \"citytown\"                     \"state\"                       \n [7] \"zip_code\"                     \"countyparish\"                \n [9] \"telephone_number\"             \"cms_region\"                  \n[11] \"ownership_type\"               \"certification_date\"          \n```\n\n\n:::\n\n```{.r .cell-code}\nownership0$count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1229\n```\n\n\n:::\n\n```{.r .cell-code}\nownership0$results |> \n  tibble() |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,229\nColumns: 12\n$ cms_certification_number_ccn <chr> \"013025\", \"013028\", \"013029\", \"013030\", \"…\n$ provider_name                <chr> \"ENCOMPASS HEALTH LAKESHORE REHABILITATIO…\n$ address_line_1               <chr> \"3800 RIDGEWAY DRIVE\", \"4465 NARROW LANE …\n$ address_line_2               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"…\n$ citytown                     <chr> \"BIRMINGHAM\", \"MONTGOMERY\", \"HUNTSVILLE\",…\n$ state                        <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\",…\n$ zip_code                     <chr> \"35209\", \"36116\", \"35811\", \"36301\", \"3512…\n$ countyparish                 <chr> \"Jefferson\", \"Montgomery\", \"Madison\", \"Ho…\n$ telephone_number             <chr> \"(205) 868-2000\", \"(334) 284-7821\", \"(205…\n$ cms_region                   <chr> \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"…\n$ ownership_type               <chr> \"For profit\", \"For profit\", \"For profit\",…\n$ certification_date           <chr> \"10/01/1983\", \"05/11/1987\", \"06/04/1987\",…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n   2. Fetch the next 2000 results (2001-4000):\n\n::: {.cell}\n\n```{.r .cell-code}\nownership1 <- url_parse(\n  base_url = \"https://data.cms.gov/provider-data/api/1/datastore/query/\", \n  url      = \"7t8x-u3ir/0\") |> \n  url_modify_query(\n    offset = 2001, \n    limit  = 2000) |> \n  url_build() |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nownership1$query\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$offset\n[1] 2001\n\n$limit\n[1] 2000\n\n$resources\n                                    id alias\n1 e7fce918-0873-519f-80ae-818e386299d1     t\n\n$count\n[1] TRUE\n\n$results\n[1] TRUE\n\n$schema\n[1] TRUE\n\n$keys\n[1] TRUE\n\n$format\n[1] \"json\"\n\n$rowIds\n[1] FALSE\n\n$properties\n [1] \"cms_certification_number_ccn\" \"provider_name\"               \n [3] \"address_line_1\"               \"address_line_2\"              \n [5] \"citytown\"                     \"state\"                       \n [7] \"zip_code\"                     \"countyparish\"                \n [9] \"telephone_number\"             \"cms_region\"                  \n[11] \"ownership_type\"               \"certification_date\"          \n```\n\n\n:::\n\n```{.r .cell-code}\nownership1$count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1229\n```\n\n\n:::\n\n```{.r .cell-code}\nownership1$results |> \n  tibble() |> \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 0\nColumns: 1\n$ `ownership1$results` <list> list()\n```\n\n\n:::\n:::\n\nContinue incrementing the offset by 2,000 for each subsequent batch. When retrieving large datasets, consider pacing your requests to avoid overwhelming your system with data and to allow for graceful error handling. Depending on the volume of data and your application's capabilities, consider implementing a back-off strategy if errors occur.\n\n### Stars/Ratings\n\nCMS's **Five-Star Quality Rating System** is designed to help users compare the overall quality of care across different healthcare providers. Access these ratings by referring to the associated column names:\n\n   * __Nursing Home__: `overall_rating`\n   * __Hospitals__: `hospital_overall_rating`\n   * __Dialysis__: `five_star`\n   * __Hospice__: `star_rating`\n   * __Home Health__: `quality_of_patient_care_star_rating`\n\nFor example, the query for [**Nursing Home**](https://data.cms.gov/provider-data/dataset/4pq5-n9py) facilities with _less than_ a 5-star overall rating is:\n\n::: {.cell}\n\n```{.r .cell-code}\nnhome0 <- url_parse(\n  base_url = \"https://data.cms.gov/provider-data/api/1/datastore/query/\", \n  url      = \"4pq5-n9py/0\") |> \n  url_modify_query(\n    `conditions[0][property]` = \"overall_rating\",\n    `conditions[0][value]`    = 5,\n    `conditions[0][operator]` = \"<\",\n    offset                    = 0, \n    limit                     = 2000) |> \n  url_build() |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nnhome0$query\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$conditions\n        property value operator\n1 overall_rating     5        <\n\n$offset\n[1] 0\n\n$limit\n[1] 2000\n\n$resources\n                                    id alias\n1 f93da3a3-400b-5efe-960d-c1d72b1d4f65     t\n\n$count\n[1] TRUE\n\n$results\n[1] TRUE\n\n$schema\n[1] TRUE\n\n$keys\n[1] TRUE\n\n$format\n[1] \"json\"\n\n$rowIds\n[1] FALSE\n\n$properties\n  [1] \"cms_certification_number_ccn\"                                    \n  [2] \"provider_name\"                                                   \n  [3] \"provider_address\"                                                \n  [4] \"citytown\"                                                        \n  [5] \"state\"                                                           \n  [6] \"zip_code\"                                                        \n  [7] \"telephone_number\"                                                \n  [8] \"provider_ssa_county_code\"                                        \n  [9] \"countyparish\"                                                    \n [10] \"ownership_type\"                                                  \n [11] \"number_of_certified_beds\"                                        \n [12] \"average_number_of_residents_per_day\"                             \n [13] \"average_number_of_residents_per_day_footnote\"                    \n [14] \"provider_type\"                                                   \n [15] \"provider_resides_in_hospital\"                                    \n [16] \"legal_business_name\"                                             \n [17] \"date_first_approved_to_provide_medicare_and_medicaid_services\"   \n [18] \"affiliated_entity_name\"                                          \n [19] \"affiliated_entity_id\"                                            \n [20] \"continuing_care_retirement_community\"                            \n [21] \"special_focus_status\"                                            \n [22] \"abuse_icon\"                                                      \n [23] \"most_recent_health_inspection_more_than_2_years_ago\"             \n [24] \"provider_changed_ownership_in_last_12_months\"                    \n [25] \"with_a_resident_and_family_council\"                              \n [26] \"automatic_sprinkler_systems_in_all_required_areas\"               \n [27] \"overall_rating\"                                                  \n [28] \"overall_rating_footnote\"                                         \n [29] \"health_inspection_rating\"                                        \n [30] \"health_inspection_rating_footnote\"                               \n [31] \"qm_rating\"                                                       \n [32] \"qm_rating_footnote\"                                              \n [33] \"longstay_qm_rating\"                                              \n [34] \"longstay_qm_rating_footnote\"                                     \n [35] \"shortstay_qm_rating\"                                             \n [36] \"shortstay_qm_rating_footnote\"                                    \n [37] \"staffing_rating\"                                                 \n [38] \"staffing_rating_footnote\"                                        \n [39] \"reported_staffing_footnote\"                                      \n [40] \"physical_therapist_staffing_footnote\"                            \n [41] \"reported_nurse_aide_staffing_hours_per_resident_per_day\"         \n [42] \"reported_lpn_staffing_hours_per_resident_per_day\"                \n [43] \"reported_rn_staffing_hours_per_resident_per_day\"                 \n [44] \"reported_licensed_staffing_hours_per_resident_per_day\"           \n [45] \"reported_total_nurse_staffing_hours_per_resident_per_day\"        \n [46] \"total_number_of_nurse_staff_hours_per_resident_per_day_on_t_4a14\"\n [47] \"registered_nurse_hours_per_resident_per_day_on_the_weekend\"      \n [48] \"reported_physical_therapist_staffing_hours_per_resident_per_day\" \n [49] \"total_nursing_staff_turnover\"                                    \n [50] \"total_nursing_staff_turnover_footnote\"                           \n [51] \"registered_nurse_turnover\"                                       \n [52] \"registered_nurse_turnover_footnote\"                              \n [53] \"number_of_administrators_who_have_left_the_nursing_home\"         \n [54] \"administrator_turnover_footnote\"                                 \n [55] \"nursing_casemix_index\"                                           \n [56] \"nursing_casemix_index_ratio\"                                     \n [57] \"casemix_nurse_aide_staffing_hours_per_resident_per_day\"          \n [58] \"casemix_lpn_staffing_hours_per_resident_per_day\"                 \n [59] \"casemix_rn_staffing_hours_per_resident_per_day\"                  \n [60] \"casemix_total_nurse_staffing_hours_per_resident_per_day\"         \n [61] \"casemix_weekend_total_nurse_staffing_hours_per_resident_per_day\" \n [62] \"adjusted_nurse_aide_staffing_hours_per_resident_per_day\"         \n [63] \"adjusted_lpn_staffing_hours_per_resident_per_day\"                \n [64] \"adjusted_rn_staffing_hours_per_resident_per_day\"                 \n [65] \"adjusted_total_nurse_staffing_hours_per_resident_per_day\"        \n [66] \"adjusted_weekend_total_nurse_staffing_hours_per_resident_per_day\"\n [67] \"rating_cycle_1_standard_survey_health_date\"                      \n [68] \"rating_cycle_1_total_number_of_health_deficiencies\"              \n [69] \"rating_cycle_1_number_of_standard_health_deficiencies\"           \n [70] \"rating_cycle_1_number_of_complaint_health_deficiencies\"          \n [71] \"rating_cycle_1_health_deficiency_score\"                          \n [72] \"rating_cycle_1_number_of_health_revisits\"                        \n [73] \"rating_cycle_1_health_revisit_score\"                             \n [74] \"rating_cycle_1_total_health_score\"                               \n [75] \"rating_cycle_2_standard_health_survey_date\"                      \n [76] \"rating_cycle_2_total_number_of_health_deficiencies\"              \n [77] \"rating_cycle_2_number_of_standard_health_deficiencies\"           \n [78] \"rating_cycle_2_number_of_complaint_health_deficiencies\"          \n [79] \"rating_cycle_2_health_deficiency_score\"                          \n [80] \"rating_cycle_2_number_of_health_revisits\"                        \n [81] \"rating_cycle_2_health_revisit_score\"                             \n [82] \"rating_cycle_2_total_health_score\"                               \n [83] \"rating_cycle_3_standard_health_survey_date\"                      \n [84] \"rating_cycle_3_total_number_of_health_deficiencies\"              \n [85] \"rating_cycle_3_number_of_standard_health_deficiencies\"           \n [86] \"rating_cycle_3_number_of_complaint_health_deficiencies\"          \n [87] \"rating_cycle_3_health_deficiency_score\"                          \n [88] \"rating_cycle_3_number_of_health_revisits\"                        \n [89] \"rating_cycle_3_health_revisit_score\"                             \n [90] \"rating_cycle_3_total_health_score\"                               \n [91] \"total_weighted_health_survey_score\"                              \n [92] \"number_of_facility_reported_incidents\"                           \n [93] \"number_of_substantiated_complaints\"                              \n [94] \"number_of_citations_from_infection_control_inspections\"          \n [95] \"number_of_fines\"                                                 \n [96] \"total_amount_of_fines_in_dollars\"                                \n [97] \"number_of_payment_denials\"                                       \n [98] \"total_number_of_penalties\"                                       \n [99] \"location\"                                                        \n[100] \"latitude\"                                                        \n[101] \"longitude\"                                                       \n[102] \"geocoding_footnote\"                                              \n[103] \"processing_date\"                                                 \n```\n\n\n:::\n\n```{.r .cell-code}\nnhome0$count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12130\n```\n\n\n:::\n\n```{.r .cell-code}\nnhome0$results |> tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 × 103\n   cms_certification_nu…¹ provider_name provider_address citytown state zip_code\n   <chr>                  <chr>         <chr>            <chr>    <chr> <chr>   \n 1 015009                 BURNS NURSIN… 701 MONROE STRE… RUSSELL… AL    35653   \n 2 015010                 COOSA VALLEY… 260 WEST WALNUT… SYLACAU… AL    35150   \n 3 015012                 HIGHLANDS HE… 380 WOODS COVE … SCOTTSB… AL    35768   \n 4 015014                 EASTVIEW REH… 7755 FOURTH AVE… BIRMING… AL    35206   \n 5 015015                 PLANTATION M… 6450 OLD TUSCAL… MC CALLA AL    35111   \n 6 015019                 MERRY WOOD L… 280 MT HEBRON R… ELMORE   AL    36025   \n 7 015024                 LIMESTONE NU… 1600 WEST HOBBS… ATHENS   AL    35611   \n 8 015027                 WETUMPKA HEA… 1825 HOLTVILLE … WETUMPKA AL    36092   \n 9 015031                 MITCHELL-HOL… 805 FLAGG CIRCLE FLORENCE AL    35631   \n10 015032                 DIVERSICARE … 1701 NORTH ALST… FOLEY    AL    36535   \n# ℹ 1,990 more rows\n# ℹ abbreviated name: ¹​cms_certification_number_ccn\n# ℹ 97 more variables: telephone_number <chr>, provider_ssa_county_code <chr>,\n#   countyparish <chr>, ownership_type <chr>, number_of_certified_beds <chr>,\n#   average_number_of_residents_per_day <chr>,\n#   average_number_of_residents_per_day_footnote <chr>, provider_type <chr>,\n#   provider_resides_in_hospital <chr>, legal_business_name <chr>, …\n```\n\n\n:::\n\n```{.r .cell-code}\nnhome0$results |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na() |> \n  count(overall_rating, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  overall_rating   n\n1              2 561\n2              3 525\n3              1 450\n4              4 444\n5           <NA>  20\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnhome1 <- url_parse(\n  base_url = \"https://data.cms.gov/provider-data/api/1/datastore/query/\", \n  url      = \"4pq5-n9py/0\") |> \n  url_modify_query(\n    `conditions[0][property]` = \"overall_rating\",\n    `conditions[0][value]`    = 5,\n    `conditions[0][operator]` = \"<\",\n    offset                    = 2001, \n    limit                     = 2000) |> \n  url_build() |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nnhome1$query\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$conditions\n        property value operator\n1 overall_rating     5        <\n\n$offset\n[1] 2001\n\n$limit\n[1] 2000\n\n$resources\n                                    id alias\n1 f93da3a3-400b-5efe-960d-c1d72b1d4f65     t\n\n$count\n[1] TRUE\n\n$results\n[1] TRUE\n\n$schema\n[1] TRUE\n\n$keys\n[1] TRUE\n\n$format\n[1] \"json\"\n\n$rowIds\n[1] FALSE\n\n$properties\n  [1] \"cms_certification_number_ccn\"                                    \n  [2] \"provider_name\"                                                   \n  [3] \"provider_address\"                                                \n  [4] \"citytown\"                                                        \n  [5] \"state\"                                                           \n  [6] \"zip_code\"                                                        \n  [7] \"telephone_number\"                                                \n  [8] \"provider_ssa_county_code\"                                        \n  [9] \"countyparish\"                                                    \n [10] \"ownership_type\"                                                  \n [11] \"number_of_certified_beds\"                                        \n [12] \"average_number_of_residents_per_day\"                             \n [13] \"average_number_of_residents_per_day_footnote\"                    \n [14] \"provider_type\"                                                   \n [15] \"provider_resides_in_hospital\"                                    \n [16] \"legal_business_name\"                                             \n [17] \"date_first_approved_to_provide_medicare_and_medicaid_services\"   \n [18] \"affiliated_entity_name\"                                          \n [19] \"affiliated_entity_id\"                                            \n [20] \"continuing_care_retirement_community\"                            \n [21] \"special_focus_status\"                                            \n [22] \"abuse_icon\"                                                      \n [23] \"most_recent_health_inspection_more_than_2_years_ago\"             \n [24] \"provider_changed_ownership_in_last_12_months\"                    \n [25] \"with_a_resident_and_family_council\"                              \n [26] \"automatic_sprinkler_systems_in_all_required_areas\"               \n [27] \"overall_rating\"                                                  \n [28] \"overall_rating_footnote\"                                         \n [29] \"health_inspection_rating\"                                        \n [30] \"health_inspection_rating_footnote\"                               \n [31] \"qm_rating\"                                                       \n [32] \"qm_rating_footnote\"                                              \n [33] \"longstay_qm_rating\"                                              \n [34] \"longstay_qm_rating_footnote\"                                     \n [35] \"shortstay_qm_rating\"                                             \n [36] \"shortstay_qm_rating_footnote\"                                    \n [37] \"staffing_rating\"                                                 \n [38] \"staffing_rating_footnote\"                                        \n [39] \"reported_staffing_footnote\"                                      \n [40] \"physical_therapist_staffing_footnote\"                            \n [41] \"reported_nurse_aide_staffing_hours_per_resident_per_day\"         \n [42] \"reported_lpn_staffing_hours_per_resident_per_day\"                \n [43] \"reported_rn_staffing_hours_per_resident_per_day\"                 \n [44] \"reported_licensed_staffing_hours_per_resident_per_day\"           \n [45] \"reported_total_nurse_staffing_hours_per_resident_per_day\"        \n [46] \"total_number_of_nurse_staff_hours_per_resident_per_day_on_t_4a14\"\n [47] \"registered_nurse_hours_per_resident_per_day_on_the_weekend\"      \n [48] \"reported_physical_therapist_staffing_hours_per_resident_per_day\" \n [49] \"total_nursing_staff_turnover\"                                    \n [50] \"total_nursing_staff_turnover_footnote\"                           \n [51] \"registered_nurse_turnover\"                                       \n [52] \"registered_nurse_turnover_footnote\"                              \n [53] \"number_of_administrators_who_have_left_the_nursing_home\"         \n [54] \"administrator_turnover_footnote\"                                 \n [55] \"nursing_casemix_index\"                                           \n [56] \"nursing_casemix_index_ratio\"                                     \n [57] \"casemix_nurse_aide_staffing_hours_per_resident_per_day\"          \n [58] \"casemix_lpn_staffing_hours_per_resident_per_day\"                 \n [59] \"casemix_rn_staffing_hours_per_resident_per_day\"                  \n [60] \"casemix_total_nurse_staffing_hours_per_resident_per_day\"         \n [61] \"casemix_weekend_total_nurse_staffing_hours_per_resident_per_day\" \n [62] \"adjusted_nurse_aide_staffing_hours_per_resident_per_day\"         \n [63] \"adjusted_lpn_staffing_hours_per_resident_per_day\"                \n [64] \"adjusted_rn_staffing_hours_per_resident_per_day\"                 \n [65] \"adjusted_total_nurse_staffing_hours_per_resident_per_day\"        \n [66] \"adjusted_weekend_total_nurse_staffing_hours_per_resident_per_day\"\n [67] \"rating_cycle_1_standard_survey_health_date\"                      \n [68] \"rating_cycle_1_total_number_of_health_deficiencies\"              \n [69] \"rating_cycle_1_number_of_standard_health_deficiencies\"           \n [70] \"rating_cycle_1_number_of_complaint_health_deficiencies\"          \n [71] \"rating_cycle_1_health_deficiency_score\"                          \n [72] \"rating_cycle_1_number_of_health_revisits\"                        \n [73] \"rating_cycle_1_health_revisit_score\"                             \n [74] \"rating_cycle_1_total_health_score\"                               \n [75] \"rating_cycle_2_standard_health_survey_date\"                      \n [76] \"rating_cycle_2_total_number_of_health_deficiencies\"              \n [77] \"rating_cycle_2_number_of_standard_health_deficiencies\"           \n [78] \"rating_cycle_2_number_of_complaint_health_deficiencies\"          \n [79] \"rating_cycle_2_health_deficiency_score\"                          \n [80] \"rating_cycle_2_number_of_health_revisits\"                        \n [81] \"rating_cycle_2_health_revisit_score\"                             \n [82] \"rating_cycle_2_total_health_score\"                               \n [83] \"rating_cycle_3_standard_health_survey_date\"                      \n [84] \"rating_cycle_3_total_number_of_health_deficiencies\"              \n [85] \"rating_cycle_3_number_of_standard_health_deficiencies\"           \n [86] \"rating_cycle_3_number_of_complaint_health_deficiencies\"          \n [87] \"rating_cycle_3_health_deficiency_score\"                          \n [88] \"rating_cycle_3_number_of_health_revisits\"                        \n [89] \"rating_cycle_3_health_revisit_score\"                             \n [90] \"rating_cycle_3_total_health_score\"                               \n [91] \"total_weighted_health_survey_score\"                              \n [92] \"number_of_facility_reported_incidents\"                           \n [93] \"number_of_substantiated_complaints\"                              \n [94] \"number_of_citations_from_infection_control_inspections\"          \n [95] \"number_of_fines\"                                                 \n [96] \"total_amount_of_fines_in_dollars\"                                \n [97] \"number_of_payment_denials\"                                       \n [98] \"total_number_of_penalties\"                                       \n [99] \"location\"                                                        \n[100] \"latitude\"                                                        \n[101] \"longitude\"                                                       \n[102] \"geocoding_footnote\"                                              \n[103] \"processing_date\"                                                 \n```\n\n\n:::\n\n```{.r .cell-code}\nnhome1$count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12130\n```\n\n\n:::\n\n```{.r .cell-code}\nnhome1$results |> tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 × 103\n   cms_certification_nu…¹ provider_name provider_address citytown state zip_code\n   <chr>                  <chr>         <chr>            <chr>    <chr> <chr>   \n 1 115418                 PRUITTHEALTH… 521 CABINESS RO… FORSYTH  GA    31029   \n 2 115419                 OAKS - ATHEN… 490 KATHWOOD DR  ATHENS   GA    30607   \n 3 115421                 WOODSTOCK NU… 105 ARNOLD MILL… WOODSTO… GA    30188   \n 4 115422                 ROSWELL NURS… 1109 GREEN STRE… ROSWELL  GA    30075   \n 5 115423                 CHESTNUT RID… 125 SAMARITAN D… CUMMING  GA    30040   \n 6 115424                 LAKE CROSSIN… 6698 WASHINGTON… APPLING  GA    30802   \n 7 115427                 THOMASVILLE … 120 SKYLINE DRI… THOMASV… GA    31757   \n 8 115429                 CORDELE HEAL… 1106 NORTH 4TH … CORDELE  GA    31015   \n 9 115430                 SUMMERHILL E… 500 STANLEY STR… PERRY    GA    31069   \n10 115431                 HARALSON NSG… 315 FIELD STREET BREMEN   GA    30110   \n# ℹ 1,990 more rows\n# ℹ abbreviated name: ¹​cms_certification_number_ccn\n# ℹ 97 more variables: telephone_number <chr>, provider_ssa_county_code <chr>,\n#   countyparish <chr>, ownership_type <chr>, number_of_certified_beds <chr>,\n#   average_number_of_residents_per_day <chr>,\n#   average_number_of_residents_per_day_footnote <chr>, provider_type <chr>,\n#   provider_resides_in_hospital <chr>, legal_business_name <chr>, …\n```\n\n\n:::\n\n```{.r .cell-code}\nnhome1$results |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na() |> \n  count(overall_rating, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  overall_rating   n\n1              1 695\n2              2 447\n3              3 439\n4              4 396\n5           <NA>  23\n```\n\n\n:::\n:::\n\n\n### Specific Conditions\n\nUse the __Datastore Query Endpoint__ (`datastore/query/{datasetID}/{index}`). It takes two arguments: the __`datasetID`__, which does not change between data refreshes, and the distribution's __`index`__, which will _always_ be `0`.\n\nFor example, to return the first 500 results (the default) of a dataset with an overall rating of 5:\n\n::: {.cell}\n\n```{.r .cell-code}\nurl_parse(\n  base_url = \"https://data.cms.gov/provider-data/api/1/datastore/query/\", \n  url      = \"4pq5-n9py/0\") |> \n  url_modify_query(\n    `conditions[0][property]` = \"overall_rating\",\n    `conditions[0][value]`    = 5,\n    `conditions[0][operator]` = \"=\",\n    offset                    = 0, \n    limit                     = 500)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n<httr2_url>\nhttps://data.cms.gov/provider-data/api/1/datastore/query/4pq5-n9py/0?conditions%5B0%5D%5Bproperty%5D=overall_rating&conditions%5B0%5D%5Bvalue%5D=5&conditions%5B0%5D%5Boperator%5D=%3D&offset=0&limit=500\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n• scheme: https\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n• hostname: data.cms.gov\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n• path: /provider-data/api/1/datastore/query/4pq5-n9py/0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n• query:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  • conditions[0][property]: overall_rating\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  • conditions[0][value]: 5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  • conditions[0][operator]: %3D\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  • offset: 0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  • limit: 500\n```\n\n\n:::\n:::\n\nMore complex queries can be created in JSON and converted to an HTTP query string using the [JSON Query to String](https://www.convertonline.io/convert/json-to-query-string) tool. \n\nFor example, to return the `cms_certification_number_ccn` and `overall_rating` columns with a rating greater than 3, use the following JSON:\n\n```{.json}\n{\n    \"properties\": [\n        \"cms_certification_number_ccn\",\n        \"overall_rating\"\n    ],\n    \"conditions\": [\n        {\n            \"property\":\"overall_rating\",\n            \"value\": \"3\",\n            \"operator\": \">\"\n        }\n    ]\n}\n```\n\nThis converts to a query string of:\n\n::: {.cell}\n\n```{.r .cell-code}\nnhomegt3 <- url_parse(\n  base_url = \"https://data.cms.gov/provider-data/api/1/datastore/query/\", \n  url      = \"4pq5-n9py/0\") |> \n  url_modify_query(\n    `properties[]`            = \"state\",\n    `properties[]`            = \"overall_rating\",\n    `conditions[0][property]` = \"overall_rating\",\n    `conditions[0][value]`    = 3,\n    `conditions[0][operator]` = \">\",\n    offset                    = 0, \n    limit                     = 2000) |> \n  url_build() |> \n  request() |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nnhomegt3$query\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$properties\n[1] \"state\"          \"overall_rating\"\n\n$conditions\n        property value operator\n1 overall_rating     3        >\n\n$offset\n[1] 0\n\n$limit\n[1] 2000\n\n$resources\n                                    id alias\n1 f93da3a3-400b-5efe-960d-c1d72b1d4f65     t\n\n$count\n[1] TRUE\n\n$results\n[1] TRUE\n\n$schema\n[1] TRUE\n\n$keys\n[1] TRUE\n\n$format\n[1] \"json\"\n\n$rowIds\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nnhomegt3$count\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5174\n```\n\n\n:::\n\n```{.r .cell-code}\nnhomegt3$results |> tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 × 2\n   state overall_rating\n   <chr> <chr>         \n 1 AL    4             \n 2 AL    4             \n 3 AL    5             \n 4 AL    5             \n 5 AL    5             \n 6 AL    4             \n 7 AL    5             \n 8 AL    4             \n 9 AL    4             \n10 AL    5             \n# ℹ 1,990 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nnhomegt3$results |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na() |> \n  count(state, overall_rating, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   state overall_rating   n\n1     FL              5 163\n2     CA              5 138\n3     CA              4 117\n4     FL              4 110\n5     IN              5 105\n6     IL              4  98\n7     IL              5  91\n8     IN              4  89\n9     IA              5  79\n10    IA              4  73\n11    KS              4  59\n12    GA              4  53\n13    KS              5  53\n14    AL              4  43\n15    AR              4  43\n16    KY              4  42\n17    CT              4  41\n18    AR              5  40\n19    MD              5  40\n20    AL              5  39\n21    CO              4  39\n22    CO              5  39\n23    AZ              5  38\n24    GA              5  37\n25    KY              5  37\n26    CT              5  34\n27    LA              4  31\n28    MD              4  29\n29    ID              5  25\n30    AZ              4  20\n31    LA              5  19\n32    ID              4  18\n33    MA              4  18\n34    HI              5  17\n35    ME              5  17\n36    MA              5  13\n37    DE              5  10\n38    AK              5   9\n39    DE              4   9\n40    ME              4   9\n41    HI              4   7\n42    DC              5   5\n43    AK              4   2\n44    DC              4   2\n```\n\n\n:::\n:::\n\n### All Dataset IDs\n\nRetrieve a comprehensive list of all datasets available by leveraging the `metastore/schemas` endpoint:\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- request(\n  paste0(\n    \"https://data.cms.gov/\",\n    \"provider-data/api/1/\",\n    \"metastore/schemas/dataset/items\"\n    )\n  ) |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nx |> \n  tibble() |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 234 × 17\n   accessLevel landingPage   bureauCode issued `@type` modified released keyword\n   <chr>       <chr>         <list>     <chr>  <chr>   <chr>    <chr>    <list> \n 1 public      https://data… <chr [1]>  2020-… dcat:D… 2024-12… 2024-10… <chr>  \n 2 public      https://data… <chr [1]>  2020-… dcat:D… 2024-12… 2024-10… <chr>  \n 3 public      https://data… <chr [1]>  2020-… dcat:D… 2024-12… 2024-10… <chr>  \n 4 public      https://data… <chr [1]>  2020-… dcat:D… 2024-12… 2024-10… <chr>  \n 5 public      https://data… <chr [1]>  2020-… dcat:D… 2024-12… 2024-10… <chr>  \n 6 public      https://data… <chr [1]>  2024-… dcat:D… 2024-09… 2024-10… <chr>  \n 7 public      https://data… <chr [1]>  2024-… dcat:D… 2024-09… 2024-10… <chr>  \n 8 public      https://data… <chr [1]>  2024-… dcat:D… 2024-09… 2024-10… <chr>  \n 9 public      https://data… <chr [1]>  2024-… dcat:D… 2024-11… 2024-11… <chr>  \n10 public      https://data… <chr [1]>  2024-… dcat:D… 2024-11… 2024-11… <chr>  \n# ℹ 224 more rows\n# ℹ 9 more variables: contactPoint <df[,4]>, publisher <df[,2]>,\n#   identifier <chr>, description <chr>, title <chr>, programCode <list>,\n#   distribution <list>, theme <list>, archiveExclude <lgl>\n```\n\n\n:::\n:::\n\n### Search `theme`\n\nReturn a list of all public datasets for a particular __Topic__ area via the `/api/1/search` endpoint. For example, to get a list of all datasets in the `Home health services` Topic, you could use:\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- request(\n  paste0(\n    \"https://data.cms.gov/\",\n    \"provider-data/api/1/\",\n    \"search?\",\n    \"page-size=100&\",\n    \"theme=Home%20health%20services\"\n    )\n  ) |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nx$facets |> \n  tibble() |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na()\n\nx\n```\n:::\n\n> __Note__: If the `page-size` is not provided, the default result limit is 10.\n\n### Search `keyword`\n\nOne of the easiest ways to generate your search parameters is to use the Provider Data Catalog [search page](https://data.cms.gov/provider-data/search) and then copy the query string to the end of the search endpoint. For example, if you filter by _\"Dialysis facilities\"_ tagged with _\"Linking Quality to Payment\"_ and select 25 results per page, the query string produced is:\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- request(\n  paste0(\n    \"https://data.cms.gov/\",\n    \"provider-data/api/1/\",\n    \"search?\",\n    \"keyword=Linking%20Quality%20to%20Payment&\",\n    \"page-size=25&\",\n    \"theme=Dialysis%20facilities\"\n    )\n  ) |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nx$facets |> \n  tibble() |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na()\n\nx$results\n```\n:::\n\n### Search `fulltext`\n\nUse the same method to return a list of datasets that contain a keyword (like \"ratings\") in their title and/or description:\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- request(\n  paste0(\n    \"https://data.cms.gov/\",\n    \"provider-data/api/1/\",\n    \"search?\",\n    \"fulltext=ratings\"\n    )\n  ) |> \n  req_perform() |> \n  resp_body_json(simplifyVector = TRUE)\n\nx$facets |> \n  tibble() |> \n  mutate(across(where(is.character),  ~ na_if(.x, \"\"))) |> \n  remove_all_na()\n\nx$results\n```\n:::\n\n\n## Differences\n\n::: callout\n\n#### __Datastore__ vs. __Metastore__\n\n   * __Datastore__\n      * Data from the data files (CSVs)\n   * __Metastore__\n      * Metadata from the `data.json` file \n      * `title`, `last_updated`, `release_date`, `keywords`, etc.\n\nThink of the __Metastore__ as the library index that helps you find the right book (`dataset`), and the __Datastore__ as the book itself.\n\n\n#### __Distribution__ vs. __Dataset__\n\n   * __Distribution__\n      * Unique identifier of the __Datastore__ \n      * Specific to a particular CSV data import\n      * Changes with every data refresh\n   * __Dataset__\n      * Unique identifier of the __Dataset__ \n      * Comes from the data.json file\n      * Appears as part of the URL in the PDC site\n      * Does not change between data refreshes\n\n--------------------------------------------------------------------------------\n\n> If you have been using the `datastore/sql` or `datastore/query/{distributionId}` endpoints, consider switching to the __`datastore/query/{datasetID}/{index}`__ endpoint instead. \n\nThe `datasetID` does not change between refreshes, and, currently, all **Provider Data Catalog** datasets only have a single resource, so the `index` will _always_ be `0`.\n\nFor example, search the [Long Term Care Hospital dataset](https://data.cms.gov/provider-data/dataset/5zdx-ny2x) with:\n\n```r\n\"https://data.cms.gov/provider-data/api/1/datastore/query/5zdx-ny2x/0\"\n```\n\nDistribution IDs change with every dataset update, so it is better to use APIs with the Dataset ID and the index of the distribution. If you still need the current distribution ID, you can access it through the metadata API, under `distribution -> identifier`:\n\n```r\n\"https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items/[datasetID]?show-reference-ids\"\n```\n\n::: \n\n--------------------------------------------------------------------------------\n\n\n## Endpoints\n\n   * [Link: API Documentation](https://data.cms.gov/provider-data/docs)\n\n### Metastore\n\n   1. Full collection of available metastore schemas\n      - __GET__ (No Parameters)\n\n::: {.cell}\n\n```{.r .cell-code}\n\"https://data.cms.gov/provider-data/api/1/metastore/schemas\" |> \n  request() |> \n  req_perform() |> \n  resp_body_string() |> \n  jsonify::pretty_json()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'jsonify':\n  method     from    \n  print.json jsonlite\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"catalog\": {\n        \"@context\": \"https://project-open-data.cio.gov/v1.1/schema/catalog.jsonld\",\n        \"@id\": \"https://data.cms.gov/provider-data/data.json\",\n        \"@type\": \"dcat:Catalog\",\n        \"conformsTo\": \"https://project-open-data.cio.gov/v1.1/schema\",\n        \"describedBy\": \"https://project-open-data.cio.gov/v1.1/schema/catalog.json\",\n        \"dataset\": []\n    },\n    \"dataset\": {\n        \"id\": \"https://data.cms.gov/provider-data/api/v1/schema/dataset\",\n        \"title\": \"Project Open Data Dataset\",\n        \"description\": \"The metadata format for all federal open data. Validates a single JSON object entry (as opposed to entire Data.json catalog).\",\n        \"type\": \"object\",\n        \"required\": [\n            \"bureauCode\",\n            \"programCode\",\n            \"title\",\n            \"description\",\n            \"keyword\",\n            \"modified\",\n            \"released\",\n            \"publisher\",\n            \"contactPoint\",\n            \"identifier\",\n            \"accessLevel\"\n        ],\n        \"properties\": {\n            \"@type\": {\n                \"title\": \"Metadata Context\",\n                \"type\": \"string\",\n                \"description\": \"IRI for the JSON-LD data type. This should be dcat:Dataset for each Dataset.\",\n                \"default\": \"dcat:Dataset\"\n            },\n            \"title\": {\n                \"title\": \"Title\",\n                \"description\": \"Human-readable name of the asset. Should be in plain English and include sufficient detail to facilitate search and discovery.\",\n                \"type\": \"string\",\n                \"minLength\": 1\n            },\n            \"identifier\": {\n                \"title\": \"Unique Identifier\",\n                \"description\": \"A unique identifier for the dataset or API as maintained within an Agency catalog or database.\",\n                \"type\": \"string\",\n                \"minLength\": 1\n            },\n            \"description\": {\n                \"title\": \"Description\",\n                \"description\": \"Human-readable description (e.g., an abstract) with sufficient detail to enable a user to quickly understand whether the asset is of interest.\",\n                \"type\": \"string\",\n                \"minLength\": 1\n            },\n            \"accessLevel\": {\n                \"description\": \"The degree to which this dataset could be made publicly-available, regardless of whether it has been made available. Choices: public (Data asset is or could be made publicly available to all without restrictions), restricted public (Data asset is available under certain use restrictions), or non-public (Data asset is not available to members of the public).\",\n                \"title\": \"Public Access Level\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"public\",\n                    \"restricted public\",\n                    \"private\",\n                    \"non-public\"\n                ],\n                \"default\": \"public\"\n            },\n            \"rights\": {\n                \"title\": \"Rights\",\n                \"description\": \"This may include information regarding access or restrictions based on privacy, security, or other policies. This should also provide an explanation for the selected \\\"accessLevel\\\" including instructions for how to access a restricted file, if applicable, or explanation for why a \\\"non-public\\\" or \\\"restricted public\\\" data assetis not \\\"public,\\\" if applicable. Text, 255 characters.\",\n                \"type\": \"string\",\n                \"minLength\": 1,\n                \"maxLength\": 255,\n                \"nullable\": true\n            },\n            \"accrualPeriodicity\": {\n                \"title\": \"Frequency\",\n                \"description\": \"Frequency with which dataset is published.\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"R/P10Y\",\n                    \"R/P4Y\",\n                    \"R/P1Y\",\n                    \"R/P2M\",\n                    \"R/P3.5D\",\n                    \"R/P1D\",\n                    \"R/P2W\",\n                    \"R/P6M\",\n                    \"R/P2Y\",\n                    \"R/P3Y\",\n                    \"R/P0.33W\",\n                    \"R/P0.33M\",\n                    \"R/PT1S\",\n                    \"R/P1M\",\n                    \"R/P3M\",\n                    \"R/P0.5M\",\n                    \"R/P4M\",\n                    \"R/P1W\",\n                    \"R/PT1H\",\n                    \"irregular\"\n                ],\n                \"enumNames\": [\n                    \"Decennial\",\n                    \"Quadrennial\",\n                    \"Annual\",\n                    \"Bimonthly\",\n                    \"Semiweekly\",\n                    \"Daily\",\n                    \"Biweekly\",\n                    \"Semiannual\",\n                    \"Biennial\",\n                    \"Triennial\",\n                    \"Three times a week\",\n                    \"Three times a month\",\n                    \"Continuously updated\",\n                    \"Monthly\",\n                    \"Quarterly\",\n                    \"Semimonthly\",\n                    \"Three times a year\",\n                    \"Weekly\",\n                    \"Hourly\",\n                    \"Irregular\"\n                ]\n            },\n            \"describedBy\": {\n                \"title\": \"Data Dictionary\",\n                \"description\": \"URL to the data dictionary for the dataset or API. Note that documentation other than a data dictionary can be referenced using Related Documents as shown in the expanded fields.\",\n                \"type\": \"string\",\n                \"format\": \"uri\"\n            },\n            \"describedByType\": {\n                \"title\": \"Data Dictionary Type\",\n                \"description\": \"The machine-readable file format (IANA Media Type or MIME Type) of the distribution’s describedBy URL.\",\n                \"type\": \"string\"\n            },\n            \"issued\": {\n                \"title\": \"Issue Date\",\n                \"description\": \"Date of formal issuance.\",\n                \"type\": \"string\"\n            },\n            \"modified\": {\n                \"title\": \"Last Modified\",\n                \"description\": \"Most recent date on which the dataset was changed, updated or modified.\",\n                \"type\": \"string\"\n            },\n            \"released\": {\n                \"title\": \"Release Date\",\n                \"description\": \"Date on which the dataset is scheduled to be published.\",\n                \"type\": \"string\"\n            },\n            \"license\": {\n                \"title\": \"License\",\n                \"description\": \"The license dataset or API is published with. See <a href=\\\"https://project-open-data.cio.gov/open-licenses/\\\">Open Licenses</a> for more information.\",\n                \"type\": \"string\",\n                \"format\": \"uri\"\n            },\n            \"spatial\": {\n                \"title\": \"Spatial\",\n                \"description\": \"The <a href=\\\"https://project-open-data.cio.gov/v1.1/schema/#spatial\\\">spatial coverage</a> of the dataset. Could include a spatial region like a bounding box or a named place.\",\n                \"type\": \"string\",\n                \"minLength\": 1\n            },\n            \"temporal\": {\n                \"title\": \"Temporal\",\n                \"description\": \"The <a href=\\\"https://project-open-data.cio.gov/v1.1/schema/#temporal\\\">start and end dates</a> for which the dataset is applicable, separated by a \\\"/\\\" (i.e., 2000-01-15T00:45:00Z/2010-01-15T00:06:00Z).\",\n                \"type\": \"string\"\n            },\n            \"isPartOf\": {\n                \"title\": \"Collection\",\n                \"description\": \"The collection of which the dataset is a subset.\",\n                \"type\": \"string\",\n                \"minLength\": 1\n            },\n            \"publisher\": {\n                \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n                \"id\": \"https://project-open-data.cio.gov/v1.1/schema/organization.json#\",\n                \"title\": \"Organization\",\n                \"description\": \"A Dataset Publisher Organization.\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\"\n                ],\n                \"properties\": {\n                    \"@type\": {\n                        \"title\": \"Metadata Context\",\n                        \"description\": \"IRI for the JSON-LD data type. This should be org:Organization for each publisher\",\n                        \"type\": \"string\",\n                        \"default\": \"org:Organization\"\n                    },\n                    \"name\": {\n                        \"title\": \"Publisher Name\",\n                        \"description\": \"\",\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                    },\n                    \"subOrganizationOf\": {\n                        \"title\": \"Parent Organization\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"bureauCode\": {\n                \"title\": \"Bureau Code\",\n                \"description\": \"Federal agencies, combined agency and bureau code from <a href=\\\"http://www.whitehouse.gov/sites/default/files/omb/assets/a11_current_year/app_c.pdf\\\">OMB Circular A-11, Appendix C</a> in the format of <code>015:010</code>.\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"[0-9]{3}:[0-9]{2}\"\n                },\n                \"minItems\": 1,\n                \"uniqueItems\": true\n            },\n            \"programCode\": {\n                \"title\": \"Program Code\",\n                \"description\": \"Federal agencies, list the primary program related to this data asset, from the <a href=\\\"http://goals.performance.gov/sites/default/files/images/FederalProgramInventory_FY13_MachineReadable_091613.xls\\\">Federal Program Inventory</a>. Use the format of <code>015:001</code>\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"minItems\": 1,\n                \"uniqueItems\": true\n            },\n            \"contactPoint\": {\n                \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n                \"id\": \"https://project-open-data.cio.gov/v1.1/schema/vcard.json#\",\n                \"title\": \"Project Open Data ContactPoint vCard\",\n                \"description\": \"A Dataset ContactPoint as a vCard object.\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"fn\"\n                ],\n                \"oneOf\": [\n                    {\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"hasEmail\"\n                        ]\n                    },\n                    {\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"hasURL\"\n                        ]\n                    }\n                ],\n                \"properties\": {\n                    \"@type\": {\n                        \"title\": \"Metadata Context\",\n                        \"description\": \"IRI for the JSON-LD data type. This should be vcard:Contact for contactPoint.\",\n                        \"enum\": [\n                            \"vcard:Contact\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"fn\": {\n                        \"title\": \"Contact Name\",\n                        \"description\": \"A full formatted name, e.g. Firstname Lastname.\",\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                    },\n                    \"hasEmail\": {\n                        \"title\": \"Email\",\n                        \"description\": \"Email address for the contact name.\",\n                        \"pattern\": \"^mailto:[\\\\w\\\\_\\\\~\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=\\\\:.-]+@[\\\\w.-]+\\\\.[\\\\w.-]+?$|[\\\\w\\\\_\\\\~\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=\\\\:.-]+@[\\\\w.-]+\\\\.[\\\\w.-]+?$\",\n                        \"type\": \"string\"\n                    },\n                    \"hasURL\": {\n                        \"title\": \"URL\",\n                        \"description\": \"URL for the contact\",\n                        \"format\": \"uri\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"theme\": {\n                \"title\": \"Category\",\n                \"description\": \"Main thematic category of the dataset.\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\",\n                    \"title\": \"Category\",\n                    \"minLength\": 1\n                },\n                \"uniqueItems\": true\n            },\n            \"keyword\": {\n                \"title\": \"Tags\",\n                \"description\": \"Tags (or keywords) help users discover your dataset; please include terms that would be used by technical and non-technical users.\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\",\n                    \"title\": \"Tag\",\n                    \"minLength\": 1\n                },\n                \"minItems\": 1\n            },\n            \"distribution\": {\n                \"title\": \"Distribution\",\n                \"description\": \"A distribution is a container for the data object. Each distribution should contain one accessURL or downloadURL. When providing a downloadURL, also include the format of the file.\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"title\": \"Data File\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"@type\": {\n                            \"title\": \"Metadata Context\",\n                            \"description\": \"IRI for the JSON-LD data type. This should be dcat:Distribution for each Distribution.\",\n                            \"default\": \"dcat:Distribution\",\n                            \"type\": \"string\",\n                            \"readOnly\": true\n                        },\n                        \"title\": {\n                            \"title\": \"Title\",\n                            \"description\": \"Human-readable name of the file.\",\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                        },\n                        \"description\": {\n                            \"title\": \"Description\",\n                            \"description\": \"Human-readable description of the file.\",\n                            \"type\": \"string\",\n                            \"minLength\": 1\n                        },\n                        \"format\": {\n                            \"title\": \"Format\",\n                            \"description\": \"A human-readable description of the file format of a distribution (i.e. csv, pdf, kml, etc.).\",\n                            \"type\": \"string\",\n                            \"examples\": [\n                                \"arcgis\",\n                                \"csv\",\n                                \"esri rest\",\n                                \"geojson\",\n                                \"json\",\n                                \"kml\",\n                                \"pdf\",\n                                \"tsv\",\n                                \"xls\",\n                                \"xlsx\",\n                                \"zip\",\n                                \"txt\"\n                            ]\n                        },\n                        \"mediaType\": {\n                            \"title\": \"Media Type\",\n                            \"description\": \"The machine-readable file format (<a href=\\\"https://www.iana.org/assignments/media-types/media-types.xhtml\\\">IANA Media Type or MIME Type</a>) of the distribution’s downloadURL.\",\n                            \"type\": \"string\"\n                        },\n                        \"downloadURL\": {\n                            \"title\": \"Download URL\",\n                            \"description\": \"URL providing direct access to a downloadable file of a dataset.\",\n                            \"type\": \"string\",\n                            \"anyOf\": [\n                                {\n                                    \"format\": \"uri\"\n                                }\n                            ]\n                        },\n                        \"accessURL\": {\n                            \"title\": \"Access URL\",\n                            \"description\": \"URL providing indirect access to a dataset.\",\n                            \"type\": \"string\",\n                            \"format\": \"uri\"\n                        },\n                        \"conformsTo\": {\n                            \"title\": \"Data Standard\",\n                            \"description\": \"URI used to identify a standardized specification the distribution conforms to.\",\n                            \"type\": \"string\",\n                            \"format\": \"uri\"\n                        },\n                        \"describedBy\": {\n                            \"title\": \"Data Dictionary\",\n                            \"description\": \"URL to the data dictionary for the distribution found at the downloadURL.\",\n                            \"type\": \"string\",\n                            \"format\": \"uri\"\n                        },\n                        \"describedByType\": {\n                            \"title\": \"Data Dictionary Type\",\n                            \"description\": \"The machine-readable file format (IANA Media Type or MIME Type) of the distribution’s describedBy URL.\",\n                            \"pattern\": \"^[a-z]+?$\",\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"minItems\": 1,\n                    \"uniqueItems\": true\n                }\n            },\n            \"references\": {\n                \"title\": \"Related Documents\",\n                \"description\": \"Related documents such as technical information about a dataset, developer documentation, etc.\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"string\",\n                    \"format\": \"uri\"\n                }\n            },\n            \"archiveExclude\": {\n                \"title\": \"Exclude from Archive\",\n                \"description\": \"For excluding this dataset from its provider's 'download all datasets'.\",\n                \"type\": \"boolean\"\n            }\n        }\n    },\n    \"dataset.ui\": {\n        \"@type\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        },\n        \"title\": {\n            \"ui:options\": {\n                \"description\": \"Name of the asset, in plain language. Include sufficient detail to facilitate search and discovery.\"\n            }\n        },\n        \"identifier\": {\n            \"ui:options\": {\n                \"widget\": \"dkan_uuid\"\n            }\n        },\n        \"description\": {\n            \"ui:options\": {\n                \"widget\": \"textarea\",\n                \"rows\": 5,\n                \"description\": \"Description (e.g., an abstract) with sufficient detail to enable a user to quickly understand whether the asset is of interest.\"\n            }\n        },\n        \"contactPoint\": {\n            \"properties\": {\n                \"@type\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                }\n            }\n        },\n        \"accessLevel\": {\n            \"ui:options\": {\n                \"description\": \"This refers to how the data can be accessed.\"\n            }\n        },\n        \"spatial\": {\n            \"ui:options\": {\n                \"widget\": \"textarea\",\n                \"rows\": 5,\n                \"title\": \"Relevant Location\",\n                \"description\": \"If your dataset has a spatial component, please provide location such as place name or latitude/longitude pairs.\"\n            }\n        },\n        \"temporal\": {\n            \"ui:options\": {\n                \"description\": \"The <a href=\\\"https://project-open-data.cio.gov/v1.1/schema/#temporal\\\">start and end dates</a> for which the dataset is applicable.\",\n                \"widget\": \"date_range\"\n            }\n        },\n        \"isPartOf\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        },\n        \"publisher\": {\n            \"ui:options\": {\n                \"widget\": \"list\",\n                \"type\": \"autocomplete\",\n                \"allowCreate\": \"true\",\n                \"titleProperty\": \"name\",\n                \"source\": {\n                    \"metastoreSchema\": \"publisher\"\n                }\n            },\n            \"properties\": {\n                \"@type\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                },\n                \"subOrganizationOf\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                }\n            }\n        },\n        \"license\": {\n            \"ui:options\": {\n                \"widget\": \"list\",\n                \"type\": \"select_other\",\n                \"other_type\": \"url\",\n                \"source\": {\n                    \"enum\": [\n                        \"https://creativecommons.org/licenses/by/4.0/\",\n                        \"https://creativecommons.org/licenses/by-sa/4.0/\",\n                        \"https://creativecommons.org/publicdomain/zero/1.0/\",\n                        \"https://creativecommons.org/licenses/by-nc/2.5/\",\n                        \"https://creativecommons.org/licenses/by-nc-nd/4.0/\",\n                        \"https://www.gnu.org/licenses/fdl.html\",\n                        \"https://opendatacommons.org/licenses/by/1.0/\",\n                        \"https://opendatacommons.org/licenses/odbl/1.0/\",\n                        \"http://opendefinition.org/licenses/odc-pddl/\",\n                        \"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/\"\n                    ],\n                    \"enumNames\": [\n                        \"Creative Commons Attribution\",\n                        \"Creative Commons Attribution Share-Alike\",\n                        \"Creative Commons CCZero\",\n                        \"Creative Commons Non-Commercial (2.5)\",\n                        \"Attribution NonCommercial NoDerivatives 4.0 International\",\n                        \"GNU Free Documentation License\",\n                        \"Open Data Commons Attribution License\",\n                        \"Open Data Commons Open Database License (ODbL)\",\n                        \"Open Data Commons Public Domain Dedication and Licence (PDDL)\",\n                        \"UK Open Government Licence (OGL)\"\n                    ]\n                }\n            }\n        },\n        \"distribution\": {\n            \"ui:options\": {\n                \"description\": \"A distribution is a container for the metadata specific to the data resource being shared. Each distribution should contain one <strong>Access URL</strong> or <strong>Download URL</strong>. When providing a Download URL, also include the format of the file.\"\n            },\n            \"items\": {\n                \"@type\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                },\n                \"title\": {\n                    \"ui:options\": {\n                        \"title\": \"File Title\",\n                        \"description\": \"\"\n                    }\n                },\n                \"mediaType\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                },\n                \"description\": {\n                    \"ui:options\": {\n                        \"widget\": \"textarea\",\n                        \"rows\": 5,\n                        \"title\": \"File Description\",\n                        \"description\": \"\"\n                    }\n                },\n                \"format\": {\n                    \"ui:options\": {\n                        \"title\": \"File Format\",\n                        \"widget\": \"list\",\n                        \"type\": \"select_other\",\n                        \"other_type\": \"textfield\",\n                        \"description\": \"CSV files must be encoded in UTF-8 format to be imported correctly. UTF-8 encoding is an established standard that provides optimal compatibility between applications and operating systems. Note that Excel provides a <strong>CSV UTF-8</strong> option when saving data files.\",\n                        \"source\": {\n                            \"enum\": [\n                                \"arcgis\",\n                                \"csv\",\n                                \"esri rest\",\n                                \"geojson\",\n                                \"json\",\n                                \"kml\",\n                                \"pdf\",\n                                \"tsv\",\n                                \"xls\",\n                                \"xlsx\",\n                                \"zip\",\n                                \"txt\"\n                            ]\n                        }\n                    }\n                },\n                \"downloadURL\": {\n                    \"ui:options\": {\n                        \"widget\": \"upload_or_link\",\n                        \"extensions\": \"csv html xls json xlsx doc docx rdf txt jpg png gif tiff pdf odf ods odt tsv tab geojson zip kml kmz shp\",\n                        \"progress_indicator\": \"bar\",\n                        \"description\": \"URL providing direct access to a downloadable file.\"\n                    }\n                },\n                \"accessURL\": {\n                    \"ui:options\": {\n                        \"description\": \"URL providing indirect access to the data, for example via API or a graphical interface.\"\n                    }\n                },\n                \"describedBy\": {\n                    \"ui:options\": {\n                        \"description\": \"URL to the data dictionary for the file found at the Download URL.\"\n                    }\n                },\n                \"describedByType\": {\n                    \"ui:options\": {\n                        \"description\": \"The machine-readable file format (IANA Media Type or MIME Type) of the distribution’s Data Dictionary URL.\"\n                    }\n                }\n            }\n        },\n        \"references\": {\n            \"items\": {\n                \"ui:options\": {\n                    \"placeholder\": \"http://\"\n                }\n            }\n        },\n        \"issued\": {\n            \"ui:options\": {\n                \"widget\": \"flexible_datetime\"\n            }\n        },\n        \"modified\": {\n            \"ui:options\": {\n                \"widget\": \"flexible_datetime\",\n                \"timeRequired\": false,\n                \"placeholder\": \"YYYY-MM-DD\"\n            }\n        },\n        \"released\": {\n            \"ui:options\": {\n                \"widget\": \"flexible_datetime\",\n                \"timeRequired\": false,\n                \"placeholder\": \"YYYY-MM-DD\"\n            }\n        },\n        \"describedBy\": {\n            \"ui:options\": {\n                \"placeholder\": \"http://\"\n            }\n        },\n        \"theme\": {\n            \"ui:options\": {\n                \"title\": \"Topics\",\n                \"hideActions\": \"true\",\n                \"child\": \"theme\"\n            },\n            \"items\": {\n                \"ui:options\": {\n                    \"title\": \"Topic\",\n                    \"widget\": \"list\",\n                    \"type\": \"autocomplete\",\n                    \"allowCreate\": \"true\",\n                    \"multiple\": \"true\",\n                    \"source\": {\n                        \"metastoreSchema\": \"theme\"\n                    }\n                }\n            }\n        },\n        \"keyword\": {\n            \"ui:options\": {\n                \"hideActions\": \"true\",\n                \"child\": \"keyword\"\n            },\n            \"items\": {\n                \"ui:options\": {\n                    \"widget\": \"list\",\n                    \"type\": \"autocomplete\",\n                    \"allowCreate\": \"true\",\n                    \"multiple\": \"true\",\n                    \"source\": {\n                        \"metastoreSchema\": \"keyword\"\n                    }\n                }\n            }\n        },\n        \"bureauCode\": {\n            \"ui:options\": {\n                \"hideActions\": \"true\",\n                \"child\": \"bureauCode\"\n            },\n            \"items\": {\n                \"ui:options\": {\n                    \"widget\": \"list\",\n                    \"type\": \"select\",\n                    \"source\": {\n                        \"enum\": [\n                            \"009:00\",\n                            \"009:38\",\n                            \"018:10\"\n                        ]\n                    }\n                }\n            }\n        },\n        \"programCode\": {\n            \"ui:options\": {\n                \"hideActions\": \"true\",\n                \"child\": \"programCode\"\n            },\n            \"items\": {\n                \"ui:options\": {\n                    \"widget\": \"list\",\n                    \"type\": \"select\",\n                    \"source\": {\n                        \"enum\": [\n                            \"009:000\",\n                            \"009:076\"\n                        ]\n                    }\n                }\n            }\n        }\n    },\n    \"publisher\": {\n        \"title\": \"Publisher\",\n        \"description\": \"A Dataset Publisher Organization.\",\n        \"type\": \"object\",\n        \"required\": [\n            \"identifier\",\n            \"data\"\n        ],\n        \"properties\": {\n            \"identifier\": {\n                \"title\": \"Identifier\",\n                \"type\": \"string\"\n            },\n            \"data\": {\n                \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n                \"id\": \"https://project-open-data.cio.gov/v1.1/schema/organization.json#\",\n                \"title\": \"Organization\",\n                \"description\": \"A Dataset Publisher Organization.\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\"\n                ],\n                \"properties\": {\n                    \"@type\": {\n                        \"title\": \"Metadata Context\",\n                        \"description\": \"IRI for the JSON-LD data type. This should be org:Organization for each publisher\",\n                        \"type\": \"string\",\n                        \"default\": \"org:Organization\"\n                    },\n                    \"name\": {\n                        \"title\": \"Publisher Name\",\n                        \"description\": \"\",\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                    },\n                    \"subOrganizationOf\": {\n                        \"title\": \"Parent Organization\",\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"publisher.ui\": {\n        \"identifier\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        },\n        \"data\": {\n            \"properties\": {\n                \"@type\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                }\n            }\n        }\n    },\n    \"distribution\": {\n        \"title\": \"Distribution\",\n        \"description\": \"Distribution object, based on DCAT-US.\",\n        \"type\": \"object\",\n        \"required\": [\n            \"identifier\",\n            \"data\"\n        ],\n        \"properties\": {\n            \"identifier\": {\n                \"title\": \"Identifier\",\n                \"type\": \"string\"\n            },\n            \"data\": {\n                \"title\": \"Data File\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"@type\": {\n                        \"title\": \"Metadata Context\",\n                        \"description\": \"IRI for the JSON-LD data type. This should be dcat:Distribution for each Distribution.\",\n                        \"default\": \"dcat:Distribution\",\n                        \"type\": \"string\",\n                        \"readOnly\": true\n                    },\n                    \"title\": {\n                        \"title\": \"Title\",\n                        \"description\": \"Human-readable name of the file.\",\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                    },\n                    \"description\": {\n                        \"title\": \"Description\",\n                        \"description\": \"Human-readable description of the file.\",\n                        \"type\": \"string\",\n                        \"minLength\": 1\n                    },\n                    \"format\": {\n                        \"title\": \"Format\",\n                        \"description\": \"A human-readable description of the file format of a distribution (i.e. csv, pdf, kml, etc.).\",\n                        \"type\": \"string\",\n                        \"examples\": [\n                            \"arcgis\",\n                            \"csv\",\n                            \"esri rest\",\n                            \"geojson\",\n                            \"json\",\n                            \"kml\",\n                            \"pdf\",\n                            \"tsv\",\n                            \"xls\",\n                            \"xlsx\",\n                            \"zip\"\n                        ]\n                    },\n                    \"mediaType\": {\n                        \"title\": \"Media Type\",\n                        \"description\": \"The machine-readable file format (<a href=\\\"https://www.iana.org/assignments/media-types/media-types.xhtml\\\">IANA Media Type or MIME Type</a>) of the distribution’s downloadURL.\",\n                        \"type\": \"string\"\n                    },\n                    \"downloadURL\": {\n                        \"title\": \"Download URL\",\n                        \"description\": \"URL providing direct access to a downloadable file of a dataset.\",\n                        \"type\": \"string\",\n                        \"anyOf\": [\n                            {\n                                \"format\": \"uri\"\n                            }\n                        ]\n                    },\n                    \"accessURL\": {\n                        \"title\": \"Access URL\",\n                        \"description\": \"URL providing indirect access to a dataset.\",\n                        \"type\": \"string\",\n                        \"format\": \"uri\"\n                    },\n                    \"conformsTo\": {\n                        \"title\": \"Data Standard\",\n                        \"description\": \"URL providing indirect access to a dataset.\",\n                        \"type\": \"string\",\n                        \"format\": \"uri\"\n                    },\n                    \"describedBy\": {\n                        \"title\": \"Data Dictionary\",\n                        \"description\": \"URL to the data dictionary for the distribution found at the downloadURL.\",\n                        \"type\": \"string\",\n                        \"format\": \"uri\"\n                    },\n                    \"describedByType\": {\n                        \"title\": \"Data Dictionary Type\",\n                        \"description\": \"The machine-readable file format (IANA Media Type or MIME Type) of the distribution’s describedBy URL.\",\n                        \"pattern\": \"^[a-z]+?$\",\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"distribution.ui\": {\n        \"identifier\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        },\n        \"data\": {\n            \"properties\": {\n                \"@type\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                },\n                \"mediaType\": {\n                    \"ui:options\": {\n                        \"widget\": \"hidden\"\n                    }\n                },\n                \"description\": {\n                    \"ui:options\": {\n                        \"widget\": \"textarea\",\n                        \"rows\": 5\n                    }\n                }\n            }\n        }\n    },\n    \"theme\": {\n        \"title\": \"Category\",\n        \"description\": \"Main thematic category of the dataset.\",\n        \"type\": \"object\",\n        \"required\": [\n            \"identifier\",\n            \"data\"\n        ],\n        \"properties\": {\n            \"identifier\": {\n                \"title\": \"Identifier\",\n                \"type\": \"string\"\n            },\n            \"data\": {\n                \"type\": \"string\",\n                \"title\": \"Category\",\n                \"description\": \"Main thematic category of the dataset.\",\n                \"minLength\": 1\n            }\n        }\n    },\n    \"theme.ui\": {\n        \"identifier\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        },\n        \"data\": {\n            \"ui:options\": {\n                \"title\": \"Topic\"\n            }\n        }\n    },\n    \"keyword\": {\n        \"title\": \"Tags\",\n        \"description\": \"Tags (or keywords) help users discover your dataset; please include terms that would be used by technical and non-technical users.\",\n        \"type\": \"object\",\n        \"required\": [\n            \"identifier\",\n            \"data\"\n        ],\n        \"properties\": {\n            \"identifier\": {\n                \"title\": \"Identifier\",\n                \"type\": \"string\"\n            },\n            \"data\": {\n                \"type\": \"string\",\n                \"title\": \"Tag\",\n                \"description\": \"Tags (or keywords) help users discover your dataset; please include terms that would be used by technical and non-technical users.\",\n                \"minLength\": 1\n            }\n        }\n    },\n    \"keyword.ui\": {\n        \"identifier\": {\n            \"ui:options\": {\n                \"widget\": \"hidden\"\n            }\n        }\n    },\n    \"data-dictionary\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"title\": \"Data Dictionary\",\n        \"type\": \"object\",\n        \"required\": [\n            \"identifier\",\n            \"title\"\n        ],\n        \"properties\": {\n            \"identifier\": {\n                \"title\": \"Identifier\",\n                \"type\": \"string\"\n            },\n            \"title\": {\n                \"title\": \"Title\",\n                \"type\": \"string\"\n            },\n            \"data\": {\n                \"title\": \"Project Open Data Data-Dictionary\",\n                \"description\": \"A data dictionary for this resource, compliant with the [Table Schema](https://specs.frictionlessdata.io/table-schema/) specification.\",\n                \"type\": \"object\",\n                \"required\": [\n                    \"fields\"\n                ],\n                \"properties\": {\n                    \"fields\": {\n                        \"title\": \"Dictionary Fields\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"title\": \"Field\",\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"name\",\n                                \"type\"\n                            ],\n                            \"properties\": {\n                                \"name\": {\n                                    \"title\": \"Name\",\n                                    \"description\": \"A name for this field.\",\n                                    \"type\": \"string\"\n                                },\n                                \"title\": {\n                                    \"title\": \"Title\",\n                                    \"description\": \"A human-readable title.\",\n                                    \"type\": \"string\",\n                                    \"examples\": [\n                                        \"{\\n  \\\"title\\\": \\\"My Package Title\\\"\\n}\\n\"\n                                    ]\n                                },\n                                \"type\": {\n                                    \"title\": \"Type\",\n                                    \"description\": \"The type keyword, which `MUST` be a value of `string`.\",\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                        \"string\",\n                                        \"number\",\n                                        \"integer\",\n                                        \"date\",\n                                        \"time\",\n                                        \"datetime\",\n                                        \"year\",\n                                        \"yearmonth\",\n                                        \"boolean\",\n                                        \"object\",\n                                        \"geopoint\",\n                                        \"geojson\",\n                                        \"array\",\n                                        \"duration\"\n                                    ]\n                                },\n                                \"format\": {\n                                    \"title\": \"Format\",\n                                    \"description\": \"Supported formats depend on the specified field type:\\n* For `string` the supported formats are `default`, `email`, `uri`, `binary`, and `uuid`:\\n  - **default**: any valid string.\\n  - **email**: A valid email address.\\n  - **uri**: A valid URI.\\n  - **binary**: A base64 encoded string representing binary data.\\n  - **uuid**: A string that is a uuid.\\n* For `number` only `default` is allowed.\\n* For `integer` only `default` is allowed.\\n* For `date` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string of YYYY-MM-DD.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `time` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for time.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `datetime` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for datetime.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `year` only `default` is allowed.\\n* For `yearmonth` only `default` is allowed.\\n* For `boolean` only `default` is allowed.\\n* For `object` only `default` is allowed.\\n* For `geopoint` the supported formats are `default`, `array`, and `object`:\\n  - **default**: A string of the pattern 'lon, lat', where `lon` is the longitude and `lat` is the latitude.\\n  - **array**: An array of exactly two items, where each item is either a number, or a string parsable as a number, and the first item is `lon` and the second item is `lat`.\\n  - **object**: A JSON object with exactly two keys, `lat` and `lon`\\n* For `geojson` the supported formats are `default` and `topojson`:\\n  - **default**: A geojson object as per the [GeoJSON spec](http://geojson.org/).\\n  - **topojson**: A topojson object as per the [TopoJSON spec](https://github.com/topojson/topojson-specification/blob/master/README.md).\\n* For `array` only `default` is allowed.\\n* For `duration` only `default` is allowed.\",\n                                    \"type\": \"string\",\n                                    \"default\": \"default\"\n                                }\n                            }\n                        }\n                    },\n                    \"indexes\": {\n                        \"title\": \"Dictionary Indexes\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"title\": \"Index\",\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"fields\",\n                                \"type\"\n                            ],\n                            \"properties\": {\n                                \"fields\": {\n                                    \"title\": \"Fields\",\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"title\": \"Field\",\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"name\": {\n                                                \"title\": \"Name\",\n                                                \"type\": \"string\"\n                                            },\n                                            \"length\": {\n                                                \"title\": \"Length\",\n                                                \"type\": \"integer\"\n                                            }\n                                        }\n                                    },\n                                    \"description\": \"One or more fields included in index. Must be keys from the fields object.\"\n                                },\n                                \"type\": {\n                                    \"title\": \"Type\",\n                                    \"description\": \"Index type.\",\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                        \"index\",\n                                        \"fulltext\"\n                                    ],\n                                    \"default\": \"index\"\n                                },\n                                \"description\": {\n                                    \"title\": \"Description\",\n                                    \"type\": \"string\",\n                                    \"description\": \"Description of index purpose or functionality.\"\n                                }\n                            }\n                        },\n                        \"minItems\": 0\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n\n:::\n:::\n\n   2. A specific schema definition, see <https://json-schema.org/>\n      - __GET__ `provider-data/api/1/metastore/schemas/{schema_id}`\n\n::: {.cell}\n\n```{.r .cell-code}\n\"https://data.cms.gov/provider-data/api/1/metastore/schemas/data-dictionary\" |> \n  request() |> \n  req_perform() |> \n  resp_body_string() |> \n  jsonify::pretty_json()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Data Dictionary\",\n    \"type\": \"object\",\n    \"required\": [\n        \"identifier\",\n        \"title\"\n    ],\n    \"properties\": {\n        \"identifier\": {\n            \"title\": \"Identifier\",\n            \"type\": \"string\"\n        },\n        \"title\": {\n            \"title\": \"Title\",\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"title\": \"Project Open Data Data-Dictionary\",\n            \"description\": \"A data dictionary for this resource, compliant with the [Table Schema](https://specs.frictionlessdata.io/table-schema/) specification.\",\n            \"type\": \"object\",\n            \"required\": [\n                \"fields\"\n            ],\n            \"properties\": {\n                \"fields\": {\n                    \"title\": \"Dictionary Fields\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"title\": \"Field\",\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"name\",\n                            \"type\"\n                        ],\n                        \"properties\": {\n                            \"name\": {\n                                \"title\": \"Name\",\n                                \"description\": \"A name for this field.\",\n                                \"type\": \"string\"\n                            },\n                            \"title\": {\n                                \"title\": \"Title\",\n                                \"description\": \"A human-readable title.\",\n                                \"type\": \"string\",\n                                \"examples\": [\n                                    \"{\\n  \\\"title\\\": \\\"My Package Title\\\"\\n}\\n\"\n                                ]\n                            },\n                            \"type\": {\n                                \"title\": \"Type\",\n                                \"description\": \"The type keyword, which `MUST` be a value of `string`.\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"string\",\n                                    \"number\",\n                                    \"integer\",\n                                    \"date\",\n                                    \"time\",\n                                    \"datetime\",\n                                    \"year\",\n                                    \"yearmonth\",\n                                    \"boolean\",\n                                    \"object\",\n                                    \"geopoint\",\n                                    \"geojson\",\n                                    \"array\",\n                                    \"duration\"\n                                ]\n                            },\n                            \"format\": {\n                                \"title\": \"Format\",\n                                \"description\": \"Supported formats depend on the specified field type:\\n* For `string` the supported formats are `default`, `email`, `uri`, `binary`, and `uuid`:\\n  - **default**: any valid string.\\n  - **email**: A valid email address.\\n  - **uri**: A valid URI.\\n  - **binary**: A base64 encoded string representing binary data.\\n  - **uuid**: A string that is a uuid.\\n* For `number` only `default` is allowed.\\n* For `integer` only `default` is allowed.\\n* For `date` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string of YYYY-MM-DD.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `time` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for time.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `datetime` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for datetime.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `year` only `default` is allowed.\\n* For `yearmonth` only `default` is allowed.\\n* For `boolean` only `default` is allowed.\\n* For `object` only `default` is allowed.\\n* For `geopoint` the supported formats are `default`, `array`, and `object`:\\n  - **default**: A string of the pattern 'lon, lat', where `lon` is the longitude and `lat` is the latitude.\\n  - **array**: An array of exactly two items, where each item is either a number, or a string parsable as a number, and the first item is `lon` and the second item is `lat`.\\n  - **object**: A JSON object with exactly two keys, `lat` and `lon`\\n* For `geojson` the supported formats are `default` and `topojson`:\\n  - **default**: A geojson object as per the [GeoJSON spec](http://geojson.org/).\\n  - **topojson**: A topojson object as per the [TopoJSON spec](https://github.com/topojson/topojson-specification/blob/master/README.md).\\n* For `array` only `default` is allowed.\\n* For `duration` only `default` is allowed.\",\n                                \"type\": \"string\",\n                                \"default\": \"default\"\n                            }\n                        }\n                    }\n                },\n                \"indexes\": {\n                    \"title\": \"Dictionary Indexes\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"title\": \"Index\",\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"fields\",\n                            \"type\"\n                        ],\n                        \"properties\": {\n                            \"fields\": {\n                                \"title\": \"Fields\",\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"title\": \"Field\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"name\": {\n                                            \"title\": \"Name\",\n                                            \"type\": \"string\"\n                                        },\n                                        \"length\": {\n                                            \"title\": \"Length\",\n                                            \"type\": \"integer\"\n                                        }\n                                    }\n                                },\n                                \"description\": \"One or more fields included in index. Must be keys from the fields object.\"\n                            },\n                            \"type\": {\n                                \"title\": \"Type\",\n                                \"description\": \"Index type.\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"index\",\n                                    \"fulltext\"\n                                ],\n                                \"default\": \"index\"\n                            },\n                            \"description\": {\n                                \"title\": \"Description\",\n                                \"type\": \"string\",\n                                \"description\": \"Description of index purpose or functionality.\"\n                            }\n                        }\n                    },\n                    \"minItems\": 0\n                }\n            }\n        }\n    }\n}\n```\n\n\n:::\n:::\n\n   3. Get all items for a specific schema (e.g., \"dataset\")\n      - __GET__ `provider-data/api/1/metastore/schemas/{schema_id}/items`\n\n::: {.cell}\n\n```{.r .cell-code}\n\"https://data.cms.gov/provider-data/api/1/metastore/schemas/data-dictionary\" |> \n  request() |> \n  req_perform() |> \n  resp_body_string() |> \n  jsonify::pretty_json()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Data Dictionary\",\n    \"type\": \"object\",\n    \"required\": [\n        \"identifier\",\n        \"title\"\n    ],\n    \"properties\": {\n        \"identifier\": {\n            \"title\": \"Identifier\",\n            \"type\": \"string\"\n        },\n        \"title\": {\n            \"title\": \"Title\",\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"title\": \"Project Open Data Data-Dictionary\",\n            \"description\": \"A data dictionary for this resource, compliant with the [Table Schema](https://specs.frictionlessdata.io/table-schema/) specification.\",\n            \"type\": \"object\",\n            \"required\": [\n                \"fields\"\n            ],\n            \"properties\": {\n                \"fields\": {\n                    \"title\": \"Dictionary Fields\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"title\": \"Field\",\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"name\",\n                            \"type\"\n                        ],\n                        \"properties\": {\n                            \"name\": {\n                                \"title\": \"Name\",\n                                \"description\": \"A name for this field.\",\n                                \"type\": \"string\"\n                            },\n                            \"title\": {\n                                \"title\": \"Title\",\n                                \"description\": \"A human-readable title.\",\n                                \"type\": \"string\",\n                                \"examples\": [\n                                    \"{\\n  \\\"title\\\": \\\"My Package Title\\\"\\n}\\n\"\n                                ]\n                            },\n                            \"type\": {\n                                \"title\": \"Type\",\n                                \"description\": \"The type keyword, which `MUST` be a value of `string`.\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"string\",\n                                    \"number\",\n                                    \"integer\",\n                                    \"date\",\n                                    \"time\",\n                                    \"datetime\",\n                                    \"year\",\n                                    \"yearmonth\",\n                                    \"boolean\",\n                                    \"object\",\n                                    \"geopoint\",\n                                    \"geojson\",\n                                    \"array\",\n                                    \"duration\"\n                                ]\n                            },\n                            \"format\": {\n                                \"title\": \"Format\",\n                                \"description\": \"Supported formats depend on the specified field type:\\n* For `string` the supported formats are `default`, `email`, `uri`, `binary`, and `uuid`:\\n  - **default**: any valid string.\\n  - **email**: A valid email address.\\n  - **uri**: A valid URI.\\n  - **binary**: A base64 encoded string representing binary data.\\n  - **uuid**: A string that is a uuid.\\n* For `number` only `default` is allowed.\\n* For `integer` only `default` is allowed.\\n* For `date` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string of YYYY-MM-DD.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `time` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for time.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `datetime` the supported formats are `default`, `any`, and `{PATTERN}`:\\n  - **default**: An ISO8601 format string for datetime.\\n  - **any**: Any parsable representation of a date. The implementing library can attempt to parse the datetime via a range of strategies.\\n  - **{PATTERN}**: The value can be parsed according to `{PATTERN}`, which `MUST` follow the date formatting syntax of C / Python [strftime](http://strftime.org/).\\n* For `year` only `default` is allowed.\\n* For `yearmonth` only `default` is allowed.\\n* For `boolean` only `default` is allowed.\\n* For `object` only `default` is allowed.\\n* For `geopoint` the supported formats are `default`, `array`, and `object`:\\n  - **default**: A string of the pattern 'lon, lat', where `lon` is the longitude and `lat` is the latitude.\\n  - **array**: An array of exactly two items, where each item is either a number, or a string parsable as a number, and the first item is `lon` and the second item is `lat`.\\n  - **object**: A JSON object with exactly two keys, `lat` and `lon`\\n* For `geojson` the supported formats are `default` and `topojson`:\\n  - **default**: A geojson object as per the [GeoJSON spec](http://geojson.org/).\\n  - **topojson**: A topojson object as per the [TopoJSON spec](https://github.com/topojson/topojson-specification/blob/master/README.md).\\n* For `array` only `default` is allowed.\\n* For `duration` only `default` is allowed.\",\n                                \"type\": \"string\",\n                                \"default\": \"default\"\n                            }\n                        }\n                    }\n                },\n                \"indexes\": {\n                    \"title\": \"Dictionary Indexes\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"title\": \"Index\",\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"fields\",\n                            \"type\"\n                        ],\n                        \"properties\": {\n                            \"fields\": {\n                                \"title\": \"Fields\",\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"title\": \"Field\",\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"name\": {\n                                            \"title\": \"Name\",\n                                            \"type\": \"string\"\n                                        },\n                                        \"length\": {\n                                            \"title\": \"Length\",\n                                            \"type\": \"integer\"\n                                        }\n                                    }\n                                },\n                                \"description\": \"One or more fields included in index. Must be keys from the fields object.\"\n                            },\n                            \"type\": {\n                                \"title\": \"Type\",\n                                \"description\": \"Index type.\",\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"index\",\n                                    \"fulltext\"\n                                ],\n                                \"default\": \"index\"\n                            },\n                            \"description\": {\n                                \"title\": \"Description\",\n                                \"type\": \"string\",\n                                \"description\": \"Description of index purpose or functionality.\"\n                            }\n                        }\n                    },\n                    \"minItems\": 0\n                }\n            }\n        }\n    }\n}\n```\n\n\n:::\n:::\n\n### Metastore: dataset\n\n   4. Get a single dataset.\n      - __GET__ `provider-data/api/1/metastore/schemas/dataset/items/{identifier}`\n\n::: {.cell}\n\n```{.r .cell-code}\n\"https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items/clinical_depression?show-reference-ids=true\" |> \n  request() |> \n  req_perform() |> \n  resp_body_string() |> \n  jsonify::pretty_json()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"accessLevel\": \"public\",\n    \"landingPage\": \"https://data.cms.gov/provider-data/dataset/clinical_depression\",\n    \"bureauCode\": [\n        \"009:38\"\n    ],\n    \"issued\": \"2021-01-20\",\n    \"@type\": \"dcat:Dataset\",\n    \"modified\": \"2024-01-03\",\n    \"released\": \"2024-01-18\",\n    \"keyword\": [\n        {\n            \"identifier\": \"28fcf043-93be-5044-a7b3-5e05b415e54d\",\n            \"data\": \"Linking Quality to Payment\"\n        }\n    ],\n    \"contactPoint\": {\n        \"@type\": \"vcard:Contact\",\n        \"fn\": \"ESRD QIP Helpdesk\",\n        \"hasEmail\": \"mailto:ESRDQIP@cms.hhs.gov\"\n    },\n    \"publisher\": {\n        \"identifier\": \"4c1de1c4-f083-5877-8968-7ddc04756c49\",\n        \"data\": {\n            \"@type\": \"org:Organization\",\n            \"name\": \"Centers for Medicare & Medicaid Services (CMS)\"\n        }\n    },\n    \"identifier\": \"clinical_depression\",\n    \"description\": \"This dataset includes facility details, measure score, and the state and national average measure scores for the clinical depression screening and follow up reporting measure included in the PY 2024 ESRD QIP.\",\n    \"title\": \"ESRD QIP - Clinical Depression Screening and Follow-up - Payment Year 2024\",\n    \"programCode\": [\n        \"009:000\"\n    ],\n    \"distribution\": [\n        {\n            \"identifier\": \"3d1ee652-830b-5f3d-bce8-be25ea55c759\",\n            \"data\": {\n                \"@type\": \"dcat:Distribution\",\n                \"downloadURL\": \"https://data.cms.gov/provider-data/sites/default/files/resources/71946e118019d4ad8016531d8b9eb077_1704384306/CLINICAL_DEPRESSION.csv\",\n                \"mediaType\": \"text/csv\",\n                \"%Ref:downloadURL\": [\n                    {\n                        \"identifier\": \"71946e118019d4ad8016531d8b9eb077__1704384306__source\",\n                        \"data\": {\n                            \"filePath\": \"s3://pdc-s3-dfc-data/CLINICAL_DEPRESSION.csv\",\n                            \"identifier\": \"71946e118019d4ad8016531d8b9eb077\",\n                            \"mimeType\": \"text/csv\",\n                            \"perspective\": \"source\",\n                            \"version\": \"1704384306\",\n                            \"checksum\": null\n                        }\n                    },\n                    {\n                        \"identifier\": \"71946e118019d4ad8016531d8b9eb077__1704384306__local_url\",\n                        \"data\": {\n                            \"filePath\": \"https://h-o.st/provider-data/sites/default/files/resources/71946e118019d4ad8016531d8b9eb077_1704384306/CLINICAL_DEPRESSION.csv\",\n                            \"identifier\": \"71946e118019d4ad8016531d8b9eb077\",\n                            \"mimeType\": \"text/csv\",\n                            \"perspective\": \"local_url\",\n                            \"version\": \"1704384306\",\n                            \"checksum\": null\n                        }\n                    }\n                ]\n            }\n        }\n    ],\n    \"theme\": [\n        {\n            \"identifier\": \"ea23754a-16dc-558c-9183-5189dd4588f5\",\n            \"data\": \"Dialysis facilities\"\n        }\n    ],\n    \"%modified\": \"2024-01-04T11:05:01-0500\"\n}\n```\n\n\n:::\n:::\n\n### Datastore: import\n\n   5. Datastore statistics: Returns the numbers of rows and columns, and a list of columns headers from the datastore\n      - __GET__ `provider-data/api/1/datastore/imports/{identifier}`\n\n::: {.cell}\n\n```{.r .cell-code}\n\"https://data.cms.gov/provider-data/api/1/datastore/imports/e7fce918-0873-519f-80ae-818e386299d1\" |> \n  request() |> \n  req_perform() |> \n  resp_body_string() |> \n  jsonify::pretty_json()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n{\n    \"numOfColumns\": 13,\n    \"columns\": {\n        \"record_number\": {\n            \"type\": \"serial\",\n            \"length\": 10,\n            \"unsigned\": true,\n            \"not null\": true,\n            \"mysql_type\": \"int\"\n        },\n        \"cms_certification_number_ccn\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"CMS Certification Number (CCN)\"\n        },\n        \"provider_name\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Provider Name\"\n        },\n        \"address_line_1\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Address Line 1\"\n        },\n        \"address_line_2\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Address Line 2\"\n        },\n        \"citytown\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"City/Town\"\n        },\n        \"state\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"State\"\n        },\n        \"zip_code\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"ZIP Code\"\n        },\n        \"countyparish\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"County/Parish\"\n        },\n        \"telephone_number\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Telephone Number\"\n        },\n        \"cms_region\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"CMS Region\"\n        },\n        \"ownership_type\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Ownership Type\"\n        },\n        \"certification_date\": {\n            \"type\": \"text\",\n            \"mysql_type\": \"text\",\n            \"description\": \"Certification Date\"\n        }\n    },\n    \"numOfRows\": 1229\n}\n```\n\n\n:::\n:::\n\n### Datastore: query\n\n### Datastore: SQL Query\n\n### Search\n\n### Schemas\n",
    "supporting": [
      "faq_provider_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}