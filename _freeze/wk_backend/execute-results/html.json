{
  "hash": "e0c6b50fd32a9eb8e4e5d99983007aa8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Backend\"\neditor_options: \n   chunk_output_type: console\n---\n\n\n\n## `S7` Classes\n\n### `class_endpoint`\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_Identifier <- new_class(\n  name       = \"class_Identifier\",\n  properties = list(\n    url      = new_property(\n      class  = NULL | class_list,\n      setter = function(self, value) {\n        if (not_null(value)) {\n          self@url <- url_parse(value)\n          self\n        }}),\n    totalRows = new_property(\n      class  = NULL | class_integer,\n      getter = function(self) {\n        if (not_null(self@url)) {\n          url_build(self@url) |>\n            request() |>\n            req_url_path_append(\"stats\") |>\n            req_perform() |>\n            resp_body_json(simplifyVector = TRUE) |>\n            gelm(\"total_rows\")\n        }})\n    )\n)\n```\n:::\n\n### `class_resources`\n\n::: {.cell}\n\n```{.r .cell-code}\nex_url <- paste0(\n  \"https://data.cms.gov/\",\n  \"data-api/v1/\",\n  \"dataset-resources/\",\n  \"7dcf9ea6-ee2f-4bf1-8b5d-39c18b0e8541\"\n  )\n\nget_resources <- function(x) {\n  \n  fload(x, query = \"/data\") |> \n    as_tbl() |>\n    fcompute(file = name,\n             size = roundup(fileSize / 1e6),\n             ext = tools::file_ext(downloadURL),\n             downloadurl = downloadURL) |> \n    roworder(ext, -size)\n}\n\nclass_resources <- new_class(\n  name       = \"class_resources\",\n  properties = list(\n    url      = class_character,\n    files    = new_property(\n      class  = class_list,\n      getter = function(self)\n        fload(self@url, query = \"/data\") |>\n        cheapr::as_df() |>\n        fcompute(\n          file         = name,\n          size         = roundup(fileSize / 1e6),\n          ext          = tools::file_ext(downloadURL),\n          downloadurl  = downloadURL) |>\n        roworder(ext, -size)\n      )\n    ),\n  validator = function(self) \n    if (length(self@url) != 1L) \"must be length 1\"\n)\n\nget_resources(ex_url)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n  file                                                    size ext   downloadurl\n  <chr>                                                  <dbl> <chr> <chr>      \n1 Medicare FFS Public Provider Enrollment Q4 2024       317.   csv   https://da…\n2 Reassignment Sub-File 2024 Q4                         112.   csv   https://da…\n3 Address Sub-File 2024 Q4                               43.1  csv   https://da…\n4 Secondary Specialty Sub-File 2024 Q4                   28.3  csv   https://da…\n5 Medicare Fee-For-Service Public Provider Enrollment …   0.56 pdf   https://da…\n6 Medicare FFS  Public Provider Enrollment Methodology    0.06 pdf   https://da…\n7 Medicare Fee-For-Service Public Provider Enrollment …   0.03 pdf   https://da…\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- class_resources(ex_url)\n\nx@files |> \n  as_tbl()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 4\n  file                                                    size ext   downloadurl\n  <chr>                                                  <dbl> <chr> <chr>      \n1 Medicare FFS Public Provider Enrollment Q4 2024       317.   csv   https://da…\n2 Reassignment Sub-File 2024 Q4                         112.   csv   https://da…\n3 Address Sub-File 2024 Q4                               43.1  csv   https://da…\n4 Secondary Specialty Sub-File 2024 Q4                   28.3  csv   https://da…\n5 Medicare Fee-For-Service Public Provider Enrollment …   0.56 pdf   https://da…\n6 Medicare FFS  Public Provider Enrollment Methodology    0.06 pdf   https://da…\n7 Medicare Fee-For-Service Public Provider Enrollment …   0.03 pdf   https://da…\n```\n\n\n:::\n:::\n\n### `class_distribution`\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_distribution <- new_class(\n  name           = \"class_distribution\",\n  properties     = list(\n    title        = class_character,\n    description  = class_character,\n    format       = class_character,\n    accessurl    = class_character,\n    resources    = class_resources,\n    modified     = class_Date,\n    temporal     = class_character,\n    downloadurl  = class_character,\n    mediaType    = class_character\n    )\n  )\n\nclass_distribution\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class_distribution> class\n@ parent     : <S7_object>\n@ constructor: function(title, description, format, accessurl, resources, modified, temporal, downloadurl, mediaType) {...}\n@ validator  : <NULL>\n@ properties :\n $ title      : <character>      \n $ description: <character>      \n $ format     : <character>      \n $ accessurl  : <character>      \n $ resources  : <class_resources>\n $ modified   : S3<Date>         \n $ temporal   : <character>      \n $ downloadurl: <character>      \n $ mediaType  : <character>      \n```\n\n\n:::\n:::\n\n### `class_dataset`\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_dataset <- new_class(\n  name = \"class_dataset\",\n  properties = list(\n    title        = class_character,\n    periodicity  = class_character,\n    contact      = class_character,\n    dictionary   = class_character,\n    description  = class_character,\n    distribution = class_distribution,\n    identifier   = class_character,\n    site         = class_character,\n    issued       = class_Date,\n    modified     = class_Date,\n    released     = class_Date,\n    references   = class_character,\n    temporal     = class_character,\n    group        = class_character\n  ))\n\nclass_dataset\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class_dataset> class\n@ parent     : <S7_object>\n@ constructor: function(title, periodicity, contact, dictionary, description, distribution, identifier, site, issued, modified, released, references, temporal, group) {...}\n@ validator  : <NULL>\n@ properties :\n $ title       : <character>         \n $ periodicity : <character>         \n $ contact     : <character>         \n $ dictionary  : <character>         \n $ description : <character>         \n $ distribution: <class_distribution>\n $ identifier  : <character>         \n $ site        : <character>         \n $ issued      : S3<Date>            \n $ modified    : S3<Date>            \n $ released    : S3<Date>            \n $ references  : <character>         \n $ temporal    : <character>         \n $ group       : <character>         \n```\n\n\n:::\n:::\n\n### `class_catalog`\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_catalog <- new_class(\n  name = \"class_catalog\",\n  properties = list(\n    groups = class_list),\n  validator = function(self) \n    if (!rlang::is_named(self@groups)) \"all @groups must be named\"\n  )\n\nclass_catalog(groups = list(npi = 1, ccn = \"clinicians\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class_catalog>\n @ groups:List of 2\n .. $ npi: num 1\n .. $ ccn: chr \"clinicians\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntry(class_catalog(groups = list(1, \"clinicians\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nError : <class_catalog> object is invalid:\n- all @groups must be named\n```\n\n\n:::\n:::\n\n## National Downloadable File\n\n::: {.cell}\n\n```{.r .cell-code}\nndf_identifier <- \\(x) {\n  kit::nswitch(x,\n    \"affiliations\", \"27ea-46a8\",\n    \"clinicians\", \"mj5m-pzi6\",\n    default = NA_character_,\n    nThread = 4L)\n}\n\nhttr2::url_parse(\"https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items/\")\n\nurl_tmp <- httr2::url_parse(\"https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items/\") |> \n  httr2::url_build() |> \n  httr2::request()\n\nhttr2::req_template(\n  url_tmp, \n  \"/{fname}?show-reference-ids=true\", \n  fname = ndf_identifier(\"affiliations\"))\n\nhttr2::url_parse(\"https://data.cms.gov/provider-data/api/1/metastore/schemas/dataset/items/\") |> \n  httr2::url_build() |> \n  httr2::request() |> \n  httr2::req_url_path_append(ndf_identifier(\"affiliations\")) |> \n  httr2::req_url_path_append(\"?show-reference-ids=true\") |>\n  httr2::req_perform() |>\n  httr2::resp_body_json(check_type = FALSE, simplifyVector = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$accessLevel\n[1] \"public\"\n\n$landingPage\n[1] \"https://data.cms.gov/provider-data/dataset/27ea-46a8\"\n\n$bureauCode\n[1] \"009:38\"\n\n$issued\n[1] \"2023-08-17\"\n\n$`@type`\n[1] \"dcat:Dataset\"\n\n$modified\n[1] \"2025-01-31\"\n\n$released\n[1] \"2025-02-13\"\n\n$keyword\n                            identifier       data\n1 f62da856-f3e0-565a-a6e0-f6aefcafde00 Clinicians\n\n$contactPoint\n$contactPoint$`@type`\n[1] \"vcard:Contact\"\n\n$contactPoint$fn\n[1] \"CMS\"\n\n$contactPoint$hasEmail\n[1] \"mailto:QPP@cms.hhs.gov\"\n\n\n$publisher\n$publisher$identifier\n[1] \"4c1de1c4-f083-5877-8968-7ddc04756c49\"\n\n$publisher$data\n$publisher$data$`@type`\n[1] \"org:Organization\"\n\n$publisher$data$name\n[1] \"Centers for Medicare & Medicaid Services (CMS)\"\n\n\n\n$identifier\n[1] \"27ea-46a8\"\n\n$description\n[1] \"This is the facility affiliations data publicly reported in the Provider Data Catalog.\"\n\n$title\n[1] \"Facility Affiliation Data\"\n\n$programCode\n[1] \"009:000\"\n\n$distribution\n                            identifier        data.@type\n1 9b2443c2-d2d8-5667-98bb-fa9380955471 dcat:Distribution\n                                                                                                                       data.downloadURL\n1 https://data.cms.gov/provider-data/sites/default/files/resources/b7c4080ae144663e43353a9c35cd3f53_1738375514/Facility_Affiliation.csv\n  data.mediaType\n1       text/csv\n                                                                                                                                                                                                                                                                                                                                                                                                                                    data.%Ref:downloadURL\n1 b7c4080ae144663e43353a9c35cd3f53__1738375514__source, b7c4080ae144663e43353a9c35cd3f53__1738375514__local_url, s3://211125755750-pdc-prod-dac-data/Facility_Affiliation.csv, https://h-o.st/provider-data/sites/default/files/resources/b7c4080ae144663e43353a9c35cd3f53_1738375514/Facility_Affiliation.csv, b7c4080ae144663e43353a9c35cd3f53, b7c4080ae144663e43353a9c35cd3f53, text/csv, text/csv, source, local_url, 1738375514, 1738375514, NA, NA\n\n$theme\n                            identifier                   data\n1 2d4e6b14-abb6-5b27-8e8d-047c7832ac1d Doctors and clinicians\n\n$archiveExclude\n[1] FALSE\n\n$`%modified`\n[1] \"2025-01-31T21:05:13-0500\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta_ndf <- \\(fname) {\n  \n  stopifnot(curl::has_internet())\n  \n  x <- request(\n    paste0(\n      \"https://data.cms.gov/\",\n      \"provider-data/api/1/\",\n      \"metastore/schemas/\",\n      \"dataset/items/\",\n      switch(fname, \n             affiliations = \"27ea-46a8\", \n             clinicians   = \"mj5m-pzi6\", \n             stop(\"Invalid argument\")),\n    \"?show-reference-ids=true\")) |>\n       req_perform() |>\n       resp_body_json(\n         check_type     = FALSE,\n         simplifyVector = TRUE)\n  \n  distro <- gelm(gelm(x, \"distribution\"), \"identifier\")\n  \n  y <- request(\n    paste0(\n    \"https://data.cms.gov/\", \n    \"provider-data/api/1/\",\n    \"datastore/query/\", \n    distro, \n    \"?limit=1&offset=100&\",\n    \"count=true&results=true&\", \n    \"schema=true&keys=true&\",\n    \"format=json&rowIds=true\")) |>\n       req_perform() |>\n       resp_body_json(\n         check_type     = FALSE,\n         simplifyVector = TRUE)\n  \n  z <- gelm(gelm(gelm(y, \"schema\"), distro), \"fields\")\n  \n  list(\n    title        = gelm(x, \"title\"),\n    description  = gelm(x, \"description\"),\n    identifier   = gelm(gelm(x, \"identifier\"), \"identifier\"),\n    distribution = distro,\n    issued       = gelm(x, \"issued\"),\n    modified     = gelm(x, \"modified\")[[1]],\n    released     = gelm(x, \"released\"),\n    dimensions   = paste0(gelm(gelm(y, \"count\"), is.numeric), \" x \", gelm(gelm(z, \"record_number\"), \"length\")),\n    fields       = names(z),\n    site         = gelm(x, \"landingPage\"),\n    csv          = gelm(gelm(gelm(x, \"distribution\"), \"data\"), \"downloadURL\", m = \"df\"),\n    dictionary   = paste0(\n      \"https://data.cms.gov/provider-data/sites/default/files/data_dictionaries/physician/DOC_Data_Dictionary.pdf\"\n    )\n  )\n  \n}\n```\n:::\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta_ndf(\"affiliations\") |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $title        c1  Facility Affiliation Data\n- $description  c1  This is the facility affiliations data publicly reporte ...\n- $identifier   c1  27ea-46a8\n- $distribution c1  9b2443c2-d2d8-5667-98bb-fa9380955471\n- $issued       c1  2023-08-17\n- $modified     c1  2025-01-31\n- $released     c1  2025-02-13\n- $dimensions   c1  1564992 x 10\n- $fields       c10 record_number npi ind_pac_id provider_last_name provide ...\n- $site         c1  https://data.cms.gov/provider-data/dataset/27ea-46a8\n- $csv          c1  https://data.cms.gov/provider-data/sites/default/files/ ...\n- $dictionary   c1  https://data.cms.gov/provider-data/sites/default/files/ ...\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta_ndf(\"clinicians\") |> \n  purse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n- $title        c1  National Downloadable File\n- $description  c1  The Doctors and Clinicians national downloadable file i ...\n- $identifier   c1  mj5m-pzi6\n- $distribution c1  02e2d0d9-684f-5c79-86d7-6d69834dcf0b\n- $issued       c1  2023-08-17\n- $modified     c1  2025-01-31\n- $released     c1  2025-02-13\n- $dimensions   c1  2610829 x 10\n- $fields       c32 record_number npi ind_pac_id ind_enrl_id provider_last_ ...\n- $site         c1  https://data.cms.gov/provider-data/dataset/mj5m-pzi6\n- $csv          c1  https://data.cms.gov/provider-data/sites/default/files/ ...\n- $dictionary   c1  https://data.cms.gov/provider-data/sites/default/files/ ...\n```\n\n\n:::\n:::\n",
    "supporting": [
      "wk_backend_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}