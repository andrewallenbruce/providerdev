{
  "hash": "c1b4fcadbf3158cfe0472ba7c8b27686",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Query DSL\"\neditor_options: \n   chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"wiejwtaeax\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#wiejwtaeax table {\n  font-family: 'JetBrains Mono', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#wiejwtaeax thead, #wiejwtaeax tbody, #wiejwtaeax tfoot, #wiejwtaeax tr, #wiejwtaeax td, #wiejwtaeax th {\n  border-style: none;\n}\n\n#wiejwtaeax p {\n  margin: 0;\n  padding: 0;\n}\n\n#wiejwtaeax .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#wiejwtaeax .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#wiejwtaeax .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#wiejwtaeax .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_bottom_border {\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_col_headings {\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#wiejwtaeax .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#wiejwtaeax .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#wiejwtaeax .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#wiejwtaeax .gt_column_spanner {\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#wiejwtaeax .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#wiejwtaeax .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#wiejwtaeax .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#wiejwtaeax .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#wiejwtaeax .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#wiejwtaeax .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#wiejwtaeax .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wiejwtaeax .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#wiejwtaeax .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#wiejwtaeax .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#wiejwtaeax .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wiejwtaeax .gt_first_summary_row {\n  border-top-style: none;\n  border-top-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#wiejwtaeax .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wiejwtaeax .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: none;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: none;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#wiejwtaeax .gt_table_body {\n  border-top-style: none;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wiejwtaeax .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#wiejwtaeax .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#wiejwtaeax .gt_left {\n  text-align: left;\n}\n\n#wiejwtaeax .gt_center {\n  text-align: center;\n}\n\n#wiejwtaeax .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#wiejwtaeax .gt_font_normal {\n  font-weight: normal;\n}\n\n#wiejwtaeax .gt_font_bold {\n  font-weight: bold;\n}\n\n#wiejwtaeax .gt_font_italic {\n  font-style: italic;\n}\n\n#wiejwtaeax .gt_super {\n  font-size: 65%;\n}\n\n#wiejwtaeax .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#wiejwtaeax .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#wiejwtaeax .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#wiejwtaeax .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#wiejwtaeax .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#wiejwtaeax .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#wiejwtaeax .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#wiejwtaeax .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#wiejwtaeax div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"true\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><i>JSON<b>:</b>API</i> <span style=\"color:gray;\"><b>Allowed Operations</b></span></td>\n    </tr>\n    \n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">=</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">default</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">&lt;&gt;</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">notequal(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">&gt;</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">greaterthan(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">&gt;=</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">greater_or_equal(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">&lt;</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">lessthan(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">&lt;=</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">less_or_equal(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">STARTS_WITH</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">startswith(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">CONTAINS</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">includes(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">ENDS_WITH</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">endswith(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">IN</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">in(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">NOT IN</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">notin(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">BETWEEN</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">inside(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">NOT BETWEEN</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">outside(x)</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">IS NULL</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">X</td></tr>\n    <tr><td headers=\"ops\" class=\"gt_row gt_left\">IS NOT NULL</td>\n<td headers=\"impl\" class=\"gt_row gt_left\">X</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n## `class_args`\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_numeric <- new_union(NULL, class_numeric)\nnull_vector  <- new_union(NULL, class_vector)\n\nclass_args <- new_class(\n  \"class_args\",\n  properties = list(\n    id     = null_numeric,\n    state  = null_vector,\n    name   = null_vector,\n    number = null_numeric\n  ),\n  validator = function(self) { \n    if (not_null(self@state) && \n        any(!self@state %in% state.abb)) \n      paste(\"`state`\", self@state, \"not found\")\n  }\n)\n\ntry(class_args(\n  id     = 1234567890, \n  state  = \"ZZ\",\n  number = \"300.12\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nError : <class_args> object properties are invalid:\n- @number must be <NULL>, <integer>, or <double>, not <character>\n```\n\n\n:::\n\n```{.r .cell-code}\ntry(class_args(\n  state  = \"ZZ\",\n  name   = \"Jerry\",\n  number = 300.12))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nError : <class_args> object is invalid:\n- `state` ZZ not found\n```\n\n\n:::\n\n```{.r .cell-code}\nclass_args(state  = \"GA\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<class_args>\n @ id    : NULL\n @ state : chr \"GA\"\n @ name  : NULL\n @ number: NULL\n```\n\n\n:::\n:::\n\n## `query_*`\n\n::: {.cell}\n\n```{.r .cell-code}\nquery_equals <- function(args) {\n  glue::glue(\n  \"\n  filter[f{seq_along(args)}][condition][path]={names(args)}\n  filter[f{seq_along(args)}][condition][operator]==\n  filter[f{seq_along(args)}][condition][value]={delist(args)}\n  \"\n  )\n}\n\nquery_add_filter <- function(query) {\n  glue::glue()\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprotofunc <- function(id     = NULL, \n                      state  = NULL, \n                      name   = NULL, \n                      number = NULL) {\n  arg <- class_args(\n    id     = id,\n    state  = state,\n    name   = name,\n    number = number)\n  \n  query_equals(compact(props(arg)))\n  \n}\n\nprotofunc(state  = \"GA\", \n          name   = \"Jerry\", \n          number = 300.12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfilter[f1][condition][path]=state\nfilter[f1][condition][operator]==\nfilter[f1][condition][value]=GA\nfilter[f2][condition][path]=name\nfilter[f2][condition][operator]==\nfilter[f2][condition][value]=Jerry\nfilter[f3][condition][path]=number\nfilter[f3][condition][operator]==\nfilter[f3][condition][value]=300.12\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngreater_than <- \\(arg, value) {\n  glue::glue(\n  \"\n  [condition][path]={arg}&\n  [condition][operator]=>&\n  [condition][value]={value}&\n  \"\n  )\n}\n\ngreater_than(\"overall_rating\", 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[condition][path]=overall_rating&\n[condition][operator]=>&\n[condition][value]=3&\n```\n\n\n:::\n\n```{.r .cell-code}\ngreater_or_equal <- \\(arg, value) {\n  glue::glue(\n  \"filter[fID-1][condition][path]={arg}&\\\\\n  filter[fID-1][condition][operator]=>=&\\\\\n  filter[fID-1][condition][value]={value}\"\n  )\n}\n\ngreater_or_equal(\"overall_rating\", 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfilter[fID-1][condition][path]=overall_rating&filter[fID-1][condition][operator]=>=&filter[fID-1][condition][value]=3\n```\n\n\n:::\n\n```{.r .cell-code}\ntest_url <- glue::as_glue(\"https://data.cms.gov/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data?size=10&offset=0&\")\n\ntest_url <- test_url + greater_or_equal(\"overall_rating\", 3)\n\ncurl::curl_parse_url(test_url)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$url\n[1] \"https://data.cms.gov/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data?size=10&offset=0&filter[fID-1][condition][path]=overall_rating&filter[fID-1][condition][operator]=>=&filter[fID-1][condition][value]=3\"\n\n$scheme\n[1] \"https\"\n\n$host\n[1] \"data.cms.gov\"\n\n$port\nNULL\n\n$path\n[1] \"/data-api/v1/dataset/d10d792e-ea6e-4145-8512-34efbc1be04b/data\"\n\n$query\n[1] \"size=10&offset=0&filter[fID-1][condition][path]=overall_rating&filter[fID-1][condition][operator]=>=&filter[fID-1][condition][value]=3\"\n\n$fragment\nNULL\n\n$user\nNULL\n\n$password\nNULL\n\n$params\n                              size                             offset \n                              \"10\"                                \"0\" \n    filter[fID-1][condition][path] filter[fID-1][condition][operator] \n                  \"overall_rating\"                                \">\" \n   filter[fID-1][condition][value] \n                               \"3\" \n```\n\n\n:::\n:::\n\n## `class_query`\n\n::: {.cell}\n\n```{.r .cell-code}\nclass_query <- new_class(\n  \"class_query\",\n  properties = list(\n    path     = class_character,\n    operator = class_character,\n    value    = class_vector,\n    limit    = class_numeric,\n    sort     = class_character, \n    column   = class_vector,\n    group    = new_property(\n      class_list,\n      default = list(\n        conjunction = \"AND\",\n        memberOf    = \"\"))\n  )\n)\n```\n:::\n\n--------------------------------------------------------------------------------\n\n## Building Queries\n\n   1. Select Dataset/Method\n   1. Build JSON Query\n   1. Retrieve Number of Results\n   1. Build Offset Sequence\n   1. Build Request\n\n```{.yaml}\ncatalog: public\n  format: API\n  description: latest\n  title: Medicare Fee-For-Service Public Provider Enrollment\n  url:\n    scheme: https:\n    host: data.cms.gov\n    path:\n      head: data-api/v1/dataset\n      guid: 9887a515-7552-4693-bf58-735c77af46d7\n      tail: data-viewer\n      nobs: stats\n    query:\n      filter: 1\n      path: PROVIDER_TYPE_DESC\n      operator: =\n      value: PRACTITIONER - GENERAL PRACTICE\n```\n",
    "supporting": [
      "wk_query_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}