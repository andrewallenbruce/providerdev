---
editor_options: 
   chunk_output_type: console
---

```{r}
#| label: setup-common-01
#| include: false
#| warning: false
source("includes/_common.R")
```

# CPC Initiative {#sec-cpc}

The __Comprehensive Primary Care (CPC) Initiative - Participating Primary Care Practices__ dataset provides a list of practices involved in a multi-payer initiative which fosters collaboration between public and private health care payers to strengthen primary care.

## Metadata

```{r}
#| label: s7_object
#| echo: false
end <- care_endpoint("cpc_primary")
print_meta(end, "care")
```

### Resources

```{r}
#| label: resources
#| echo: false
print_resources(end)
```

### Dictionary

```{r}
#| label: data_dict
#| echo: false
dict <- new_tbl(
  field = c(
    "Name of Initiative", 
    "Participating Practice", 
    "Participating Practice Location", 
    "State", 
    "City", 
    "Geographic Reach", 
    "Street Address", 
    "Zip Code"
  ),
  description = c(
    "Name of the initiative.", 
    "Participating practice's name.", 
    "Participating practice's location, including longitude and latitude.", 
    "State where the participating practice is located.", 
    "City where the participating practice is located.", 
    "Geographic reach of the participating practice. This field is not currently in use.", 
    "Street where the participating practice is located.",
    "Zip code of the participating practice. This field is not currently in use."
  )
)

set_names(dict$description, dict$field) |> 
  print_ls(postfix = " ==")
```

## Data

```{r}
#| label: http_request
#| message: true
res <- quick("cpc_primary", limit = 5000) |>
  slt(
    practice = "Participating Practice",
    location = "Participating Practice Location",
    state    = "State",
    city     = "City",
    address  = "Street Address"
  ) |>
  mtt(
    location = unlist(
      stri_extract_all_regex(location, "(?<=\\().*(?=\\))"),
      use.names = FALSE
    ),
    lat = stri_extract(location, regex = ".*(?=\\,)") |> as.double(),
    lon = stri_extract(location, regex = "(?<=\\,\\s).*") |> as.double(),
    location = NULL
  ) |> 
  sf::st_as_sf(
      coords = c("lon", "lat"),
      crs = sf::st_crs(4326),
      na.fail = FALSE)

res_ny <- res |> 
  dplyr::filter(state == "NY")
```


```{r}
#| label: map
#| message: false
#| warning: false
library(usmap)
library(ggplot2)

res_map <- usmap_transform(res_ny)

plot_usmap(
  "counties",
  include            = c("NY"),
  color              = "white", 
  fill               = "grey80", 
  linewidth          = 0.25) +
  geom_sf(data       = res_map, 
          color      = "orange"
          # shape      = 21,
          # size       = 3
          ) +
  ggrepel::geom_label_repel(
    data             = res_map,
    aes(label        = practice, 
        geometry     = geometry),
    size             = 3, 
    alpha            = 0.8,
    label.size       = 0,
    segment.color    = "red", 
    segment.size     = 1,
    point.padding    = 0.5,
    stat             = "sf_coordinates", 
    seed             = 1002,
    force            = 5,
    max.overlaps     = 20) +
  theme(
    panel.background = element_rect(
      color          = "white", 
      fill           = "lightyellow"))
```
