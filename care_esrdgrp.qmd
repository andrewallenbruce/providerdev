---
editor_options: 
   chunk_output_type: console
---

```{r}
#| label: setup-common-01
#| include: false
#| warning: false
source("includes/_common.R")
```

# ESRD Group Performance {#sec-esrdgrp}

The __End-Stage Renal Disease (ESRD) Facility Aggregation Group Performance__ dataset provides performance information in the __ESRD Treatment Choices (ETC) Model__. 

The dataset includes information on Performance Payment Adjustment (PPA), Modality Performance Score (MPS), home dialysis rate, and transplant rate, as well as the individual components of each rate for each model participant ESRD facility aggregation group. 

[All ESRD facilities within the same aggregation group share the same performance information. The supplementary aggregation group crosswalk file may be used to map aggregation groups to individual ETC Participant ESRD facilities.]{.aside}

## Metadata

```{r}
#| label: s7_object
#| echo: false
end <- care_endpoint("esrd_group_perf")
print_meta(end, "care")
```

### Resources

```{r}
#| label: resources
#| echo: false
print_resources(end)
```

### Dictionary

```{r}
#| label: data_dict_rvest
#| echo: false
#| eval: false
# browse_link(end, link = "dictionary")

# html <- rvest::read_html_live(end@metadata$dictionary)

html$print(n = Inf)

dict_txt <- html$html_elements(".ArticleDictionary .ArticleDictionary__inner .ArticleDictionary__definition") |> 
  rvest::html_element("p") |> 
  rvest::html_text2()

new_tbl(
  field = c(
    "AGG_ID",
    "HRR_NUM_MY",
    "HDR_MY",
    "HDR_DNM_MY",
    "HDR_NUM_MY",
    "HD_NUM_MY",
    "SD_NUM_MY",
    "NOCD_NUM_MY",
    "TR_MY_ACHSCR",
    "TR_MY_IMPSCR",
    "TWR_DNM_MY",
    "TWR_NUM_MY",
    "LDT_DNM_MY",
    "LDT_NUM_MY",
    "BENECNT_LDT_MY",
    "HEI_HDR",
    "HDR_DELIS_DIFF",
    "HDR_DELIS_MY",
    "HDR_DNM_DELIS_MY",
    "HDR_NUM_DELIS_MY",
    "HEI_TR",
    "TR_DELIS_DIFF",
    "TR_DELIS_MY",
    "TWR_DNM_DELIS_MY",
    "TWR_NUM_DELIS_MY",
    "LDT_DNM_DELIS_MY",
    "LDT_NUM_DELIS_MY",
    "MPS",
    "PPA",
    "PPA_PERIOD",
    "MY"
  ),
  description = c(
    dict_txt
    )) |> 
  write_csv(here::here("data", "esrd_group_perf.csv"))
```

```{r}
#| label: data_dict
#| echo: false
dict <- read_csv(here("data", "esrd_group_perf.csv"), show_col_types = FALSE)
dict <- set_names(str_wrap(dict$description, width = 60), dict$field)
glue_col("{red {underline {names(dict)}}}\n{silver {unname(dict)}}\n\n")
```

## Data

```{r}
#| label: http_request
#| message: false
#| warning: false
#| echo: false
sent_NA <- \(x) cheapr_if_else(x == -9999 | x == -9998, NA_real_, x)

resp <- quick("esrd_group_perf", limit = 5000) |> 
  mtt(
    HRR_NUM_MY       = factor_(HRR_NUM_MY),
    HDR_MY           = as.numeric(HDR_MY),
    HDR_DNM_MY       = as.numeric(HDR_DNM_MY) |> sent_NA(),
    HDR_NUM_MY       = as.numeric(HDR_NUM_MY) |> sent_NA(), 
    HD_NUM_MY        = as.numeric(HD_NUM_MY) |> sent_NA(), 
    SD_NUM_MY        = as.numeric(SD_NUM_MY) |> sent_NA(), 
    NOCD_NUM_MY      = as.numeric(NOCD_NUM_MY) |> sent_NA(),
    TR_MY_ACHSCR     = as.numeric(TR_MY_ACHSCR),
    TR_MY_IMPSCR     = as.numeric(TR_MY_IMPSCR),
    TWR_DNM_MY       = as.numeric(TWR_DNM_MY) |> sent_NA(),
    TWR_NUM_MY       = as.numeric(TWR_NUM_MY) |> sent_NA(),
    LDT_DNM_MY       = as.numeric(LDT_DNM_MY) |> sent_NA(),
    LDT_NUM_MY       = as.numeric(LDT_NUM_MY) |> sent_NA(),
    BENECNT_LDT_MY   = as.numeric(BENECNT_LDT_MY) |> sent_NA(),
    HEI_HDR          = as.numeric(HEI_HDR),
    HDR_DELIS_DIFF   = as.numeric(HDR_DELIS_DIFF),
    HDR_DELIS_MY     = as.numeric(HDR_DELIS_MY),
    HDR_DNM_DELIS_MY = as.numeric(HDR_DNM_DELIS_MY) |> sent_NA(),
    HDR_NUM_DELIS_MY = as.numeric(HDR_NUM_DELIS_MY) |> sent_NA(),
    HEI_TR           = as.numeric(HEI_TR),
    TR_DELIS_DIFF    = as.numeric(TR_DELIS_DIFF),
    TR_DELIS_MY      = as.numeric(TR_DELIS_MY),
    TWR_DNM_DELIS_MY = as.numeric(TWR_DNM_DELIS_MY) |> sent_NA(), 
    TWR_NUM_DELIS_MY = as.numeric(TWR_NUM_DELIS_MY) |> sent_NA(), 
    LDT_DNM_DELIS_MY = as.numeric(LDT_DNM_DELIS_MY) |> sent_NA(), 
    LDT_NUM_DELIS_MY = as.numeric(LDT_NUM_DELIS_MY) |> sent_NA(), 
    MPS              = as.numeric(MPS),
    PPA              = as.numeric(PPA),
    PPA_PERIOD       = factor_(PPA_PERIOD),
    MY               = factor_(MY))
resp
```

## Overview

```{r}
#| label: codebook
#| echo: false
resp |> data_codebook()
```

### Distribution

```{r}
#| label: distribution
#| message: false
#| warning: false
#| echo: false
res <- describe_distribution(resp)
res
```

```{r}
#| label: distribution_plot
#| layout-ncol: 2
#| message: false
#| warning: false
#| echo: false
plots <- plot(res, dispersion = TRUE)
walk(plots, print)
```
